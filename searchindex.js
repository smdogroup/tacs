Search.setIndex({"docnames": ["caps2tacs/caps2tacs", "caps2tacs/main", "core/TACS", "core/constitutive", "core/core", "core/elements", "core/functions", "examples/Example-CRM_Optimization", "examples/Example-Plate", "examples/Example-Transient_Battery", "index", "install", "interfaces", "pytacs/adjacency", "pytacs/buckling", "pytacs/constraints", "pytacs/dvcon", "pytacs/modal", "pytacs/panel_length", "pytacs/problems", "pytacs/pytacs", "pytacs/pytacs_module", "pytacs/static", "pytacs/transient", "pytacs/volume", "theory/elements_theory", "theory/shell_element", "theory/theory"], "filenames": ["caps2tacs/caps2tacs.rst", "caps2tacs/main.rst", "core/TACS.rst", "core/constitutive.rst", "core/core.rst", "core/elements.rst", "core/functions.rst", "examples/Example-CRM_Optimization.rst", "examples/Example-Plate.rst", "examples/Example-Transient_Battery.rst", "index.rst", "install.rst", "interfaces.rst", "pytacs/adjacency.rst", "pytacs/buckling.rst", "pytacs/constraints.rst", "pytacs/dvcon.rst", "pytacs/modal.rst", "pytacs/panel_length.rst", "pytacs/problems.rst", "pytacs/pytacs.rst", "pytacs/pytacs_module.rst", "pytacs/static.rst", "pytacs/transient.rst", "pytacs/volume.rst", "theory/elements_theory.rst", "theory/shell_element.rst", "theory/theory.rst"], "titles": ["caps2tacs", "Installation of ESP/CAPS", "Direct", "constitutive module", "Core modules", "elements module", "functions module", "CRM Optimization", "Plate under static load", "Battery pack during thermal runaway", "TACS Overview", "Install", "Interfaces", "AdjacencyConstraint", "BucklingProblem", "Constraint classes", "DVConstraint", "ModalProblem", "PanelLengthConstraint", "Problem classes", "pyTACS", "pyTACS class", "StaticProblem", "TransientProblem", "VolumeConstraint", "&lt;no title&gt;", "Beam and shell elements in TACS", "Theory"], "terms": {"The": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 20, 21, 22, 23, 24, 26], "modul": [0, 1, 10, 21, 22, 23], "i": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 20, 21, 22, 23, 24, 26], "python": [0, 1, 2, 12, 20, 21], "interfac": [0, 2, 10, 20, 21], "run": [0, 1, 5, 7, 11, 20], "tac": [0, 1, 2, 3, 5, 6, 7, 8, 9, 12, 13, 14, 16, 17, 18, 20, 21, 22, 23, 24, 27], "analysi": [0, 1, 2, 3, 5, 8, 9, 10, 11, 14, 17, 20, 21, 22, 23, 26], "geometri": [0, 1, 5, 8, 26], "built": [0, 1, 6, 11], "esp": [0, 14, 17, 22, 23], "cap": [0, 14, 17, 22, 23], "engin": [0, 1, 14, 22, 23], "sketch": [0, 1], "pad": [0, 1], "top": [0, 3], "pytac": [0, 2, 8, 9, 10, 12, 13, 14, 16, 17, 18, 22, 23, 24], "tacsaim": [0, 1, 14, 17, 22, 23], "from": [0, 1, 2, 5, 6, 7, 8, 9, 10, 13, 14, 16, 17, 18, 21, 22, 23, 24, 26], "us": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 20, 21, 22, 23, 24, 26], "funtofem": [0, 1], "size": [0, 1, 2, 13, 14, 16, 17, 18, 21, 22, 23, 24], "shape": [0, 1, 2, 3, 14, 17, 21, 22, 23, 26], "optim": [0, 1, 2, 3, 9, 10, 11, 13, 14, 16, 17, 18, 20, 22, 23, 24], "an": [0, 1, 2, 3, 5, 6, 7, 8, 9, 11, 13, 14, 16, 17, 18, 20, 21, 22, 23, 24, 26], "aerodynmam": 0, "structur": [0, 1, 2, 3, 5, 6, 7, 10, 11, 13, 14, 16, 17, 18, 20, 21, 22, 23, 24], "under": [0, 3, 5, 9, 10, 26], "onewai": 0, "coupl": [0, 1, 2, 3, 14, 22, 23, 26], "fulli": [0, 3], "aerostructur": [0, 14, 22], "also": [0, 2, 11, 21, 26], "provid": [0, 1, 2, 13, 14, 16, 17, 18, 21, 22, 23, 24, 26], "thermoelast": [0, 1, 3, 5, 14, 21, 22, 23, 26], "properti": [0, 1, 2, 3, 5, 7, 8, 9, 11, 21, 22], "through": [0, 1, 2, 3, 9, 11, 12, 21, 26], "For": [0, 1, 2, 6, 7, 8, 9, 11, 16, 21, 23, 24, 26], "each": [0, 2, 3, 5, 6, 7, 8, 9, 11, 13, 14, 16, 18, 21, 22, 23, 24, 26], "design": [0, 1, 2, 3, 6, 7, 8, 9, 10, 13, 14, 16, 17, 18, 20, 21, 22, 23, 24, 26], "build": [0, 1, 11], "nastran": [0, 2, 3, 8, 14, 20, 21, 22, 23], "file": [0, 1, 2, 7, 8, 9, 11, 13, 14, 16, 17, 18, 20, 21, 22, 23, 24], "mesh": [0, 1, 2, 7, 8, 9, 13, 14, 16, 17, 18, 20, 21, 22, 23, 24, 26], "bdf": [0, 2, 3, 7, 8, 9, 14, 20, 22, 23], "dat": 0, "which": [0, 1, 2, 5, 6, 8, 9, 11, 13, 14, 16, 17, 18, 21, 22, 23, 24, 26], "ar": [0, 1, 2, 3, 5, 6, 7, 8, 9, 11, 12, 13, 14, 16, 17, 18, 20, 21, 22, 23, 24, 26], "locat": [0, 1, 2, 3, 8, 9, 11, 13, 14, 16, 17, 18, 22, 23, 24, 26], "work": [0, 1, 2, 11, 21, 26], "directori": [0, 1, 2, 8, 9, 11, 13, 14, 17, 22, 23, 24], "usual": [0, 1, 2, 3, 6], "capsstruct": 0, "scratch": 0, "output": [0, 1, 2, 11, 13, 14, 17, 22, 23, 24], "can": [0, 1, 2, 3, 6, 8, 9, 11, 13, 14, 16, 17, 18, 20, 21, 22, 23, 24, 26], "store": [0, 2, 3, 13, 16, 18, 24, 26], "well": [0, 9, 21, 22, 23, 26], "f5": [0, 2, 7, 8, 9, 11, 13, 14, 16, 17, 18, 21, 22, 23, 24], "develop": [0, 10, 11, 21], "sean": 0, "engelstad": 0, "more": [0, 1, 2, 8, 10, 11, 13, 14, 16, 17, 18, 20, 22, 23, 24, 26], "exampl": [0, 2, 3, 6, 8, 9, 13, 14, 16, 17, 18, 21, 22, 23, 24, 26], "involv": [0, 1, 2, 8, 26], "cfd": [0, 1, 23], "pleas": [0, 1, 13, 14, 16, 17, 18, 22, 23, 24], "see": [0, 1, 2, 8, 16, 22, 23], "github": [0, 1, 11], "instal": [0, 10], "intro": 0, "test": [0, 2, 3], "link": [1, 11], "main": [1, 13, 14, 16, 17, 18, 20, 21, 22, 23, 24], "webist": 1, "follow": [1, 2, 3, 5, 6, 11, 13, 14, 17, 20, 21, 22, 23, 24, 26], "A": [1, 2, 3, 5, 7, 12, 13, 14, 21, 22, 23, 24, 26], "prebuilt": 1, "distribut": [1, 2, 5, 14, 21, 22, 23, 26], "found": [1, 6, 8, 9, 21], "folder": 1, "environ": [1, 11], "variabl": [1, 2, 3, 6, 7, 8, 9, 11, 13, 14, 16, 17, 18, 20, 21, 22, 23, 24, 26], "must": [1, 2, 8, 11, 14, 21, 22, 23, 24, 26], "setup": [1, 2, 3, 5, 8, 11, 20, 21, 22, 23], "bashrc": [1, 11], "servecsm": 1, "command": [1, 11], "view": 1, "csm": 1, "alia": [1, 13, 14, 16, 17, 18, 21, 22, 23, 24], "one": [1, 2, 3, 6, 8, 9, 11, 14, 17, 21, 22, 23, 26], "repeatedli": 1, "option": [1, 3, 5, 6, 7, 11, 16, 18], "note": [1, 2, 11, 13, 14, 16, 17, 18, 21, 22, 23, 24, 26], "sourc": [1, 2, 10, 13, 14, 16, 17, 18, 21, 22, 23, 24], "won": 1, "t": [1, 2, 3, 5, 6, 7, 8, 9, 11, 18, 21, 22, 26], "until": [1, 2, 20], "after": [1, 2, 8, 9, 11, 26], "full": [1, 2, 5, 26], "so": [1, 2, 7, 8, 11, 12, 13, 14, 16, 17, 18, 22, 23, 24], "you": [1, 11], "ignor": [1, 3, 21], "immedi": [1, 2], "export": [1, 2, 11], "esp_root": 1, "packag": [1, 11], "esp123": 1, "engsketchpad": 1, "pythonpath": 1, "pyesp": 1, "espenv": 1, "shell": [1, 3, 5, 8, 10, 14, 17, 21, 22, 23, 24, 27], "bin": 1, "linux": [1, 11], "machin": [1, 11], "proce": [1, 2, 20], "opencascad": 1, "version": [1, 2, 11], "chang": [1, 3, 5, 13, 14, 16, 17, 18, 21, 22, 23, 24, 26], "past": 1, "accordingli": [1, 11], "basic": [1, 21], "step": [1, 2, 8, 9, 13, 20, 21, 23], "download": [1, 11], "tar": [1, 11], "unpack": 1, "inform": [1, 2, 3, 8, 11, 13, 14, 16, 17, 18, 21, 22, 23, 24], "come": [1, 21, 22, 23], "Then": [1, 2, 9, 11], "we": [1, 2, 8, 9, 21, 26], "onli": [1, 2, 6, 8, 9, 13, 14, 16, 17, 18, 21, 22, 23, 24, 26], "need": [1, 2, 6, 11, 13, 14, 16, 17, 18, 21, 22, 23, 24], "make": [1, 2], "auto": 1, "don": [1, 5, 11, 21], "rest": 1, "mkdir": 1, "cd": 1, "wget": 1, "http": [1, 11], "acdl": 1, "mit": 1, "edu": 1, "aarch64": 1, "tgz": [1, 11], "xvf": 1, "config": 1, "makeenv": 1, "7": [1, 3, 5, 14, 17, 21, 22, 23], "0": [1, 2, 3, 5, 6, 7, 8, 9, 11, 13, 14, 16, 17, 18, 21, 22, 23, 24, 26], "src": [1, 11], "aim": [1, 14, 17, 22, 23], "caps2tac": [1, 10, 12, 14, 17, 22, 23], "import": [1, 7, 8, 9, 11, 12, 21, 26], "unless": [1, 2], "properli": 1, "your": [1, 5, 11], "differenti": [1, 6], "cad": 1, "defin": [1, 2, 3, 5, 7, 8, 9, 13, 14, 16, 17, 18, 21, 22, 23, 24, 26], "comput": [1, 2, 3, 5, 6, 7, 8, 9, 13, 14, 16, 17, 18, 20, 21, 22, 23, 24], "solid": [1, 3, 21, 24], "model": [1, 2, 3, 6, 7, 8, 9, 13, 14, 16, 17, 18, 20, 21, 22, 23, 24, 26], "user": [1, 2, 5, 8, 9, 11, 13, 14, 16, 17, 18, 21, 22, 23, 24], "write": [1, 2, 7, 8, 9, 13, 14, 16, 17, 18, 21, 22, 23, 24], "own": [1, 2, 13, 14, 16, 17, 18, 21, 22, 23, 24, 26], "tutori": 1, "websit": 1, "thing": 1, "includ": [1, 2, 9, 11, 14, 16, 21, 22, 23], "below": [1, 3, 6, 7, 8, 9, 11, 12, 13, 14, 17, 20, 21, 22, 23, 24, 26], "refer": [1, 3, 5], "caps_w": 1, "simple_naca_w": 1, "configur": [1, 2, 26], "paramet": [1, 2, 3, 5, 6, 7, 13, 14, 16, 17, 18, 21, 22, 23, 24, 26], "cfgpmtr": 1, "nrib": 1, "10": [1, 3, 7, 8, 13, 14, 16, 17, 18, 21, 22, 23, 24], "integ": [1, 14, 17, 21], "fix": [1, 8, 14, 22, 23], "dure": [1, 3, 8, 10, 21, 22, 23, 26], "despmtr": 1, "span": 1, "real": [1, 2], "number": [1, 2, 3, 5, 7, 9, 13, 14, 16, 17, 18, 20, 21, 22, 23, 24], "ti": [1, 2], "capsgroup": 1, "attribut": [1, 13, 14, 16, 17, 18, 22, 23, 24], "region": [1, 9, 21], "same": [1, 2, 7, 9, 11, 16, 18, 21], "car": 1, "denot": [1, 26], "rib1": [1, 21], "etc": [1, 2, 5, 11, 14, 16, 21, 22, 23], "often": [1, 21, 26], "pattern": [1, 9], "statement": 1, "sometim": 1, "primit": 1, "udprim": 1, "editattr": 1, "capsconstraint": 1, "intend": [1, 11, 22, 23], "have": [1, 2, 3, 11, 21, 26], "constraint": [1, 2, 5, 7, 13, 14, 16, 17, 18, 20, 21, 22, 23, 24, 26], "e": [1, 2, 3, 5, 7, 8, 11, 14, 21, 22, 23, 26], "g": [1, 2, 3, 7, 21, 22], "These": [1, 2, 3, 5, 6, 7, 9, 11, 12, 20, 21, 26], "temperatur": [1, 3, 6, 9, 26], "elast": [1, 3, 5, 7, 14, 21, 22, 23], "right": [1, 9, 14, 22, 23, 26], "now": [1, 7, 8, 9], "capsload": 1, "load": [1, 2, 3, 5, 6, 7, 9, 10, 14, 20, 21, 22, 23], "thi": [1, 2, 3, 5, 6, 7, 8, 9, 11, 12, 13, 14, 16, 17, 18, 20, 21, 22, 23, 24, 26], "simpl": [1, 2, 7, 8], "analys": [1, 6, 8, 20], "aerodynam": [1, 14, 22, 23], "cannot": [1, 2, 5, 21, 26], "wai": [1, 3, 8, 21], "how": [1, 2, 8, 23], "do": [1, 3, 8, 9, 16, 21], "capsaim": 1, "specifi": [1, 2, 3, 6, 7, 9, 14, 20, 21, 22, 23], "bodi": [1, 2, 5, 26], "tool": [1, 5, 10], "add": [1, 2, 5, 8, 9, 11, 14, 20, 21, 22, 23, 26], "egadstessaim": 1, "here": [1, 2, 8, 9, 26], "occasion": 1, "capsmesh": 1, "set": [1, 2, 3, 5, 6, 7, 8, 9, 11, 13, 14, 16, 17, 18, 20, 21, 22, 23, 24], "altern": [1, 11, 14], "differ": [1, 2, 3, 5, 9, 16, 21], "section": [1, 2, 3, 20, 26], "tacsmodel": 1, "object": [1, 2, 3, 5, 6, 7, 8, 9, 11, 13, 14, 16, 17, 18, 20, 21, 22, 23, 24, 26], "supervis": 1, "process": [1, 2, 6, 8, 9, 11, 21, 23], "updat": [1, 3, 13, 14, 16, 17, 18, 21, 22, 23, 24], "support": [1, 5, 11, 12, 14, 17, 21, 22, 23, 24], "mpi": [1, 2, 7, 9, 11, 13, 14, 16, 17, 18, 21, 22, 23, 24], "parallel": [1, 2, 5, 10, 11], "featur": [1, 9, 11, 26], "directli": [1, 13, 14, 16, 17, 18, 22, 23, 24, 26], "avail": [1, 3, 5, 6, 11, 26], "comm": [1, 2, 7, 9, 13, 14, 16, 17, 18, 21, 22, 23, 24], "comm_world": [1, 7], "tacs_model": 1, "csm_file": 1, "next": [1, 2, 8, 9], "gener": [1, 2, 3, 5, 6, 7, 8, 11, 13, 14, 16, 17, 18, 21, 22, 23, 24, 26], "global": [1, 2, 5, 6, 7, 14, 21, 22, 23, 26], "depend": [1, 2, 5, 13, 14, 16, 17, 18, 21, 22, 23, 24, 26], "scale": [1, 2, 5, 7, 14, 16, 17, 21, 22, 23], "ll": [1, 8], "want": [1, 9, 11, 13, 14, 16, 17, 18, 21, 22, 23, 24], "tune": 1, "hyperparamet": 1, "small": [1, 26], "egadsaim": 1, "routin": [1, 2, 11, 13, 14, 16, 17, 18, 22, 23, 24], "get": [1, 2, 3, 5, 7, 8, 9, 11, 13, 14, 16, 17, 18, 21, 22, 23, 24], "qualiti": 1, "mesh_aim": 1, "set_mesh": 1, "edge_pt_min": 1, "15": [1, 3, 14, 17, 22], "edge_pt_max": 1, "20": [1, 3, 7, 13, 16, 22, 24], "global_mesh_s": 1, "25": 1, "max_surf_offset": 1, "01": [1, 9, 21], "max_dihedral_angl": 1, "register_to": 1, "There": [1, 3, 6, 8, 11, 12, 21, 26], "certain": [1, 14, 21, 22, 23], "regist": 1, "befor": [1, 2, 3, 6, 8, 14, 21, 22, 23], "If": [1, 2, 3, 6, 9, 11, 13, 14, 16, 17, 18, 21, 22, 23, 24], "correctli": 1, "throw": 1, "error": [1, 3, 11], "check": [1, 9, 13, 14, 16, 17, 18, 22, 23, 24], "phase": [1, 3, 5], "materi": [1, 5, 7, 8, 9, 21, 26], "element": [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 13, 14, 16, 18, 20, 21, 22, 23, 24, 27], "definit": [1, 3, 6, 16, 21, 26], "type": [1, 2, 3, 5, 6, 8, 9, 11, 13, 14, 16, 17, 18, 21, 22, 23, 24], "isotrop": [1, 3, 5], "orthotrop": [1, 3, 5, 26], "anisotrop": [1, 3, 5], "ad": [1, 2, 5, 13, 14, 16, 17, 18, 21, 22, 23, 24, 26], "underli": 1, "sever": [1, 2, 3, 6, 9, 11, 21, 26], "common": [1, 2, 13, 14, 20, 21, 22, 23, 24], "save": [1, 2, 13, 14, 16, 17, 18, 22, 23, 24], "class": [1, 2, 6, 7, 8, 9, 12, 13, 14, 16, 17, 18, 20, 22, 23, 24], "method": [1, 2, 5, 6, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 20, 21, 22, 23, 24, 26], "aluminum": [1, 8, 9], "steel": 1, "titanium": 1, "carbon": 1, "fiber": 1, "current": [1, 2, 3, 6, 12, 13, 14, 16, 17, 18, 21, 22, 23, 24], "shellproperti": 1, "indirectli": 1, "thicknessvari": 1, "name": [1, 8, 9, 11, 13, 14, 16, 17, 18, 21, 22, 23, 24], "thick": [1, 2, 3, 7, 8, 9, 13, 16, 26], "thermal": [1, 3, 10], "instanc": [1, 2, 6, 9, 13, 14, 17, 20, 21, 22, 23, 24], "pinconstraint": 1, "temperatureconstraint": 1, "input": [1, 2, 6, 8, 9, 21, 22], "match": [1, 16, 21], "static": [1, 2, 6, 10, 14, 21, 22, 26], "problem": [1, 2, 5, 6, 7, 8, 9, 13, 14, 16, 17, 18, 20, 21, 22, 23, 24], "gridforc": 1, "pressur": [1, 14, 22, 23], "whose": 1, "softwar": [1, 11], "repo": 1, "function": [1, 2, 4, 7, 8, 9, 10, 11, 12, 13, 14, 17, 20, 21, 22, 23, 24, 26], "ksfailur": [1, 2, 6, 7, 8], "mass": [1, 2, 3, 5, 6, 7, 8, 21, 22, 23, 26], "complianc": [1, 6], "onc": [1, 2, 11, 21], "all": [1, 2, 3, 6, 7, 8, 9, 11, 12, 13, 14, 16, 17, 18, 21, 22, 23, 24], "abov": [1, 11, 21], "readi": 1, "complet": [1, 2, 11, 21, 26], "pre_analysi": 1, "run_analysi": 1, "solut": [1, 7, 8, 9, 13, 14, 17, 21, 22, 23, 24], "final": [1, 2, 7, 8, 9, 21], "post_analysi": 1, "valu": [1, 2, 3, 6, 7, 9, 13, 14, 16, 17, 18, 20, 21, 22, 23, 24, 26], "deriv": [1, 2, 7, 11, 13, 14, 16, 17, 18, 22, 23, 24, 26], "adjoint": [1, 2, 7, 22], "include_aim": 1, "true": [1, 6, 7, 8, 13, 14, 17, 18, 21, 22, 23, 24], "five": 1, "coars": 1, "symmetr": [1, 3], "naca": 1, "0012": 1, "wing": [1, 10], "1": [1, 2, 3, 5, 6, 7, 9, 11, 13, 14, 16, 17, 18, 21, 22, 23, 24, 26], "steadi": [1, 5], "egad": 1, "vertic": 1, "2": [1, 2, 3, 5, 6, 7, 9, 11, 17, 18, 21, 22, 23, 26], "unsteadi": 1, "vari": [1, 2, 9, 13, 26], "sinusoid": 1, "time": [1, 2, 9, 13, 14, 17, 21, 22, 23, 24, 26], "3": [1, 3, 5, 7, 8, 9, 11, 13, 14, 16, 17, 18, 21, 22, 23, 24, 26], "find": [1, 26], "panel": [1, 3, 13, 16, 18, 21], "hold": [1, 3, 13, 14, 16, 17, 18, 21, 22, 23, 24, 26], "aero": 1, "4": [1, 2, 3, 5, 14, 20, 21, 22, 23], "rib": [1, 21], "spar": [1, 21], "insid": [1, 21], "5": [1, 3, 7, 8, 9, 11, 21, 22, 26], "aflr": 1, "shown": [1, 3, 9, 22], "result": [1, 2, 6, 13, 14, 16, 17, 18, 22, 23, 24, 26], "about": [1, 3, 6, 21, 26], "40": 1, "drop": 1, "weight": [1, 2, 3, 5, 6, 16, 21], "equal": [1, 3, 7, 9, 18], "notic": 1, "ha": [1, 2, 6, 8, 9, 10, 11, 13, 14, 16, 17, 18, 20, 21, 22, 23, 24], "largest": 1, "root": [1, 11, 13, 14, 16, 17, 18, 21, 22, 23, 24], "relat": [1, 21], "beam": [1, 2, 3, 5, 10, 27], "bend": [1, 26], "clamp": 1, "27": 1, "suggest": 1, "placement": 1, "veri": [1, 2], "good": [1, 3], "In": [1, 2, 8, 9, 11, 14, 21, 22, 23, 26], "case": [1, 2, 6, 8, 9, 13, 14, 16, 17, 18, 21, 22, 23, 24, 26], "move": 1, "toward": 1, "lead": [1, 9, 21], "edg": [1, 5, 21], "higher": [1, 26], "curvatur": 1, "two": [1, 2, 5, 6, 8, 9, 11, 12, 13, 20, 21, 26], "unittest": 1, "verifi": 1, "integration_test": 1, "test_caps_shape_deriv": 1, "py": [1, 11, 21], "test_caps_thick_deriv": 1, "respons": [2, 3, 8, 13, 14, 16, 17, 18, 21, 22, 23, 24, 26], "up": [2, 7, 8, 9, 11, 21], "bookkeep": 2, "most": [2, 3, 6, 12, 14, 20, 21, 22, 23], "like": [2, 3, 5, 6, 9, 11, 13, 14, 16, 17, 18, 22, 23, 24], "state": [2, 5, 7, 13, 14, 16, 17, 18, 21, 22, 23, 24, 26], "vector": [2, 5, 6, 13, 14, 16, 17, 18, 21, 22, 23, 24, 26], "fe": [2, 14, 22, 23], "matric": 2, "approach": [2, 8, 12, 20, 21, 26], "allow": [2, 8, 21], "visibl": 2, "c": [2, 3, 7, 12, 13, 16, 21, 22, 26], "code": [2, 10], "daunt": 2, "new": [2, 7, 11, 13, 14, 16, 17, 18, 21, 22, 23, 24], "simplifi": [2, 26], "where": [2, 3, 6, 8, 9, 13, 14, 16, 17, 18, 21, 22, 23, 24, 26], "been": [2, 8, 9, 10, 11, 21, 26], "autom": [2, 20], "usag": [2, 20], "evalu": [2, 3, 6, 7, 8, 9, 11, 13, 14, 16, 17, 18, 20, 22, 23, 24, 26], "gradient": [2, 3, 6, 7, 8, 10, 11, 20, 21, 26], "desir": [2, 7, 14, 17, 20, 21, 22, 23], "respect": [2, 6, 7, 8, 9, 11, 13, 14, 16, 17, 18, 20, 22, 23, 24, 26], "finit": [2, 6, 10, 11, 20, 26], "form": [2, 13, 16, 20, 21, 26], "style": [2, 20], "compon": [2, 5, 6, 7, 9, 13, 14, 16, 22, 23], "constitut": [2, 4, 5, 6, 7, 8, 9, 10, 11, 18, 21], "creat": [2, 7, 8, 9, 11, 12, 13, 14, 16, 17, 18, 20, 21, 22, 23, 24, 26], "appli": [2, 5, 6, 7, 8, 9, 14, 16, 18, 20, 21, 22, 23], "boundari": [2, 8, 13, 21], "condit": [2, 8, 21, 22, 23], "solv": [2, 7, 8, 9, 13, 14, 16, 17, 18, 20, 21, 22, 23, 24], "system": [2, 5, 7, 11, 26], "pass": [2, 3, 6, 8, 9, 18, 20, 21, 22, 23], "paropt": [2, 7, 20], "order": [2, 3, 11, 14, 20, 21, 22, 23, 26], "minim": [2, 7, 20], "particular": [2, 6, 20, 21], "subject": [2, 7, 20], "some": [2, 5, 6, 8, 20, 21, 26], "improv": [2, 20], "iter": [2, 7, 13, 14, 16, 17, 18, 20, 22, 23, 24], "repeat": [2, 20], "criteria": [2, 6, 8, 20], "satisfi": [2, 20, 26], "It": [2, 8, 13, 14, 16, 17, 18, 21, 22, 23, 24, 26], "contain": [2, 3, 5, 7, 11, 12, 13, 14, 16, 17, 18, 21, 22, 23, 24, 26], "its": [2, 6, 8, 9, 26], "typic": [2, 3, 13, 14, 16, 17, 18, 20, 21, 22, 23, 24, 26], "applybc": [2, 7], "solver": [2, 7, 13, 14, 16, 17, 18, 21, 22, 23, 24], "createvec": [2, 7, 21], "createfemat": [2, 7], "setdesignvar": [2, 7, 13, 14, 16, 17, 18, 22, 23, 24], "vale": 2, "evalfunct": [2, 7, 8, 9, 14, 17, 21, 22, 23], "call": [2, 3, 7, 8, 9, 11, 14, 17, 20, 21, 22, 23, 26], "adddvsen": [2, 14, 22], "addsvsen": [2, 22], "addadjointresproduct": [2, 22], "adjlist": 2, "dfdxlist": 2, "alpha": [2, 3, 7], "loadscal": [2, 22], "collect": [2, 26], "tacsassembl": 2, "product": [2, 3, 5, 6, 7, 11, 22], "residu": [2, 7, 14, 17, 22, 23], "w": [2, 3, 7, 9, 11, 18, 21], "r": [2, 7, 18, 21, 26], "simultan": 2, "reus": 2, "perform": [2, 3, 10, 21], "task": 2, "evaladjointresproduct": [2, 7], "memori": 2, "than": [2, 7, 9, 13, 14, 16, 17, 18, 22, 23, 24], "arrai": [2, 3, 5, 6, 8, 9, 13, 14, 16, 17, 18, 21, 22, 23, 24], "dvsen": 2, "num_dv": 2, "factor": [2, 3, 5, 6, 7, 14, 16, 17, 21, 22, 23], "aux": [2, 22], "contribut": [2, 3, 14, 22, 26], "default": [2, 3, 5, 6, 8, 11, 13, 14, 16, 17, 18, 21, 22, 23, 24], "addadjointresxptsensproduct": [2, 22], "node": [2, 3, 5, 7, 8, 9, 13, 14, 16, 17, 18, 21, 22, 23, 24, 26], "funclist": 2, "list": [2, 3, 7, 13, 14, 16, 17, 18, 21, 22, 23, 24], "addjacobianvecproduct": 2, "beta": [2, 7], "gamma": [2, 7], "x": [2, 3, 5, 6, 7, 8, 13, 14, 16, 17, 18, 21, 22, 23, 24, 26], "y": [2, 3, 5, 6, 7, 8, 26], "mator": 2, "jacobian": [2, 7, 22, 23, 26], "addmatdvsensinnerproduct": 2, "mattyp": 2, "psi": 2, "phi": [2, 22], "dfdx": [2, 7], "inner": [2, 3], "matrix": [2, 3, 5, 7, 13, 14, 16, 17, 18, 22, 23, 24, 26], "sensit": [2, 8, 9, 13, 14, 16, 17, 18, 21, 22, 23, 24], "dfdulist": 2, "pointer": 2, "vec": [2, 13, 14, 16, 17, 18, 21, 22, 23, 24], "addxptsen": [2, 14, 22], "applymatbc": 2, "mat": [2, 3, 7], "assemblejacobian": [2, 7], "dirichlet": 2, "zero": [2, 3, 7, 14, 18, 21, 22, 23], "row": [2, 13, 16, 18, 24], "associ": [2, 3, 5, 14, 17, 21, 22, 23], "diagon": [2, 5, 9, 14, 17, 22, 23], "uniti": [2, 6], "assembli": 2, "ani": [2, 7, 8, 11, 21, 22, 23], "commun": 2, "requir": [2, 3, 5, 6, 7, 8, 9, 11, 14, 22, 23, 26], "coeffici": [2, 3, 26], "term": [2, 22, 26], "second": [2, 5, 6, 8, 9, 21, 23, 26], "govern": [2, 26], "equat": [2, 13, 14, 16, 18, 22, 23, 24], "orient": [2, 5, 11, 26], "normal": [2, 5, 6, 26], "transpos": [2, 22], "assemblematcombo": 2, "mattype1": 2, "scale1": 2, "mattype2": 2, "scale2": 2, "combin": [2, 3, 21, 26], "assemblemattyp": 2, "assembler": 2, "traction": [2, 14, 22, 23], "tacssurfacetract": 2, "point": [2, 3, 5, 7, 8, 14, 21, 22, 23, 26], "entri": [2, 3, 8, 14, 22, 23], "first": [2, 3, 5, 6, 7, 8, 9, 14, 21, 22, 23, 26], "rh": [2, 14, 22, 23], "computereord": 2, "order_typ": 2, "mat_typ": 2, "reorder": 2, "unknown": 2, "initi": [2, 3, 7, 8, 9, 13, 14, 16, 17, 18, 20, 22, 23, 24, 26], "copyvari": 2, "none": [2, 5, 7, 8, 13, 14, 16, 17, 18, 21, 22, 23, 24], "dvec": 2, "ddvec": 2, "varspernod": [2, 5, 14, 22, 23], "numownednod": [2, 23], "numel": 2, "numdependentnod": 2, "factori": 2, "createdesignvec": [2, 21], "createmat": 2, "createnodevec": [2, 21], "createschurmat": 2, "special": [2, 21], "suit": 2, "On": 2, "scheme": [2, 23], "subsequ": 2, "": [2, 3, 5, 7, 8, 9, 11, 14, 16, 17, 18, 21, 22, 23, 26], "femat": 2, "non": [2, 21], "togeth": 2, "easier": [2, 21], "eigenvalu": [2, 14, 17, 21], "determin": [2, 3, 5, 6, 14, 17, 21, 22, 23, 26], "serial": 2, "other": [2, 5, 9, 11, 21, 22, 23], "separ": [2, 6, 21], "end": [2, 11, 21, 23, 26], "block": [2, 9], "while": [2, 6, 21], "local": [2, 3, 5, 21], "impos": [2, 26], "kludg": 2, "within": [2, 3, 6, 9, 11, 16, 21, 26], "hopefulli": 2, "reduc": [2, 26], "fill": [2, 22], "ins": 2, "although": 2, "firm": 2, "proof": 2, "back": [2, 8, 9], "place": [2, 3, 7, 11, 14, 16, 17, 22, 23], "fematbindic": 2, "fematcindic": 2, "map": 2, "mathemat": 2, "written": [2, 11, 21, 26], "a1": 2, "p": 2, "permut": 2, "column": 2, "thei": [2, 7, 11, 18, 21, 26], "share": [2, 21], "exactli": 2, "layout": 2, "evalenergi": 2, "kinet": [2, 26], "potenti": [2, 26], "energi": [2, 6, 9, 26], "getbcmap": 2, "getdesignvarrang": [2, 7, 13, 14, 16, 17, 18, 21, 22, 23, 24], "lb": [2, 7], "ub": [2, 7], "retriev": [2, 21], "rang": [2, 7, 23], "individu": [2, 14, 22, 23], "mai": [2, 5, 6, 11, 21], "consist": [2, 3, 18, 20, 26], "someon": 2, "incorrect": 2, "data": [2, 7, 21, 26], "could": [2, 9], "best": [2, 11], "guess": [2, 14, 17, 21], "take": [2, 8, 9, 13, 14, 21, 22, 23, 26], "minimum": [2, 3, 8, 11], "upper": [2, 3, 7, 13, 14, 16, 17, 18, 21, 22, 23, 24], "bound": [2, 3, 7, 13, 14, 16, 17, 18, 21, 22, 23, 24], "maximum": [2, 6, 7, 8, 9], "lower": [2, 3, 7, 13, 14, 16, 17, 18, 21, 22, 23, 24], "lowerbound": [2, 3], "upperbound": [2, 3], "numdv": 2, "getdesignvar": [2, 7, 13, 14, 16, 17, 18, 22, 23, 24], "assign": [2, 3, 7, 8, 21, 22], "doe": [2, 21], "ensur": [2, 11, 13, 21, 24], "between": [2, 3, 21, 26], "inconsist": [2, 6], "begin": [2, 26], "return": [2, 3, 5, 6, 7, 8, 9, 11, 13, 14, 16, 17, 18, 21, 22, 23, 24], "them": [2, 3, 6, 7, 9], "maintain": 2, "multipli": [2, 5, 14, 17, 21, 22, 23, 26], "correspond": [2, 3, 9, 11, 13, 14, 16, 17, 18, 21, 22, 23, 24], "undefin": 2, "behaviour": [2, 21], "getelementdata": 2, "num": [2, 21], "getelementnod": 2, "given": [2, 5, 6, 9, 14, 21, 22, 23, 26], "getel": 2, "getinitcondit": 2, "getmpicomm": 2, "getnod": [2, 13, 14, 16, 17, 18, 22, 23, 24], "getnumdependentnod": 2, "getnumel": 2, "getnumnod": 2, "getnumownednod": [2, 13, 14, 16, 17, 18, 21, 22, 23, 24], "getownerrang": 2, "processor": [2, 7, 13, 14, 16, 17, 18, 21, 22, 23, 24], "getreord": 2, "getsimulationtim": 2, "simul": [2, 9], "getvari": [2, 14, 17, 22, 23], "getvarspernod": [2, 13, 14, 16, 17, 18, 21, 22, 23, 24], "per": [2, 13, 14, 16, 17, 18, 21, 22, 23, 24], "when": [2, 9, 11, 20, 21, 26], "tacscreat": 2, "reordervec": 2, "base": [2, 3, 5, 6, 7, 8, 10, 11, 13, 14, 17, 21, 22, 23, 24, 26], "setauxel": 2, "elem": [2, 8, 9], "auxiliari": 2, "setbcvaluesfromvec": 2, "bc": 2, "setbc": 2, "setdependentnod": 2, "ptr": 2, "conn": 2, "connect": [2, 5, 21], "howev": [2, 21, 26], "setelementconnect": 2, "setel": [2, 7], "setinitcondit": [2, 23], "setnod": [2, 13, 14, 16, 17, 18, 22, 23, 24], "setnumthread": 2, "thread": 2, "setsimulationtim": 2, "setvari": [2, 7, 22], "testel": 2, "elemnum": 2, "print_level": 2, "dh": 2, "1e": [2, 3, 7, 13, 14, 16, 17, 22, 23, 24], "06": 2, "rtol": 2, "08": 2, "atol": 2, "implement": [2, 6, 10, 11, 12, 18, 21, 27], "stiff": [2, 3, 5, 7, 8, 14, 17, 22, 23, 26], "variou": [2, 22, 23], "part": [2, 14, 18, 21, 22, 23, 26], "strain": [2, 3, 5, 6, 7, 21], "nodal": [2, 14, 21, 22, 24, 26], "coordin": [2, 5, 13, 14, 16, 17, 18, 21, 22, 23, 24, 26], "print": [2, 9, 13, 14, 16, 17, 18, 21, 22, 23, 24], "level": [2, 12, 14, 17, 22, 23], "testfunct": 2, "func": [2, 7, 8, 9, 13, 14, 16, 17, 18, 22, 23, 24], "interest": [2, 8, 9, 11, 20], "random": 2, "perturb": 2, "should": [2, 3, 6, 8, 11, 13, 14, 16, 17, 18, 21, 22, 23, 24, 26], "randomli": 2, "otherwis": [2, 9, 22], "produc": [2, 8, 9, 26], "unrealist": 2, "central": 2, "compil": 2, "complex": [2, 3, 13, 16, 18, 22, 24], "approxim": [2, 6, 7, 9, 11, 14, 22, 26], "zeroddotvari": 2, "2nd": 2, "zerodotvari": 2, "zerovari": [2, 7, 22], "read": [2, 7, 8, 21], "fem": 2, "scanbdffil": [2, 7], "getnumcompon": [2, 7, 21], "addauxel": 2, "comp_num": 2, "addfunctiondomain": 2, "comp_list": 2, "domain": [2, 6, 9, 21], "createtac": [2, 7], "distribtu": 2, "getbc": 2, "getcomponentdescript": 2, "descript": [2, 8, 13, 14, 17, 21, 22, 23, 24], "getconnect": 2, "getelementdescript": [2, 7], "fname": 2, "scan": 2, "bulk": 2, "elem_typ": 2, "grid": [2, 5, 9, 14, 21, 22, 23], "similar": 2, "manual": [2, 11], "rather": [2, 7], "setboundarycondit": 2, "getelementpartit": 2, "partit": [2, 21, 22], "bcptr": 2, "bcvar": 2, "bcval": 2, "setglobalconnect": 2, "num_nod": [2, 5, 26], "node_ptr": 2, "node_conn": 2, "id_num": 2, "id": [2, 3, 8, 9, 14, 21, 22, 23], "natur": [2, 5, 21], "frequenc": [2, 17, 21, 22], "eigenproblem": 2, "extract": 2, "eigenvector": [2, 14, 17], "mode": [2, 3, 14, 17, 21], "lowest": [2, 14, 17, 21], "forward": 2, "dirk": [2, 23], "abm": 2, "nbg": 2, "inherit": [2, 6, 26], "checkgradi": [2, 7], "self": [2, 7, 13, 14, 16, 17, 18, 22, 23, 24], "doubl": [2, 5, 6, 21, 26], "fd": 2, "csd": 2, "verif": 2, "getadjoint": 2, "int": [2, 3, 5, 6, 13, 14, 16, 17, 18, 21, 22, 23, 24, 26], "step_num": 2, "func_num": 2, "getgradi": 2, "getnumtimestep": [2, 23], "getstat": 2, "time_step": 2, "getxptgradi": 2, "initadjoint": 2, "integrateadjoint": 2, "backward": 2, "forc": [2, 5, 7, 8, 14, 21, 22, 23], "nonlinear": [2, 5, 21, 24, 26], "iterateadjoint": 2, "revers": 2, "loadstat": 2, "prefix": 2, "disk": 2, "string": [2, 13, 14, 16, 17, 18, 21, 22, 23, 24], "argument": [2, 3, 6, 8, 9, 11, 21, 22, 23], "put": 2, "binari": 2, "persistst": 2, "postadjoint": 2, "finish": 2, "calcul": [2, 6, 21], "setabstol": 2, "absolut": [2, 14, 17, 22, 23], "toler": [2, 14, 17, 22, 23, 24], "newton": 2, "setfh5": 2, "tofh5": [2, 7], "rigid": [2, 5, 26], "setfunct": 2, "start_plan": 2, "end_plan": 2, "obtain": 2, "setinitnewtondeltafract": 2, "frac": [2, 26], "setjacassemblyfreq": 2, "freq": 2, "frequent": [2, 23], "setkrylovsubspacemethod": 2, "ksm": [2, 7], "linear": [2, 5, 6, 7, 13, 14, 16, 21, 22, 26], "setmaxnewtonit": 2, "max_newton_it": 2, "setoutputfrequ": 2, "write_freq": 2, "setoutputprefix": 2, "_prefix": 2, "setprintlevel": 2, "tacsintegr": 2, "off": 2, "summari": 2, "setreltol": 2, "rel": [2, 3, 14, 17, 22, 23, 24], "settimeinterv": 2, "tinit": [2, 9, 21, 23], "tfinal": [2, 9, 21, 23], "interv": [2, 23], "setuselapack": 2, "use_lapack": 2, "lapack": [2, 11], "slow": 2, "setuseschurmat": 2, "use_schur_mat": 2, "orderingtyp": [2, 22], "tacsschurmat": [2, 22], "execut": [2, 11], "behavior": [3, 26], "materialproperti": [3, 8, 9, 21], "mechan": [3, 26], "goal": [3, 26], "queri": 3, "plane": [3, 26], "stress": [3, 5, 6, 7, 8, 21, 26], "expans": [3, 26], "describ": [3, 11, 21, 26], "possibl": [3, 21], "appropri": [3, 5, 6, 8, 9, 11, 26], "situat": 3, "rho": [3, 7, 8, 9], "specific_heat": [3, 9], "kappa": [3, 9, 26], "densiti": [3, 7, 8, 9], "specif": [3, 9, 13, 14, 16, 17, 18, 21, 22, 23, 24], "heat": [3, 5, 9, 14, 22, 23], "conduct": [3, 5, 8, 9, 14, 22, 23], "2d": [3, 5, 14, 21, 22, 23], "3d": [3, 5, 6], "kappa1": 3, "kappa2": 3, "kappa3": 3, "nu": [3, 7, 8], "young": [3, 8], "modulu": [3, 7, 8], "poisson": [3, 7, 8], "ratio": [3, 7, 8, 22], "yield": [3, 7, 8], "strength": [3, 6], "e1": 3, "e2": 3, "nu12": 3, "g12": 3, "t1": 3, "t2": 3, "c1": [3, 5, 13, 14, 16, 17, 18, 22, 23, 24], "c2": [3, 5], "s12": 3, "moduli": 3, "e3": 3, "nu13": 3, "nu23": 3, "g13": 3, "g23": 3, "t3": 3, "c3": 3, "s13": 3, "s23": 3, "alpha1": 3, "alpha2": 3, "alpha3": 3, "keyword": [3, 6, 8, 9, 22, 23], "arg": [3, 14, 17, 22, 23], "format": [3, 8, 9, 11, 13, 14, 16, 17, 18, 22, 23, 24], "float": [3, 5, 6, 13, 14, 16, 17, 18, 21, 22, 23, 24], "direct": [3, 5, 6, 7, 10, 11, 12, 20, 21, 26], "coeefici": 3, "shear": [3, 5, 7, 26], "tension": 3, "compress": [3, 13, 16, 18, 24], "generatebdfcard": 3, "pynastran": [3, 21, 22], "card": [3, 8, 21], "mat1": [3, 21], "mat8": [3, 21], "getmaterialproperti": 3, "dictionari": [3, 13, 14, 16, 17, 18, 21, 22, 23, 24], "dict": [3, 13, 14, 16, 17, 18, 21, 22, 23, 24], "getnastranid": 3, "setdens": 3, "setnastranid": 3, "setspecificheat": 3, "orthotropicpli": 3, "ply": [3, 16], "interact": [3, 21], "tsai": 3, "wu": 3, "failur": [3, 6, 8, 9], "criterion": 3, "suppli": [3, 5, 13, 14, 16, 17, 18, 21, 22, 23, 24], "Be": 3, "care": 3, "easili": [3, 11], "fall": 3, "outsid": 3, "accept": [3, 6, 11, 14, 17, 21, 22, 23], "ply_thick": 3, "prop": [3, 8, 9, 21], "max_strain_criterion": 3, "bool": [3, 5, 6, 13, 14, 16, 17, 18, 21, 22, 23, 24], "flag": [3, 5, 6, 7, 11, 13, 14, 16, 17, 18, 21, 22, 23, 24], "max": [3, 7, 14, 17, 22], "fals": [3, 5, 6, 13, 14, 16, 17, 18, 21, 22, 23, 24], "procedur": [3, 5, 8, 9, 14, 17, 21, 22, 23], "buckl": [3, 14, 21], "basicbeamconstitut": [3, 21], "beamconstitut": [3, 5], "timoshenko": [3, 5], "theori": [3, 10, 26], "neg": [3, 6, 21], "sign": [3, 6], "convent": [3, 6], "inertia": [3, 6, 21, 26], "iyz": [3, 6], "z": [3, 5, 6, 7, 26], "da": 3, "moment": [3, 5, 6, 14, 21, 22, 23], "area": 3, "alwai": [3, 5, 6, 8, 26], "posit": [3, 6, 14, 22, 26], "iyi": [3, 6], "cross": [3, 5], "j": [3, 9, 22, 26], "polar": 3, "axi": [3, 5, 6], "ii": 3, "iz": 3, "yz": 3, "ky": 3, "correct": [3, 7, 21, 22], "6": [3, 5, 7, 8, 14, 21, 22, 23], "kz": 3, "bar": 3, "pbar": [3, 21], "bladestiffenedshellconstitut": 3, "shellconstitut": [3, 5], "stiffen": [3, 16, 21], "explicitli": 3, "instead": [3, 13, 14, 16, 17, 18, 21, 22, 23, 24], "smear": 3, "across": [3, 13, 14, 16, 21, 22, 23, 26], "panelpli": 3, "stiffenerpli": 3, "kcorr": [3, 7], "panellength": 3, "length": [3, 9, 14, 16, 18, 21, 22, 23, 26], "dv": [3, 13, 16, 18, 21], "panellengthnum": 3, "lenth": 3, "tell": [3, 8], "treat": [3, 21, 26], "stiffenerpitch": 3, "pitch": [3, 21], "stiffenerpitchnum": 3, "panelthick": 3, "panelthicknum": 3, "numpanelpli": 3, "distinct": 3, "angl": 3, "panelplyangl": 3, "numpi": [3, 5, 7, 8, 9, 11, 13, 14, 16, 17, 18, 21, 22, 23, 24], "ndarrai": [3, 5, 13, 14, 16, 17, 18, 21, 22, 23, 24], "panelplyfrac": 3, "fraction": [3, 16], "panelplyfracnum": 3, "np": [3, 7, 8, 9], "intc": 3, "stiffenerheight": 3, "height": 3, "stiffenerheightnum": 3, "stiffenerthick": 3, "stiffenerthicknum": 3, "numstiffenerpli": 3, "stiffenerplyangl": 3, "stiffenerplyfrac": 3, "stiffenerplyfracnum": 3, "flangefract": 3, "width": 3, "rais": [3, 8], "valueerror": [3, 8], "setksweight": 3, "ksweight": [3, 6, 7, 8, 9], "k": [3, 6, 7, 9, 14, 21, 22, 23, 26], "aggreg": [3, 6, 7, 9], "setpanelplyfractionbound": 3, "pli": 3, "setpanelthicknessbound": 3, "1e20": [3, 13, 16, 18, 24], "setstiffenerheightbound": 3, "setstiffenerpitchbound": 3, "setstiffenerplyfractionbound": 3, "setstiffenerthicknessbound": 3, "compositeshellconstitut": [3, 21], "composit": [3, 10, 11, 16], "lamin": [3, 26], "deform": [3, 26], "fsdt": 3, "ply_list": 3, "layup": 3, "ply_angl": 3, "radian": 3, "toffset": 3, "offset": [3, 21, 26], "distanc": 3, "mid": [3, 26], "measur": [3, 7], "plate": [3, 9, 10, 21, 26], "bottom": 3, "pcomp": [3, 21], "dofspringconstitut": [3, 21], "generalspringconstitut": [3, 5], "tradit": 3, "spring": [3, 5], "dof": [3, 5, 14, 21, 22, 23], "assum": [3, 21, 23, 26], "bush": 3, "pbush": [3, 21], "generalmassconstitut": [3, 5], "translat": 3, "rotat": [3, 5, 14, 22, 23], "m": [3, 7, 8, 9, 18, 21, 23, 26], "8": [3, 11, 21], "9": [3, 5, 9, 21, 26], "11": [3, 11], "12": [3, 9, 14, 17, 22, 23, 24], "13": [3, 11], "14": [3, 14, 17, 22, 23], "16": [3, 5], "17": 3, "18": 3, "19": 3, "flatten": [3, 23], "side": [3, 9, 14, 22, 23], "evalmassmatrix": 3, "6x6": 3, "21": [3, 11], "repres": [3, 9, 14, 17, 22, 23, 26], "uniqu": [3, 14, 21, 22, 23], "isorectanglebeamconstitut": 3, "rectangular": 3, "dimens": 3, "along": [3, 6, 14, 17, 22, 23], "perpindicular": 3, "wnum": 3, "wlb": 3, "wub": 3, "diamet": 3, "tnum": [3, 8, 9], "tlb": 3, "tub": 3, "woffset": 3, "pbarl": 3, "isoshellconstitut": [3, 8, 21], "pshell": [3, 21], "isotubebeamconstitut": 3, "hollow": 3, "circular": 3, "d": [3, 7, 22, 26], "tube": 3, "dnum": 3, "dlb": 3, "dub": 3, "wall": 3, "lamparamshellconstitut": 3, "phasechangematerialconstitut": [3, 5], "solid_prop": 3, "liquid_prop": 3, "liquid": 3, "lh": 3, "latent": 3, "mt": 3, "melt": 3, "planestressconstitut": [3, 5, 9], "util": [3, 20, 26], "pointmassconstitut": 3, "i12": [3, 21], "x1": 3, "x2": 3, "dm": [3, 6], "i11": [3, 21], "x3": 3, "i22": [3, 21], "i33": 3, "i13": 3, "i23": 3, "mnum": 3, "mlb": 3, "mub": 3, "i11num": 3, "i11lb": 3, "i11ub": 3, "i22num": 3, "i22lb": 3, "i22ub": 3, "i33num": 3, "i33lb": 3, "i33ub": 3, "i12num": 3, "i12lb": 3, "i12ub": 3, "i13num": 3, "i13lb": 3, "i13ub": 3, "i23num": 3, "i23lb": 3, "i23ub": 3, "setdrillingregular": 3, "kpenalti": 3, "regular": 3, "drill": 3, "smearedcompositeshellconstitut": 3, "homogen": 3, "continu": [3, 6, 10], "parametr": 3, "stack": 3, "sequenc": [3, 21], "effect": 3, "total": [3, 5, 7, 9, 14, 21, 22, 23, 26], "ply_fract": 3, "thickness_dv_num": 3, "ply_fraction_dv_num": 3, "thickness_lb": 3, "thickness_ub": 3, "ply_fraction_lb": 3, "ply_fraction_ub": 3, "t_offset": 3, "solidconstitut": [3, 5, 21], "topologi": [3, 10], "void": [3, 26], "present": [3, 11], "intermedi": [3, 23], "psolid": [3, 21], "librari": [5, 7, 8, 9], "capabl": [5, 20, 26], "parameter": [5, 26], "elementbasi": 5, "lineartetrahedralbasi": [5, 21], "tetrahedr": 5, "quadratictetrahedralbasi": 5, "quadrat": [5, 26], "cubictetrahedralbasi": 5, "cubic": 5, "linearhexabasi": [5, 21], "hexahedr": 5, "quadratichexabasi": 5, "cubichexabasi": 5, "linearquadbasi": [5, 9], "quad": 5, "quadraticquadbasi": 5, "cubicquadbasi": 5, "quarticquadbasi": 5, "quartic": 5, "quinticquadbasi": 5, "quintic": 5, "lineartrianglebasi": [5, 9], "triangular": 5, "quadratictrianglebasi": 5, "cubictrianglebasi": 5, "elementmodel": 5, "heatconduction2d": [5, 9], "con": [5, 7, 8, 9], "heatconduction3d": 5, "pcmheatconduction2d": 5, "linearelasticity2d": 5, "linearelasticity3d": [5, 21], "linearthermoelasticity2d": 5, "steady_flag": 5, "linearthermoelasticity3d": 5, "shellnaturaltransform": 5, "shelltransform": 5, "align": [5, 26], "who": 5, "shellrefaxistransform": 5, "project": [5, 6, 21], "surfac": [5, 24, 26], "getrefaxi": 5, "beamrefaxistransform": 5, "beamtransform": 5, "springidentitytransform": 5, "springtransform": 5, "stif": 5, "ident": [5, 21], "ax": [5, 26], "springrefaxistransform": 5, "Not": [5, 18, 21], "coincid": 5, "springrefframetransform": 5, "arbritrari": 5, "frame": [5, 21], "axis1": 5, "axis2": 5, "getrefax": 5, "axis_j": 5, "axis_i": 5, "element2d": [5, 9], "outputel": [5, 21], "plane_stress_el": [5, 21], "physic": [5, 9, 14, 22, 23], "element3d": [5, 21], "solid_el": [5, 21], "quad4shel": [5, 8, 21], "emploi": 5, "mix": 5, "interpol": 5, "tensori": 5, "mitc": [5, 26], "avoid": 5, "lock": [5, 26], "beam_or_shell_el": [5, 21], "equival": [5, 21], "quad9shel": [5, 21], "quad16shel": 5, "tri3shel": [5, 21], "quad4nonlinearshel": 5, "geometr": [5, 21, 26], "quad9nonlinearshel": 5, "quad16nonlinearshel": 5, "tri3nonlinearshel": 5, "quad4nonlinearthermalshel": 5, "quad9nonlinearthermalshel": 5, "quad16nonlinearthermalshel": 5, "tri3nonlinearthermalshel": 5, "quad4thermalshel": [5, 21], "quad9thermalshel": 5, "quad16thermalshel": 5, "tri3thermalshel": 5, "beam2": [5, 21], "beam3": 5, "beam2modrot": 5, "moder": [5, 26], "beam3modrot": 5, "rbe2": [5, 21], "arbitrari": 5, "independ": 5, "degre": [5, 8, 9, 11, 13, 14, 16, 17, 18, 22, 23, 24, 26], "freedom": [5, 8, 9, 13, 14, 16, 17, 18, 22, 23, 24, 26], "six": 5, "motion": 5, "singl": [5, 6, 9, 21, 23, 26], "rigid_el": [5, 21], "constrained_dof": 5, "attach": [5, 13, 14, 17, 22, 23, 24], "classmethod": [5, 13, 14, 16, 17, 18, 21, 22, 23, 24], "setscalingparamet": 5, "1000": [5, 7, 14, 17, 22, 23], "lagrang": [5, 14, 17, 21, 22, 23, 26], "formul": [5, 13, 21, 24], "rbe": [5, 14, 17, 22, 23], "artifici": [5, 14, 17, 22, 23, 26], "constant": [5, 6, 14, 17, 22, 23], "precondition": [5, 14, 17, 22, 23], "stabil": [5, 14, 17, 22, 23], "rbe3": [5, 21], "power": 5, "unlik": 5, "rbar": 5, "doesn": [5, 21], "addit": [5, 8, 11, 14, 22, 26], "dep_constrained_dof": 5, "eleemnt": 5, "indep_constrained_dof": 5, "massel": [5, 21], "mass_el": [5, 21], "springel": [5, 21], "spring_el": [5, 21], "assembl": [6, 7, 8, 13, 14, 16, 17, 18, 20, 21, 22, 23, 24, 26], "ever": [6, 26], "handl": [6, 8, 14, 17, 22, 23, 26], "averagetemperatur": 6, "spatial": [6, 26], "averag": [6, 14, 22, 23], "volum": [6, 21, 24], "centerofmass": 6, "center": [6, 8, 14, 22, 23], "give": [6, 9, 26], "transient": [6, 9, 21, 23, 26], "cg": 6, "onto": [6, 26], "integr": [6, 21, 23, 26], "displac": [6, 7, 14, 21, 22], "setcompliancetyp": 6, "compliance_typ": 6, "enclosedvolum": 6, "enclos": [6, 21, 24], "ksdisplac": 6, "kreisselmei": 6, "steinhaus": 6, "over": [6, 7, 9, 14, 20, 22, 23, 26], "smooth": 6, "80": 6, "ftype": 6, "str": [6, 13, 14, 16, 17, 18, 21, 22, 23, 24], "discret": [6, 23], "pnorm": 6, "insensit": [6, 13, 14, 16, 17, 18, 21, 22, 23, 24], "necessari": [6, 8, 11, 21, 23], "either": [6, 9, 11, 26], "consid": [6, 8, 26], "threshold": 6, "mean": 6, "least": 6, "exceed": [6, 9], "impli": [6, 21], "safetyfactor": 6, "safeti": 6, "kstemperatur": [6, 9], "momentofinertia": 6, "origin": [6, 10, 21], "i_out": 6, "vec1": 6, "i_tensor": 6, "vec2": 6, "tensor": 6, "ixx": 6, "ixi": 6, "ixz": 6, "iyx": 6, "izx": 6, "izi": 6, "izz": 6, "direction1": 6, "direction2": 6, "aboutcm": 6, "whether": [6, 14, 21, 22, 23], "taken": [6, 26], "structuralmass": [6, 7, 8], "demonstr": [7, 9], "enforc": [7, 16, 18, 21, 26], "quadratur": [7, 26], "less": [7, 9], "__future__": [7, 9], "print_funct": [7, 9], "mpi4pi": [7, 9, 11, 13, 14, 16, 17, 18, 21, 22, 23, 24], "ucrm_vonmisesmassmin": 7, "pyparoptproblem": 7, "def": [7, 8, 9, 21], "__init__": 7, "bdf_name": 7, "meshload": [7, 13, 14, 16, 17, 18, 21, 22, 23, 24], "struct_mesh": 7, "2500": [7, 8], "kg": [7, 8, 9], "70e9": [7, 8], "pa": [7, 8], "350e6": 7, "min_thick": 7, "002": 7, "max_thick": 7, "02": 7, "loop": [7, 9, 23], "num_compon": 7, "descriptor": 7, "index": [7, 9, 10, 13, 14, 16, 17, 18, 21, 22, 23, 24], "design_variable_index": 7, "isofsdt": 7, "cquad": 7, "cquadr": [7, 9, 21], "cquad4": [7, 8, 9, 21], "mitcshel": 7, "component_num": 7, "loader": [7, 21], "50": [7, 9], "force_arrai": 7, "getarrai": 7, "100": [7, 8, 9, 13, 16, 18, 21, 24], "uniform": [7, 14, 22, 23], "re": [7, 22], "dfdu": 7, "pc": 7, "subspac": [7, 14, 17, 22], "restart": [7, 22], "gmre": [7, 22], "o": [7, 9, 26], "mass_scal": 7, "mm": [7, 8], "meter": 7, "thickness_scal": 7, "nvar": 7, "ncon": 7, "super": 7, "comm_self": 7, "inequ": 7, "dens": 7, "both": [7, 11, 18, 21, 22, 26], "setinequalityopt": 7, "dense_ineq": 7, "use_low": 7, "use_upp": 7, "visual": [7, 8, 9, 13, 24, 26], "extra": [7, 21], "py_shel": 7, "iter_count": 7, "getvarsandbound": 7, "xval": 7, "dtype": [7, 13, 14, 16, 17, 18, 21, 22, 23, 24], "xlb": [7, 13, 14, 16, 17, 18, 21, 22, 23, 24], "xub": [7, 13, 14, 16, 17, 18, 21, 22, 23, 24], "evalobjcon": 7, "fail": 7, "varaibl": 7, "fval": 7, "fobj": 7, "von": 7, "mise": 7, "sigma": [7, 14, 17, 21], "evalobjcongradi": 7, "gx": 7, "evaldvsen": 7, "evalsvsen": [7, 14], "out": [7, 8, 9, 13, 14, 16, 17, 18, 21, 22, 23, 24, 26], "everi": [7, 8, 9, 18, 21, 23], "writetofil": 7, "ucrm_it": 7, "pyparopt": 7, "tacs_comm": 7, "crm_box_2nd": 7, "crm_opt": 7, "max_lbfg": 7, "opt": 7, "bfg": 7, "setoutputfil": 7, "setarmijoparam": 7, "zw": 7, "zl": 7, "zu": 7, "getoptimizedpoint": 7, "script": [8, 9, 11], "show": [8, 9, 21], "advanc": [8, 10], "nomin": 8, "1m": 8, "flat": 8, "perimet": 8, "compris": 8, "900": 8, "kn": 8, "act": 8, "submodul": 8, "purpos": [8, 13, 14, 16, 17, 21, 22, 23, 24], "To": [8, 9, 11, 22, 26], "bdffile": [8, 9, 22], "feaassembl": [8, 9], "elemcallback": [8, 9], "automat": [8, 21], "itself": [8, 26], "long": 8, "exist": [8, 21], "done": [8, 9, 21], "our": [8, 9], "dvnum": [8, 9, 21], "compid": [8, 9, 13, 14, 16, 17, 18, 21, 22, 23, 24], "compdescript": [8, 9, 21], "elemdescript": [8, 9, 21], "specialdv": 8, "kwarg": [8, 9, 14, 17, 21, 22, 23], "464": 8, "0e6": 8, "tplate": [8, 9], "005": 8, "transform": 8, "naturalshelltransform": 8, "accord": 8, "elemlist": [8, 9], "els": [8, 9], "catch": 8, "unexpect": 8, "f": [8, 14, 22, 23], "callback": [8, 9], "pretti": 8, "those": [8, 9, 21], "staticproblem": [8, 19, 21], "createstaticproblem": [8, 21, 22], "staticprob": 8, "point_forc": 8, "ve": [8, 9], "accomplish": 8, "addfunct": [8, 9, 14, 17, 22, 23], "uniniti": [8, 9], "minu": 8, "let": 8, "vonmis": 8, "ks_vmfailur": 8, "addloadtonod": [8, 14, 22, 23], "select": [8, 9, 13, 14, 16, 21, 22, 23, 24, 26], "481": 8, "1e4": 8, "nastranord": [8, 14, 21, 22, 23], "evalfunctionssen": [8, 9, 14, 17, 22, 23], "funcssen": [8, 9, 13, 14, 16, 17, 18, 22, 23, 24], "further": [8, 9], "post": [8, 9], "writesolut": [8, 9, 14, 17, 22, 23], "point_force_000": 8, "runscript": [8, 9], "convert": [8, 9, 11, 13, 14, 16, 17, 18, 22, 23, 24], "vtk": [8, 9, 11], "f5tovtk": [8, 9, 11], "paraview": [8, 9, 11], "plt": [8, 9, 11], "f5totec": [8, 9, 11], "tecplot": [8, 9, 11, 13, 24], "cell": 9, "undergo": 9, "cylindr": 9, "embed": 9, "corner": 9, "releas": [9, 11], "larg": [9, 10], "amount": 9, "nearest": 9, "adjac": [9, 13, 21], "prevent": 9, "go": [9, 11], "cascad": 9, "figur": 9, "label": 9, "hand": [9, 14, 22, 23], "multipl": [9, 21], "easi": [9, 21], "enabl": [9, 11, 26], "previou": 9, "three": [9, 10], "item": [9, 21], "pprint": 9, "mateteri": 9, "propertiesfor": 9, "path": [9, 11], "join": 9, "dirnam": 9, "__file__": 9, "battery_pack": 9, "instanti": 9, "065": 9, "battery_rho": 9, "1460": 9, "battery_kappa": 9, "battery_cp": 9, "880": 9, "alum_rho": 9, "2700": 9, "alum_kappa": 9, "204": 9, "alum_cp": 9, "883": 9, "By": [9, 14, 21, 22], "globaldv": [9, 21], "basi": [9, 14, 22, 23], "elif": 9, "ctria3": [9, 21], "ctriar": [9, 21], "recogn": 9, "append": [9, 21], "transientproblem": [9, 19, 21], "declar": 9, "numstep": [9, 21, 23], "createtransientproblem": [9, 21, 23], "flux": 9, "gettimestep": [9, 23], "selectcompid": [9, 14, 21, 22, 23], "addloadtocompon": [9, 14, 22, 23], "just": [9, 11], "specifii": 9, "spread": 9, "sinc": [9, 10, 21, 22, 23, 26], "transfer": 9, "6000": 9, "indic": [9, 14, 17, 21, 22, 23], "watt": 9, "000": 9, "joul": 9, "timestep": [9, 23], "enumer": 9, "00": [9, 21], "face": [9, 14, 21, 22, 23, 24], "closest": 9, "opert": 9, "event": 9, "wa": [9, 10], "withing": 9, "compids_00": 9, "compids_01": 9, "adjec": 9, "compids_04": 9, "04": [9, 21], "With": [9, 26], "ks_temp_corn": 9, "ks_temp_adjac": 9, "ks_temp_diagon": 9, "transient_000_000": 9, "transient_000_050": 9, "050": 9, "transient_000_": 9, "anim": 9, "what": [9, 21], "look": [9, 11, 13, 14, 16, 17, 18, 22, 23, 24], "toolkit": 10, "primarili": 10, "box": 10, "recent": 10, "extend": [10, 11, 26], "dimension": 10, "2010": 10, "multidisciplinari": 10, "group": [10, 13, 16, 18, 20, 24], "georgia": 10, "tech": 10, "lab": 10, "univers": 10, "michigan": 10, "anaconda": 10, "batteri": 10, "pack": 10, "runawai": 10, "director": [10, 11, 27], "core": 10, "search": 10, "page": 10, "readili": 11, "maco": 11, "At": [11, 26], "window": 11, "recommend": [11, 14, 17, 21, 22, 23], "try": 11, "access": [11, 12], "virtual": [11, 26], "vm": 11, "subsystem": 11, "docker": 11, "mdolab": 11, "public": 11, "imag": 11, "conda": 11, "platform": 11, "start": [11, 21, 23], "termin": 11, "n": [11, 13, 14, 16, 17, 18, 21, 22, 23, 24, 26], "activ": 11, "forg": 11, "smdogroup": 11, "bla": 11, "meti": 11, "cython": [11, 12, 13, 14, 16, 17, 18, 22, 23, 24], "suitespars": 11, "amd": 11, "tecio": 11, "fh5": 11, "compat": [11, 21], "clone": 11, "git": 11, "repositori": 11, "copi": [11, 14, 22, 23], "makefil": 11, "info": [11, 21], "edit": 11, "tacs_dir": 11, "cxx": 11, "lapack_lib": 11, "metis_dir": 11, "suitesparse_dir": 11, "tecio_dir": 11, "toolbox": 11, "mind": 11, "divid": [11, 14, 21, 22, 23, 26], "categori": 11, "checkout": 11, "com": 11, "sure": 11, "teciosrc": 11, "teciompisrc": 11, "cfg": 11, "wish": [11, 14, 22, 23], "modifi": [11, 13, 14, 16, 17, 18, 21, 22, 23, 24, 26], "extern": [11, 13, 14, 17, 21, 22, 23, 24], "inde": 11, "alreadi": [11, 14, 21, 22, 23], "simpli": 11, "adjust": 11, "fedoraproject": 11, "org": 11, "lookasid": 11, "pkg": 11, "gz": 11, "5465e67079419a69e0116de24fce58f": 11, "cmake": 11, "drtimothyaldendavi": 11, "www": 11, "boost": 11, "sudo": 11, "apt": 11, "libboost": 11, "dev": 11, "debian": 11, "someth": 11, "No": [11, 14, 17, 21, 23], "rule": [11, 21], "target": 11, "stop": 11, "leav": 11, "somedirectori": 11, "x86_64": 11, "64": 11, "subdirectori": 11, "bash": 11, "f5convert": 11, "f5clean": 11, "clean": 11, "date": 11, "remov": 11, "h": 11, "line": [11, 21, 26], "sub": [11, 22, 23], "numer": 11, "pip": 11, "shortcut": 11, "older": 11, "miss": [11, 21, 24], "libtac": 11, "tree": 11, "newer": 11, "therefor": [11, 21, 26], "publicli": 12, "member": 12, "wrap": 12, "document": 12, "constrain": [13, 21, 24], "dv_i": [13, 21], "dv_j": [13, 21], "abruptli": [13, 21], "delta_t": [13, 16], "t_i": 13, "t_j": 13, "createadjacencyconstraint": [13, 21], "creation": [13, 14, 17, 21, 22, 23, 24], "setopt": [13, 14, 16, 17, 18, 21, 22, 23, 24], "printopt": [13, 14, 16, 17, 18, 21, 22, 23, 24], "outputdir": [13, 14, 17, 22, 23, 24], "writer": [13, 14, 17, 22, 23, 24], "numbersolut": [13, 14, 17, 22, 23, 24], "counter": [13, 14, 17, 21, 22, 23, 24], "outputview": [13, 14, 16, 17, 18, 22, 23, 24], "intracomm": [13, 14, 16, 17, 18, 21, 22, 23, 24], "tacstofh5": [13, 14, 16, 17, 18, 22, 23, 24], "postprocess": [13, 14, 16, 17, 18, 22, 23, 24], "pymeshload": [13, 14, 16, 17, 18, 22, 23, 24], "addconstraint": [13, 16, 18, 24], "connam": [13, 16, 18, 24], "dvindex": [13, 18], "meaning": [13, 16, 18, 22, 23, 24], "evalconstraint": [13, 16, 18, 24], "evalcon": [13, 16, 18, 24], "ignoremiss": [13, 14, 16, 17, 18, 22, 23, 24], "supress": [13, 14, 16, 17, 18, 22, 23, 24], "valid": [13, 14, 16, 17, 18, 22, 23, 24], "caution": [13, 14, 16, 17, 18, 22, 23, 24, 26], "adjconstraint": [13, 18], "le_spar": [13, 16, 18, 21, 24], "c1_le_spar": [13, 16, 18, 24], "12354": [13, 14, 16, 17, 22, 23, 24], "evalconstraintssen": [13, 16, 18, 24], "derivit": [13, 14, 16, 17, 18, 22, 23, 24], "struct": [13, 14, 16, 17, 18, 22, 23, 24], "50x242": [13, 16, 18, 24], "spars": [13, 16, 18, 22, 24], "float64": [13, 14, 16, 17, 18, 21, 22, 23, 24], "writevisu": [13, 24], "basenam": [13, 14, 17, 22, 23, 24], "filenam": [13, 14, 17, 21, 22, 23, 24], "again": [13, 14, 17, 22, 23, 24, 26], "getconstraintbound": [13, 16, 18, 24], "tupl": [13, 16, 18, 22, 24], "conbound": [13, 16, 18, 24], "tacsconstraint": [13, 16, 18, 24], "getconstraintkei": [13, 16, 18, 24], "kei": [13, 14, 16, 17, 18, 21, 22, 23, 24, 26], "far": [13, 14, 16, 17, 18, 22, 23, 24], "getconstraints": [13, 16, 18, 24], "consiz": [13, 16, 18, 24], "funconsizesc": [13, 16, 18, 24], "coord": [13, 14, 16, 17, 18, 21, 22, 23, 24], "getnumcoordin": [13, 14, 16, 17, 18, 22, 23, 24], "ncoord": [13, 14, 16, 17, 18, 22, 23, 24], "getnumdesignvar": [13, 14, 16, 17, 18, 21, 22, 23, 24], "ndv": [13, 14, 16, 17, 18, 21, 22, 23, 24], "nnode": [13, 14, 16, 17, 18, 21, 22, 23, 24, 26], "getnumvari": [13, 14, 16, 17, 18, 22, 23, 24], "nstate": [13, 14, 16, 17, 18, 22, 23, 24], "getopt": [13, 14, 16, 17, 18, 21, 22, 23, 24], "vpn": [13, 14, 16, 17, 18, 21, 22, 23, 24], "printdefaultopt": [13, 14, 16, 17, 18, 21, 22, 23, 24], "nice": [13, 14, 16, 17, 18, 21, 22, 23, 24], "stdout": [13, 14, 16, 17, 18, 21, 22, 23, 24], "varnam": [13, 14, 16, 17, 18, 22, 23, 24], "xpt": [13, 14, 16, 17, 18, 21, 22, 23, 24, 26], "setvarnam": [13, 14, 16, 17, 18, 22, 23, 24], "pyopt": [13, 14, 16, 17, 18, 22, 23, 24], "addvargroup": [13, 14, 16, 17, 18, 22, 23, 24], "relev": [14, 17, 22, 23], "createbucklingproblem": [14, 21], "l2converg": [14, 17, 22, 23], "converg": [14, 17, 22, 23], "l2": [14, 17, 22, 23], "norm": [14, 17, 22, 23, 26], "l2convergencerel": [14, 17, 22, 23], "rbestiffnessscalefactor": [14, 17, 22, 23], "rbeartificialstiff": [14, 17, 22, 23], "001": [14, 17, 22, 23], "subspaces": [14, 17, 22], "krylov": [14, 17, 22], "nrestart": [14, 17, 22], "reset": [14, 17], "suppress": [14, 17, 22, 23], "printtim": [14, 17, 21, 22, 23], "printlevel": [14, 17, 23], "major": [14, 17, 23], "minor": [14, 17, 23], "numeig": [14, 17, 21], "setvalnam": [14, 17], "valnam": [14, 17], "getnumeig": [14, 17], "request": [14, 17, 22, 23], "funcnam": [14, 17, 22, 23], "funchandl": [14, 17, 22, 23], "NOT": [14, 17, 21], "FOR": [14, 17], "evalfunc": [14, 17, 22, 23], "eigsm": [14, 17], "c1_eigsm": [14, 17], "234": [14, 17, 22, 23], "89": [14, 17, 22, 23], "59": [14, 17, 22, 23], "averageload": [14, 22, 23], "remain": [14, 22, 23], "throughout": [14, 22, 23, 26], "would": [14, 22, 23], "1d": [14, 22, 23], "numcompid": [14, 22, 23], "uniformli": [14, 22, 23], "split": [14, 21, 22, 23, 26], "evenli": [14, 21, 22, 23], "unit": [14, 22, 23, 26], "necessarili": [14, 22, 23], "interpret": [14, 21, 22, 23], "being": [14, 22, 23], "qdot": [14, 22, 23], "rate": [14, 22, 23, 26], "fx": [14, 22, 23], "fy": [14, 22, 23], "fz": [14, 22, 23], "mx": [14, 22, 23], "my": [14, 22, 23], "mz": [14, 22, 23], "nodeid": [14, 21, 22, 23], "numnodeid": [14, 22, 23], "signal": [14, 21, 22, 23], "addloadtorh": [14, 22, 23], "fappli": [14, 22, 23], "u": [14, 22, 23, 26], "addtractiontocompon": [14, 22, 23], "faceindex": [14, 22, 23], "addtractiontoel": [14, 22, 23], "elemid": [14, 22, 23], "addpressuretocompon": [14, 22, 23], "fuel": [14, 21, 22, 23, 24], "addpressuretoel": [14, 22, 23], "presur": [14, 22, 23], "scalar": [14, 22, 23, 26], "addinertialload": [14, 22, 23], "inertiavector": [14, 22, 23], "inerti": [14, 22, 23], "due": [14, 22, 23, 26], "acceler": [14, 22, 23], "entir": [14, 21, 22, 23], "commonli": [14, 22, 23], "graviti": [14, 22, 23], "addcentrifugalload": [14, 22, 23], "omegavector": [14, 22, 23], "rotcent": [14, 22, 23], "firstord": [14, 22], "centrifug": [14, 22, 23], "veloc": [14, 22, 23], "rotor": [14, 22, 23], "roll": [14, 22, 23], "aircraft": [14, 22, 23], "rad": [14, 17, 21, 22, 23], "addloadfrombdf": [14, 22, 23], "loadid": [14, 22, 23], "grav": [14, 21, 22, 23], "rforc": [14, 21, 22, 23], "pload2": [14, 21, 22, 23], "pload4": [14, 21, 22, 23], "identif": [14, 22, 23], "zeroload": [14, 22, 23], "fext": [14, 22, 23], "u0": 14, "ex": [14, 21, 22], "eigval": [14, 17], "xptsenslist": [14, 22], "partial": [14, 21, 22, 26], "dvsenslist": [14, 22], "svsenslist": [14, 22], "intent": [14, 17, 22, 23], "program": [14, 17, 22, 23], "logic": [14, 17, 21, 22, 23], "getfunctionkei": [14, 17, 22, 23], "writesensfil": [14, 17, 22, 23], "sen": [14, 17, 22, 23], "tacs_aim": [14, 17, 22, 23], "wrapper": [14, 17, 21, 22, 23], "adjacencyconstraint": [15, 16, 18, 21], "dvconstraint": [15, 21], "panellengthconstraint": [15, 21], "volumeconstraint": [15, 21], "a_0": [16, 21], "dv_0": [16, 21], "a_1": [16, 21], "dv_1": [16, 21], "a_n": [16, 21], "dv_n": [16, 21], "As": [16, 21], "pf_0": 16, "pf_45": 16, "pf_m45": 16, "pf_90": 16, "Or": 16, "blade": [16, 21], "too": [16, 21], "much": 16, "st": 16, "pt": [16, 26], "createdvconstraint": [16, 21], "dvindic": 16, "dvweight": 16, "One": [16, 21], "modal": [17, 21], "createmodalproblem": [17, 21], "squar": [17, 21], "eigenfrequ": 17, "author": 18, "alasdair": 18, "christison": 18, "grai": 18, "bladestiffenedshel": 18, "createpanellengthconstraint": [18, 21], "proc": [18, 21, 22], "325": 18, "1983645": 18, "1415926": 18, "3x": 18, "modalproblem": [19, 21], "bucklingproblem": [19, 21], "offer": 20, "benefit": 20, "robust": 20, "pars": [20, 21], "fewer": 20, "keep": 20, "track": 20, "detail": 20, "discuss": 20, "layer": 21, "hook": 21, "nearli": 21, "custom": 21, "deal": 21, "dr": 21, "kenwai": 21, "gkk": 21, "brook": 21, "histori": 21, "printdebug": 21, "debug": [21, 22], "infer": 21, "element_non": 21, "scalar_2d_el": 21, "scalar_3d_el": 21, "pcm_element": 21, "writeconnect": 21, "writenod": 21, "writedisplac": 21, "writestrain": 21, "writestress": 21, "writeextra": 21, "writeload": 21, "writecoordinatefram": 21, "familysepar": 21, "famili": 21, "charact": 21, "condens": 21, "runtim": 21, "propid": 21, "comment": 21, "belong": 21, "ctetra": 21, "mani": 21, "conm1": 21, "conm2": 21, "thumb": 21, "equivel": 21, "mat2": 21, "prod": [21, 22], "cquad9": 21, "cbar": 21, "crod": 21, "chexa": 21, "cbush": 21, "desvar": 21, "counterpart": 21, "might": 21, "organ": 21, "space": 21, "wing_spar": 21, "seg": 21, "3600": 21, "3310": 21, "3797": 21, "731": 21, "3798": 21, "732": 21, "3799": 21, "733": 21, "3800": 21, "734": 21, "3801": 21, "735": 21, "3802": 21, "736": 21, "97": 21, "3262": 21, "3882": 21, "782": 21, "3601": 21, "98": 21, "3881": 21, "781": 21, "99": 21, "3875": 21, "3888": 21, "3885": 21, "3874": 21, "3887": 21, "3884": 21, "101": 21, "3892": 21, "3899": 21, "3896": 21, "3891": 21, "102": 21, "3898": 21, "3895": 21, "replac": 21, "referenc": 21, "rod_1": 21, "3320": 21, "rod_2": 21, "6600": 21, "6310": 21, "6320": 21, "hmname": 21, "quot": 21, "hwcolor": 21, "28": 21, "rib2": 21, "29": 21, "scalelist": 21, "tripan": 21, "len": 21, "addglobaldv": 21, "affect": 21, "cleanli": 21, "intern": [21, 24], "increment": 21, "worri": 21, "elemcallbackfunct": 21, "unbound": 21, "getglobaldv": 21, "getglobaldvkei": 21, "globaldvkei": 21, "getglobaldvnum": 21, "globaldvnum": 21, "gettotalnumglobaldv": 21, "assignmassdv": 21, "eid": 21, "dvname": 21, "concentr": 21, "exclud": 21, "includebound": 21, "ngroup": 21, "includeop": 21, "excludeop": 21, "projectvector": 21, "idea": 21, "ncomp": 21, "subgroup": 21, "oper": 21, "boil": 21, "down": 21, "subset": 21, "attempt": 21, "effici": 21, "critic": 21, "simplest": 21, "componentid": 21, "11th": 21, "fifth": 21, "probabl": 21, "advis": 21, "similarli": 21, "except": 21, "subtract": 21, "le_rib": 21, "convex": 21, "hull": 21, "essenti": 21, "concav": 21, "smaller": 21, "accumul": 21, "skin": 21, "trail": 21, "u_skin": 21, "te_spar": 21, "conveni": [21, 26], "sort": 21, "alphabet": 21, "sequenti": 21, "includeopt": 21, "AND": 21, "getbdfinfo": 21, "bdfinfo": 21, "getcompnam": 21, "getglobalnodeidsforcomp": 21, "getlocalnodeidsforcomp": 21, "last": 21, "later": [21, 26], "callabl": 21, "getorigdesignvar": 21, "were": 21, "asbvec": 21, "gettotalnumdesignvar": 21, "getorignod": 21, "getnumownedmultipliernod": 21, "nmultnod": 21, "getlocalmultipliernodeid": 21, "var": [21, 22, 23, 26], "applybcstovec": 21, "identifi": 21, "expect": 21, "createtacsprobsfrombdf": 21, "skip": 21, "structproblem": 21, "predefin": 21, "tacsproblem": 21, "loadcas": [21, 22], "tload1": 21, "tload2": 21, "dload": 21, "sol": 21, "109": 21, "103": 21, "writebdf": 21, "actual": [21, 22, 23], "createvolumeconstraint": [21, 24], "close": [21, 24], "manifold": [21, 24], "water": [21, 24], "tight": [21, 24], "enough": [21, 24], "wingbox": [21, 24], "vol_w": [21, 24], "vol_fuel": [21, 24], "piec": [22, 23], "ksmsolver": 22, "natural_ord": 22, "rcm_order": 22, "nd_order": 22, "tacs_amd_ord": 22, "multicolor_ord": 22, "pcfilllevel": 22, "pcfillratio": 22, "flexibl": [22, 26], "usemonitor": 22, "monitor": 22, "monitorfrequ": 22, "setloadscal": 22, "reason": [22, 23], "eval": [22, 23], "cl_mass": [22, 23], "c1_mass": [22, 23], "adjointlist": 22, "getresidu": 22, "getjacobian": 22, "scipi": 22, "bsr_matric": 22, "b": 22, "tacsparallelmat": 22, "bsr_matrix": 22, "addtransposejacvecproduct": 22, "solveadjoint": 22, "bvec": 22, "writeloadtobdf": 22, "loadcaseid": 22, "nastaran": 22, "timeintegr": 23, "integrationord": 23, "march": 23, "jacassemblyfreq": 23, "reassembl": 23, "slice": 23, "getnumtimestag": 23, "stage": 23, "multi": 23, "numstag": 23, "gettimestag": 23, "timestag": 23, "applic": 23, "udotdot": 23, "dvar": 23, "ddvar": 23, "prepiterativesolv": 23, "prepar": 23, "aeroelast": 23, "tightli": 23, "fluid": 23, "outer": 23, "multistag": 23, "numvarspernod": 23, "tighli": 23, "externalcfdsolv": 23, "dstate": 23, "ddstate": 23, "volchecktol": 24, "closur": 24, "volconstraint": 24, "c1_wing": 24, "captur": 26, "via": 26, "mathbf": 26, "induc": 26, "exact": 26, "left": 26, "q": 26, "undeform": 26, "tempor": 26, "focu": 26, "dot": 26, "omega": 26, "ddot": 26, "concret": 26, "explan": 26, "_": 26, "m_": 26, "mathbb": 26, "xi": 26, "lagrangian": 26, "l": 26, "dfrac": 26, "dt": 26, "engeri": 26, "sum_": 26, "w_": 26, "t_": 26, "n_": 26, "xi_": 26, "0i": 26, "accur": 26, "predict": 26, "quaternion": 26, "epsilon": 26, "eta": 26, "lambda": 26, "satisifi": 26, "construct": 26, "ref": 26, "perpendicular": 26, "centerlin": 26, "tangent": 26, "hat": 26, "preserv": 26, "zeta": 26, "bmatrix": 26, "xi_1": 26, "xi_2": 26, "eta_": 26, "ot": 26, "quantiti": 26, "introduc": 26, "systen": 26, "deflect": 26, "never": 26, "approx": 26, "zeroth": 26, "orthogon": 26, "mathcal": 26, "twist": 26, "theta": 26, "invari": 26, "transofrm": 26, "theta_": 26, "caus": 26, "epsilon_": 26, "alpha_": 26, "xx": 26, "xy": 26, "yy": 26, "aris": 26, "kappa_": 26, "penal": 26, "q_": 26, "penalti": 26, "cartesian": 26, "deviat": 26, "k_": 26, "v_": 26, "u_": 26, "suffer": 26, "phenomena": 26, "inabl": 26, "pure": 26, "without": 26, "allevi": 26, "ty": 26, "exhibit": 26, "free": 26, "context": 26, "tild": 26, "green": 26, "longer": 26, "du": 26, "dx": 26, "fg": 26, "dq": 26, "lamb": 26, "xf": 26, "computenodalfram": 26, "const": 26, "tacsscalar": 26, "xd": 26, "interpolatefram": 26, "xdz": 26, "computederiv": 26, "npt": 26, "computedirector": 26, "vars_per_nod": 26, "dir": 26, "computetransform": 26, "curvilinear": 26, "invers": 26, "3x3": 26, "xdinv": 26, "detxd": 26, "inv3x3": 26, "zxdinv": 26, "tmp": 26, "ux0": 26, "ueta": 26, "u0x": 26, "u0d": 26, "matmatmult": 26, "mattransmatmult": 26, "u1x": 26, "u1d": 26, "matmatmultadd": 26}, "objects": {"TACS": [[2, 0, 1, "", "Assembler"], [2, 0, 1, "", "Creator"], [2, 0, 1, "", "Integrator"], [2, 0, 1, "", "MeshLoader"]], "TACS.Assembler": [[2, 1, 1, "", "addAdjointResProducts"], [2, 1, 1, "", "addAdjointResXptSensProducts"], [2, 1, 1, "", "addDVSens"], [2, 1, 1, "", "addJacobianVecProduct"], [2, 1, 1, "", "addMatDVSensInnerProduct"], [2, 1, 1, "", "addSVSens"], [2, 1, 1, "", "addXptSens"], [2, 1, 1, "", "applyBCs"], [2, 1, 1, "", "applyMatBCs"], [2, 1, 1, "", "assembleJacobian"], [2, 1, 1, "", "assembleMatCombo"], [2, 1, 1, "", "assembleMatType"], [2, 1, 1, "", "assembleRes"], [2, 1, 1, "", "computeReordering"], [2, 1, 1, "", "copyVariables"], [2, 1, 1, "", "create"], [2, 1, 1, "", "createDesignVec"], [2, 1, 1, "", "createMat"], [2, 1, 1, "", "createNodeVec"], [2, 1, 1, "", "createSchurMat"], [2, 1, 1, "", "createVec"], [2, 1, 1, "", "evalEnergies"], [2, 1, 1, "", "evalFunctions"], [2, 1, 1, "", "getBcMap"], [2, 1, 1, "", "getDesignVarRange"], [2, 1, 1, "", "getDesignVars"], [2, 1, 1, "", "getElementData"], [2, 1, 1, "", "getElementNodes"], [2, 1, 1, "", "getElements"], [2, 1, 1, "", "getInitConditions"], [2, 1, 1, "", "getMPIComm"], [2, 1, 1, "", "getNodes"], [2, 1, 1, "", "getNumDependentNodes"], [2, 1, 1, "", "getNumElements"], [2, 1, 1, "", "getNumNodes"], [2, 1, 1, "", "getNumOwnedNodes"], [2, 1, 1, "", "getOwnerRange"], [2, 1, 1, "", "getReordering"], [2, 1, 1, "", "getSimulationTime"], [2, 1, 1, "", "getVariables"], [2, 1, 1, "", "getVarsPerNode"], [2, 1, 1, "", "initialize"], [2, 1, 1, "", "reorderVec"], [2, 1, 1, "", "setAuxElements"], [2, 1, 1, "", "setBCValuesFromVec"], [2, 1, 1, "", "setBCs"], [2, 1, 1, "", "setDependentNodes"], [2, 1, 1, "", "setDesignVars"], [2, 1, 1, "", "setElementConnectivity"], [2, 1, 1, "", "setElements"], [2, 1, 1, "", "setInitConditions"], [2, 1, 1, "", "setNodes"], [2, 1, 1, "", "setNumThreads"], [2, 1, 1, "", "setSimulationTime"], [2, 1, 1, "", "setVariables"], [2, 1, 1, "", "testElement"], [2, 1, 1, "", "testFunction"], [2, 1, 1, "", "zeroDDotVariables"], [2, 1, 1, "", "zeroDotVariables"], [2, 1, 1, "", "zeroVariables"]], "TACS.Creator": [[2, 1, 1, "", "getElementPartition"], [2, 1, 1, "", "setBoundaryConditions"], [2, 1, 1, "", "setElements"], [2, 1, 1, "", "setGlobalConnectivity"]], "TACS.Integrator": [[2, 1, 1, "", "checkGradients"], [2, 1, 1, "", "evalFunctions"], [2, 1, 1, "", "getAdjoint"], [2, 1, 1, "", "getGradient"], [2, 1, 1, "", "getNumTimeSteps"], [2, 1, 1, "", "getStates"], [2, 1, 1, "", "getXptGradient"], [2, 1, 1, "", "initAdjoint"], [2, 1, 1, "", "integrate"], [2, 1, 1, "", "integrateAdjoint"], [2, 1, 1, "", "iterate"], [2, 1, 1, "", "iterateAdjoint"], [2, 1, 1, "", "loadStates"], [2, 1, 1, "", "persistStates"], [2, 1, 1, "", "postAdjoint"], [2, 1, 1, "", "setAbsTol"], [2, 1, 1, "", "setFH5"], [2, 1, 1, "", "setFunctions"], [2, 1, 1, "", "setInitNewtonDeltaFraction"], [2, 1, 1, "", "setJacAssemblyFreq"], [2, 1, 1, "", "setKrylovSubspaceMethod"], [2, 1, 1, "", "setMaxNewtonIters"], [2, 1, 1, "", "setOutputFrequency"], [2, 1, 1, "", "setOutputPrefix"], [2, 1, 1, "", "setPrintLevel"], [2, 1, 1, "", "setRelTol"], [2, 1, 1, "", "setTimeInterval"], [2, 1, 1, "", "setUseLapack"], [2, 1, 1, "", "setUseSchurMat"]], "TACS.MeshLoader": [[2, 1, 1, "", "addAuxElement"], [2, 1, 1, "", "addFunctionDomain"], [2, 1, 1, "", "createTACS"], [2, 1, 1, "", "getBCs"], [2, 1, 1, "", "getComponentDescript"], [2, 1, 1, "", "getConnectivity"], [2, 1, 1, "", "getElementDescript"], [2, 1, 1, "", "getNumComponents"], [2, 1, 1, "", "scanBDFFile"], [2, 1, 1, "", "setElement"]], "tacs": [[3, 2, 0, "module-0", "constitutive"], [5, 2, 0, "module-2", "elements"], [6, 2, 0, "-", "functions"], [21, 2, 0, "-", "pytacs"]], "tacs.constitutive": [[3, 0, 1, "", "BasicBeamConstitutive"], [3, 0, 1, "", "BladeStiffenedShellConstitutive"], [3, 0, 1, "", "CompositeShellConstitutive"], [3, 0, 1, "", "DOFSpringConstitutive"], [3, 0, 1, "", "GeneralMassConstitutive"], [3, 0, 1, "", "GeneralSpringConstitutive"], [3, 0, 1, "", "IsoRectangleBeamConstitutive"], [3, 0, 1, "", "IsoShellConstitutive"], [3, 0, 1, "", "IsoTubeBeamConstitutive"], [3, 0, 1, "", "LamParamShellConstitutive"], [3, 0, 1, "", "MaterialProperties"], [3, 0, 1, "", "OrthotropicPly"], [3, 0, 1, "", "PhaseChangeMaterialConstitutive"], [3, 0, 1, "", "PlaneStressConstitutive"], [3, 0, 1, "", "PointMassConstitutive"], [3, 0, 1, "", "ShellConstitutive"], [3, 0, 1, "", "SmearedCompositeShellConstitutive"], [3, 0, 1, "", "SolidConstitutive"]], "tacs.constitutive.BasicBeamConstitutive": [[3, 1, 1, "", "generateBDFCard"]], "tacs.constitutive.BladeStiffenedShellConstitutive": [[3, 1, 1, "", "setKSWeight"], [3, 1, 1, "", "setPanelPlyFractionBounds"], [3, 1, 1, "", "setPanelThicknessBounds"], [3, 1, 1, "", "setStiffenerHeightBounds"], [3, 1, 1, "", "setStiffenerPitchBounds"], [3, 1, 1, "", "setStiffenerPlyFractionBounds"], [3, 1, 1, "", "setStiffenerThicknessBounds"]], "tacs.constitutive.CompositeShellConstitutive": [[3, 1, 1, "", "generateBDFCard"]], "tacs.constitutive.DOFSpringConstitutive": [[3, 1, 1, "", "generateBDFCard"]], "tacs.constitutive.GeneralMassConstitutive": [[3, 1, 1, "", "evalMassMatrix"]], "tacs.constitutive.IsoRectangleBeamConstitutive": [[3, 1, 1, "", "generateBDFCard"]], "tacs.constitutive.IsoShellConstitutive": [[3, 1, 1, "", "generateBDFCard"]], "tacs.constitutive.IsoTubeBeamConstitutive": [[3, 1, 1, "", "generateBDFCard"]], "tacs.constitutive.MaterialProperties": [[3, 1, 1, "", "generateBDFCard"], [3, 1, 1, "", "getMaterialProperties"], [3, 1, 1, "", "getNastranID"], [3, 1, 1, "", "setDensity"], [3, 1, 1, "", "setNastranID"], [3, 1, 1, "", "setSpecificHeat"]], "tacs.constitutive.OrthotropicPly": [[3, 1, 1, "", "getMaterialProperties"]], "tacs.constitutive.ShellConstitutive": [[3, 1, 1, "", "setDrillingRegularization"]], "tacs.constitutive.SmearedCompositeShellConstitutive": [[3, 1, 1, "", "generateBDFCard"]], "tacs.constitutive.SolidConstitutive": [[3, 1, 1, "", "generateBDFCard"]], "tacs.constraints": [[13, 0, 1, "", "AdjacencyConstraint"], [16, 0, 1, "", "DVConstraint"], [18, 0, 1, "", "PanelLengthConstraint"], [24, 0, 1, "", "VolumeConstraint"], [13, 2, 0, "-", "adjacency"], [16, 2, 0, "-", "dv"], [18, 2, 0, "-", "panel_length"], [24, 2, 0, "-", "volume"]], "tacs.constraints.AdjacencyConstraint": [[13, 1, 1, "", "addConstraint"], [13, 3, 1, "", "dtype"], [13, 1, 1, "", "evalConstraints"], [13, 1, 1, "", "evalConstraintsSens"], [13, 1, 1, "", "getConstraintBounds"], [13, 1, 1, "", "getConstraintKeys"], [13, 1, 1, "", "getConstraintSizes"], [13, 1, 1, "", "getDesignVarRange"], [13, 1, 1, "", "getDesignVars"], [13, 1, 1, "", "getNodes"], [13, 1, 1, "", "getNumCoordinates"], [13, 1, 1, "", "getNumDesignVars"], [13, 1, 1, "", "getNumOwnedNodes"], [13, 1, 1, "", "getNumVariables"], [13, 1, 1, "", "getOption"], [13, 1, 1, "", "getVarsPerNode"], [13, 1, 1, "", "printDefaultOptions"], [13, 1, 1, "", "printOptions"], [13, 1, 1, "", "setDesignVars"], [13, 1, 1, "", "setNodes"], [13, 1, 1, "", "setOption"], [13, 1, 1, "", "setVarName"], [13, 1, 1, "", "writeVisualization"]], "tacs.constraints.DVConstraint": [[16, 1, 1, "", "addConstraint"], [16, 3, 1, "", "dtype"], [16, 1, 1, "", "evalConstraints"], [16, 1, 1, "", "evalConstraintsSens"], [16, 1, 1, "", "getConstraintBounds"], [16, 1, 1, "", "getConstraintKeys"], [16, 1, 1, "", "getConstraintSizes"], [16, 1, 1, "", "getDesignVarRange"], [16, 1, 1, "", "getDesignVars"], [16, 1, 1, "", "getNodes"], [16, 1, 1, "", "getNumCoordinates"], [16, 1, 1, "", "getNumDesignVars"], [16, 1, 1, "", "getNumOwnedNodes"], [16, 1, 1, "", "getNumVariables"], [16, 1, 1, "", "getOption"], [16, 1, 1, "", "getVarsPerNode"], [16, 1, 1, "", "printDefaultOptions"], [16, 1, 1, "", "printOptions"], [16, 1, 1, "", "setDesignVars"], [16, 1, 1, "", "setNodes"], [16, 1, 1, "", "setOption"], [16, 1, 1, "", "setVarName"]], "tacs.constraints.PanelLengthConstraint": [[18, 1, 1, "", "addConstraint"], [18, 3, 1, "", "dtype"], [18, 1, 1, "", "evalConstraints"], [18, 1, 1, "", "evalConstraintsSens"], [18, 1, 1, "", "getConstraintBounds"], [18, 1, 1, "", "getConstraintKeys"], [18, 1, 1, "", "getConstraintSizes"], [18, 1, 1, "", "getDesignVarRange"], [18, 1, 1, "", "getDesignVars"], [18, 1, 1, "", "getNodes"], [18, 1, 1, "", "getNumCoordinates"], [18, 1, 1, "", "getNumDesignVars"], [18, 1, 1, "", "getNumOwnedNodes"], [18, 1, 1, "", "getNumVariables"], [18, 1, 1, "", "getOption"], [18, 1, 1, "", "getVarsPerNode"], [18, 1, 1, "", "printDefaultOptions"], [18, 1, 1, "", "printOptions"], [18, 1, 1, "", "setDesignVars"], [18, 1, 1, "", "setNodes"], [18, 1, 1, "", "setOption"], [18, 1, 1, "", "setVarName"]], "tacs.constraints.VolumeConstraint": [[24, 1, 1, "", "addConstraint"], [24, 3, 1, "", "dtype"], [24, 1, 1, "", "evalConstraints"], [24, 1, 1, "", "evalConstraintsSens"], [24, 1, 1, "", "getConstraintBounds"], [24, 1, 1, "", "getConstraintKeys"], [24, 1, 1, "", "getConstraintSizes"], [24, 1, 1, "", "getDesignVarRange"], [24, 1, 1, "", "getDesignVars"], [24, 1, 1, "", "getNodes"], [24, 1, 1, "", "getNumCoordinates"], [24, 1, 1, "", "getNumDesignVars"], [24, 1, 1, "", "getNumOwnedNodes"], [24, 1, 1, "", "getNumVariables"], [24, 1, 1, "", "getOption"], [24, 1, 1, "", "getVarsPerNode"], [24, 1, 1, "", "printDefaultOptions"], [24, 1, 1, "", "printOptions"], [24, 1, 1, "", "setDesignVars"], [24, 1, 1, "", "setNodes"], [24, 1, 1, "", "setOption"], [24, 1, 1, "", "setVarName"], [24, 1, 1, "", "writeVisualization"]], "tacs.elements": [[5, 0, 1, "", "Beam2"], [5, 0, 1, "", "Beam2ModRot"], [5, 0, 1, "", "Beam3"], [5, 0, 1, "", "Beam3ModRot"], [5, 0, 1, "", "BeamRefAxisTransform"], [5, 0, 1, "", "CubicHexaBasis"], [5, 0, 1, "", "CubicQuadBasis"], [5, 0, 1, "", "CubicTetrahedralBasis"], [5, 0, 1, "", "CubicTriangleBasis"], [5, 0, 1, "", "Element2D"], [5, 0, 1, "", "Element3D"], [5, 0, 1, "", "HeatConduction2D"], [5, 0, 1, "", "HeatConduction3D"], [5, 0, 1, "", "LinearElasticity2D"], [5, 0, 1, "", "LinearElasticity3D"], [5, 0, 1, "", "LinearHexaBasis"], [5, 0, 1, "", "LinearQuadBasis"], [5, 0, 1, "", "LinearTetrahedralBasis"], [5, 0, 1, "", "LinearThermoelasticity2D"], [5, 0, 1, "", "LinearThermoelasticity3D"], [5, 0, 1, "", "LinearTriangleBasis"], [5, 0, 1, "", "MassElement"], [5, 0, 1, "", "PCMHeatConduction2D"], [5, 0, 1, "", "Quad16NonlinearShell"], [5, 0, 1, "", "Quad16NonlinearThermalShell"], [5, 0, 1, "", "Quad16Shell"], [5, 0, 1, "", "Quad16ThermalShell"], [5, 0, 1, "", "Quad4NonlinearShell"], [5, 0, 1, "", "Quad4NonlinearThermalShell"], [5, 0, 1, "", "Quad4Shell"], [5, 0, 1, "", "Quad4ThermalShell"], [5, 0, 1, "", "Quad9NonlinearShell"], [5, 0, 1, "", "Quad9NonlinearThermalShell"], [5, 0, 1, "", "Quad9Shell"], [5, 0, 1, "", "Quad9ThermalShell"], [5, 0, 1, "", "QuadraticHexaBasis"], [5, 0, 1, "", "QuadraticQuadBasis"], [5, 0, 1, "", "QuadraticTetrahedralBasis"], [5, 0, 1, "", "QuadraticTriangleBasis"], [5, 0, 1, "", "QuarticQuadBasis"], [5, 0, 1, "", "QuinticQuadBasis"], [5, 0, 1, "", "RBE2"], [5, 0, 1, "", "RBE3"], [5, 0, 1, "", "ShellNaturalTransform"], [5, 0, 1, "", "ShellRefAxisTransform"], [5, 0, 1, "", "SpringElement"], [5, 0, 1, "", "SpringIdentityTransform"], [5, 0, 1, "", "SpringRefAxisTransform"], [5, 0, 1, "", "SpringRefFrameTransform"], [5, 0, 1, "", "Tri3NonlinearShell"], [5, 0, 1, "", "Tri3NonlinearThermalShell"], [5, 0, 1, "", "Tri3Shell"], [5, 0, 1, "", "Tri3ThermalShell"]], "tacs.elements.BeamRefAxisTransform": [[5, 1, 1, "", "getRefAxis"]], "tacs.elements.RBE2": [[5, 1, 1, "", "setScalingParameters"]], "tacs.elements.RBE3": [[5, 1, 1, "", "setScalingParameters"]], "tacs.elements.ShellRefAxisTransform": [[5, 1, 1, "", "getRefAxis"]], "tacs.elements.SpringRefAxisTransform": [[5, 1, 1, "", "getRefAxis"]], "tacs.elements.SpringRefFrameTransform": [[5, 1, 1, "", "getRefAxes"]], "tacs.functions": [[6, 0, 1, "", "AverageTemperature"], [6, 0, 1, "", "CenterOfMass"], [6, 0, 1, "", "Compliance"], [6, 0, 1, "", "EnclosedVolume"], [6, 0, 1, "", "KSDisplacement"], [6, 0, 1, "", "KSFailure"], [6, 0, 1, "", "KSTemperature"], [6, 0, 1, "", "MomentOfInertia"], [6, 0, 1, "", "StructuralMass"]], "tacs.functions.Compliance": [[6, 1, 1, "", "setComplianceType"]], "tacs.problems": [[14, 0, 1, "", "BucklingProblem"], [17, 0, 1, "", "ModalProblem"], [22, 0, 1, "", "StaticProblem"], [23, 0, 1, "", "TransientProblem"], [14, 2, 0, "-", "buckling"], [17, 2, 0, "-", "modal"], [22, 2, 0, "-", "static"], [23, 2, 0, "-", "transient"]], "tacs.problems.BucklingProblem": [[14, 1, 1, "", "addCentrifugalLoad"], [14, 1, 1, "", "addDVSens"], [14, 1, 1, "", "addFunction"], [14, 1, 1, "", "addInertialLoad"], [14, 1, 1, "", "addLoadFromBDF"], [14, 1, 1, "", "addLoadToComponents"], [14, 1, 1, "", "addLoadToNodes"], [14, 1, 1, "", "addLoadToRHS"], [14, 1, 1, "", "addPressureToComponents"], [14, 1, 1, "", "addPressureToElements"], [14, 1, 1, "", "addTractionToComponents"], [14, 1, 1, "", "addTractionToElements"], [14, 1, 1, "", "addXptSens"], [14, 3, 1, "", "dtype"], [14, 1, 1, "", "evalFunctions"], [14, 1, 1, "", "evalFunctionsSens"], [14, 1, 1, "", "evalSVSens"], [14, 1, 1, "", "getDesignVarRange"], [14, 1, 1, "", "getDesignVars"], [14, 1, 1, "", "getFunctionKeys"], [14, 1, 1, "", "getNodes"], [14, 1, 1, "", "getNumCoordinates"], [14, 1, 1, "", "getNumDesignVars"], [14, 1, 1, "", "getNumEigs"], [14, 1, 1, "", "getNumOwnedNodes"], [14, 1, 1, "", "getNumVariables"], [14, 1, 1, "", "getOption"], [14, 1, 1, "", "getVariables"], [14, 1, 1, "", "getVarsPerNode"], [14, 1, 1, "", "printDefaultOptions"], [14, 1, 1, "", "printOptions"], [14, 1, 1, "", "setDesignVars"], [14, 1, 1, "", "setNodes"], [14, 1, 1, "", "setOption"], [14, 1, 1, "", "setValName"], [14, 1, 1, "", "setVarName"], [14, 1, 1, "", "solve"], [14, 1, 1, "", "writeSensFile"], [14, 1, 1, "", "writeSolution"], [14, 1, 1, "", "zeroLoads"]], "tacs.problems.ModalProblem": [[17, 1, 1, "", "addFunction"], [17, 3, 1, "", "dtype"], [17, 1, 1, "", "evalFunctions"], [17, 1, 1, "", "evalFunctionsSens"], [17, 1, 1, "", "getDesignVarRange"], [17, 1, 1, "", "getDesignVars"], [17, 1, 1, "", "getFunctionKeys"], [17, 1, 1, "", "getNodes"], [17, 1, 1, "", "getNumCoordinates"], [17, 1, 1, "", "getNumDesignVars"], [17, 1, 1, "", "getNumEigs"], [17, 1, 1, "", "getNumOwnedNodes"], [17, 1, 1, "", "getNumVariables"], [17, 1, 1, "", "getOption"], [17, 1, 1, "", "getVariables"], [17, 1, 1, "", "getVarsPerNode"], [17, 1, 1, "", "printDefaultOptions"], [17, 1, 1, "", "printOptions"], [17, 1, 1, "", "setDesignVars"], [17, 1, 1, "", "setNodes"], [17, 1, 1, "", "setOption"], [17, 1, 1, "", "setValName"], [17, 1, 1, "", "setVarName"], [17, 1, 1, "", "solve"], [17, 1, 1, "", "writeSensFile"], [17, 1, 1, "", "writeSolution"]], "tacs.problems.StaticProblem": [[22, 1, 1, "", "addAdjointResProducts"], [22, 1, 1, "", "addAdjointResXptSensProducts"], [22, 1, 1, "", "addCentrifugalLoad"], [22, 1, 1, "", "addDVSens"], [22, 1, 1, "", "addFunction"], [22, 1, 1, "", "addInertialLoad"], [22, 1, 1, "", "addLoadFromBDF"], [22, 1, 1, "", "addLoadToComponents"], [22, 1, 1, "", "addLoadToNodes"], [22, 1, 1, "", "addLoadToRHS"], [22, 1, 1, "", "addPressureToComponents"], [22, 1, 1, "", "addPressureToElements"], [22, 1, 1, "", "addSVSens"], [22, 1, 1, "", "addTractionToComponents"], [22, 1, 1, "", "addTractionToElements"], [22, 1, 1, "", "addTransposeJacVecProduct"], [22, 1, 1, "", "addXptSens"], [22, 3, 1, "", "dtype"], [22, 1, 1, "", "evalFunctions"], [22, 1, 1, "", "evalFunctionsSens"], [22, 1, 1, "", "getDesignVarRange"], [22, 1, 1, "", "getDesignVars"], [22, 1, 1, "", "getFunctionKeys"], [22, 1, 1, "", "getJacobian"], [22, 1, 1, "", "getNodes"], [22, 1, 1, "", "getNumCoordinates"], [22, 1, 1, "", "getNumDesignVars"], [22, 1, 1, "", "getNumOwnedNodes"], [22, 1, 1, "", "getNumVariables"], [22, 1, 1, "", "getOption"], [22, 1, 1, "", "getResidual"], [22, 1, 1, "", "getVariables"], [22, 1, 1, "", "getVarsPerNode"], [22, 4, 1, "", "loadScale"], [22, 1, 1, "", "printDefaultOptions"], [22, 1, 1, "", "printOptions"], [22, 1, 1, "", "setDesignVars"], [22, 1, 1, "", "setLoadScale"], [22, 1, 1, "", "setNodes"], [22, 1, 1, "", "setOption"], [22, 1, 1, "", "setVarName"], [22, 1, 1, "", "setVariables"], [22, 1, 1, "", "solve"], [22, 1, 1, "", "solveAdjoint"], [22, 1, 1, "", "writeLoadToBDF"], [22, 1, 1, "", "writeSensFile"], [22, 1, 1, "", "writeSolution"], [22, 1, 1, "", "zeroLoads"], [22, 1, 1, "", "zeroVariables"]], "tacs.problems.TransientProblem": [[23, 1, 1, "", "addCentrifugalLoad"], [23, 1, 1, "", "addFunction"], [23, 1, 1, "", "addInertialLoad"], [23, 1, 1, "", "addLoadFromBDF"], [23, 1, 1, "", "addLoadToComponents"], [23, 1, 1, "", "addLoadToNodes"], [23, 1, 1, "", "addLoadToRHS"], [23, 1, 1, "", "addPressureToComponents"], [23, 1, 1, "", "addPressureToElements"], [23, 1, 1, "", "addTractionToComponents"], [23, 1, 1, "", "addTractionToElements"], [23, 3, 1, "", "dtype"], [23, 1, 1, "", "evalFunctions"], [23, 1, 1, "", "evalFunctionsSens"], [23, 1, 1, "", "getDesignVarRange"], [23, 1, 1, "", "getDesignVars"], [23, 1, 1, "", "getFunctionKeys"], [23, 1, 1, "", "getNodes"], [23, 1, 1, "", "getNumCoordinates"], [23, 1, 1, "", "getNumDesignVars"], [23, 1, 1, "", "getNumOwnedNodes"], [23, 1, 1, "", "getNumTimeStages"], [23, 1, 1, "", "getNumTimeSteps"], [23, 1, 1, "", "getNumVariables"], [23, 1, 1, "", "getOption"], [23, 1, 1, "", "getTimeStages"], [23, 1, 1, "", "getTimeSteps"], [23, 1, 1, "", "getVariables"], [23, 1, 1, "", "getVarsPerNode"], [23, 1, 1, "", "iterate"], [23, 1, 1, "", "prepIterativeSolve"], [23, 1, 1, "", "printDefaultOptions"], [23, 1, 1, "", "printOptions"], [23, 1, 1, "", "setDesignVars"], [23, 1, 1, "", "setInitConditions"], [23, 1, 1, "", "setNodes"], [23, 1, 1, "", "setOption"], [23, 1, 1, "", "setVarName"], [23, 1, 1, "", "solve"], [23, 1, 1, "", "writeSensFile"], [23, 1, 1, "", "writeSolution"], [23, 1, 1, "", "zeroLoads"]], "tacs.pytacs": [[21, 5, 1, "", "elemCallBack"], [21, 0, 1, "", "pyTACS"]], "tacs.pytacs.pyTACS": [[21, 1, 1, "", "addGlobalDV"], [21, 1, 1, "", "applyBCsToVec"], [21, 1, 1, "", "assignMassDV"], [21, 1, 1, "", "createAdjacencyConstraint"], [21, 1, 1, "", "createBucklingProblem"], [21, 1, 1, "", "createDVConstraint"], [21, 1, 1, "", "createDesignVec"], [21, 1, 1, "", "createModalProblem"], [21, 1, 1, "", "createNodeVec"], [21, 1, 1, "", "createPanelLengthConstraint"], [21, 1, 1, "", "createStaticProblem"], [21, 1, 1, "", "createTACSProbsFromBDF"], [21, 1, 1, "", "createTransientProblem"], [21, 1, 1, "", "createVec"], [21, 1, 1, "", "createVolumeConstraint"], [21, 3, 1, "", "dtype"], [21, 1, 1, "", "getBDFInfo"], [21, 1, 1, "", "getCompNames"], [21, 1, 1, "", "getDesignVarRange"], [21, 1, 1, "", "getGlobalDVKeys"], [21, 1, 1, "", "getGlobalDVNums"], [21, 1, 1, "", "getGlobalDVs"], [21, 1, 1, "", "getGlobalNodeIDsForComps"], [21, 1, 1, "", "getLocalMultiplierNodeIDs"], [21, 1, 1, "", "getLocalNodeIDsForComps"], [21, 1, 1, "", "getNumComponents"], [21, 1, 1, "", "getNumDesignVars"], [21, 1, 1, "", "getNumOwnedMultiplierNodes"], [21, 1, 1, "", "getNumOwnedNodes"], [21, 1, 1, "", "getOption"], [21, 1, 1, "", "getOrigDesignVars"], [21, 1, 1, "", "getOrigNodes"], [21, 1, 1, "", "getTotalNumDesignVars"], [21, 1, 1, "", "getTotalNumGlobalDVs"], [21, 1, 1, "", "getVarsPerNode"], [21, 1, 1, "", "initialize"], [21, 1, 1, "", "printDefaultOptions"], [21, 1, 1, "", "printOptions"], [21, 1, 1, "", "selectCompIDs"], [21, 1, 1, "", "setOption"], [21, 1, 1, "", "writeBDF"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:module", "3": "py:attribute", "4": "py:property", "5": "py:function"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "module", "Python module"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "property", "Python property"], "5": ["py", "function", "Python function"]}, "titleterms": {"caps2tac": 0, "instal": [1, 11], "esp": 1, "cap": 1, "intro": 1, "exampl": [1, 10], "test": 1, "direct": 2, "workflow": [2, 20], "assembl": 2, "meshload": 2, "creator": 2, "frequencyanalysi": 2, "integr": 2, "constitut": [3, 26], "modul": [3, 4, 5, 6], "materi": 3, "class": [3, 5, 15, 19, 21], "core": 4, "element": [5, 26], "basi": [5, 26], "model": 5, "transform": [5, 26], "function": 6, "crm": 7, "optim": 7, "plate": 8, "under": 8, "static": 8, "load": 8, "batteri": 9, "pack": 9, "dure": 9, "thermal": [9, 26], "runawai": 9, "tac": [10, 11, 26], "overview": 10, "get": 10, "start": 10, "refer": [10, 13, 14, 16, 17, 18, 21, 22, 23, 24, 26], "indic": 10, "tabl": 10, "from": 11, "anaconda": 11, "sourc": 11, "prerequisit": 11, "basic": 11, "step": 11, "compil": 11, "detail": 11, "instruct": 11, "check": 11, "out": 11, "code": 11, "depend": 11, "make": 11, "c": 11, "librari": 11, "postprocess": 11, "tool": 11, "python": 11, "interfac": [11, 12], "adjacencyconstraint": 13, "option": [13, 14, 17, 21, 22, 23, 24], "api": [13, 14, 16, 17, 18, 21, 22, 23, 24], "bucklingproblem": 14, "constraint": 15, "dvconstraint": 16, "modalproblem": 17, "panellengthconstraint": 18, "problem": 19, "pytac": [20, 21], "initi": 21, "elemcallback": 21, "without": 21, "tag": 21, "compon": [21, 26], "group": 21, "bdf": 21, "icem": 21, "label": 21, "format": 21, "femap": 21, "patran": 21, "hypermesh": 21, "staticproblem": 22, "transientproblem": 23, "volumeconstraint": 24, "beam": 26, "shell": 26, "director": 26, "parametr": 26, "volum": 26, "displac": 26, "local": 26, "attach": 26, "frame": 26, "axi": 26, "project": 26, "natur": 26, "strain": 26, "express": 26, "formul": 26, "drill": 26, "rotat": 26, "mix": 26, "interpol": 26, "tensori": 26, "relationship": 26, "equat": 26, "motion": 26, "implement": 26, "field": 26, "comput": 26, "theori": 27}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 58}, "alltitles": {"caps2tacs": [[0, "caps2tacs"]], "Installation of ESP/CAPS": [[1, "installation-of-esp-caps"]], "Intro": [[1, "intro"]], "Examples": [[1, "examples"], [10, "examples"]], "Testing": [[1, "testing"]], "Direct": [[2, "direct"]], "Workflow": [[2, "workflow"], [20, "workflow"]], "Assembler": [[2, "assembler"]], "MeshLoader": [[2, "meshloader"]], "Creator": [[2, "creator"]], "FrequencyAnalysis": [[2, "frequencyanalysis"]], "Integrator": [[2, "integrator"]], "constitutive module": [[3, "constitutive-module"]], "Material classes": [[3, "material-classes"]], "Constitutive classes": [[3, "constitutive-classes"]], "Core modules": [[4, "core-modules"]], "elements module": [[5, "elements-module"]], "Basis classes": [[5, "basis-classes"]], "Model classes": [[5, "model-classes"]], "Transform classes": [[5, "transform-classes"]], "Element classes": [[5, "element-classes"]], "functions module": [[6, "functions-module"]], "CRM Optimization": [[7, "crm-optimization"]], "Plate under static load": [[8, "plate-under-static-load"]], "Battery pack during thermal runaway": [[9, "battery-pack-during-thermal-runaway"]], "TACS Overview": [[10, "tacs-overview"]], "Getting Started": [[10, "getting-started"]], "References": [[10, "references"]], "Indices and tables": [[10, "indices-and-tables"]], "Install": [[11, "install"]], "From Anaconda": [[11, "from-anaconda"]], "From source": [[11, "from-source"]], "Prerequisites": [[11, "prerequisites"]], "Basic steps to compile TACS": [[11, "basic-steps-to-compile-tacs"]], "Detailed installation instructions": [[11, "detailed-installation-instructions"]], "Checking out the code": [[11, "checking-out-the-code"]], "Install dependencies": [[11, "install-dependencies"]], "Make the C++ TACS library": [[11, "make-the-c-tacs-library"]], "Install postprocessing tools": [[11, "install-postprocessing-tools"]], "Installing the python interface": [[11, "installing-the-python-interface"]], "Interfaces": [[12, "interfaces"]], "AdjacencyConstraint": [[13, "module-tacs.constraints.adjacency"]], "Options": [[13, "options"], [14, "options"], [17, "options"], [21, "options"], [22, "options"], [23, "options"], [24, "options"]], "API Reference": [[13, "api-reference"], [14, "api-reference"], [16, "api-reference"], [17, "api-reference"], [18, "api-reference"], [21, "api-reference"], [22, "api-reference"], [23, "api-reference"], [24, "api-reference"]], "BucklingProblem": [[14, "module-tacs.problems.buckling"]], "Constraint classes": [[15, "constraint-classes"]], "DVConstraint": [[16, "module-tacs.constraints.dv"]], "ModalProblem": [[17, "module-tacs.problems.modal"]], "PanelLengthConstraint": [[18, "module-tacs.constraints.panel_length"]], "Problem classes": [[19, "problem-classes"]], "pyTACS": [[20, "pytacs"]], "pyTACS class": [[21, "module-tacs.pytacs"]], "Initializing": [[21, "initializing"]], "Initializing with elemCallBack": [[21, "initializing-with-elemcallback"]], "Initializing without elemCallBack": [[21, "initializing-without-elemcallback"]], "Tagging component groups in BDF": [[21, "tagging-component-groups-in-bdf"]], "ICEM component label format": [[21, "icem-component-label-format"]], "FEMAP component label format": [[21, "femap-component-label-format"]], "Patran component label format": [[21, "patran-component-label-format"]], "HyperMesh component label format": [[21, "hypermesh-component-label-format"]], "StaticProblem": [[22, "module-tacs.problems.static"]], "TransientProblem": [[23, "module-tacs.problems.transient"]], "VolumeConstraint": [[24, "module-tacs.constraints.volume"]], "Beam and shell elements in TACS": [[26, "beam-and-shell-elements-in-tacs"]], "Director parametrization": [[26, "director-parametrization"]], "Beam volume parametrization": [[26, "beam-volume-parametrization"]], "Shell volume parametrization": [[26, "shell-volume-parametrization"]], "Displacement parametrization": [[26, "displacement-parametrization"]], "Transformation to local shell-attached frame": [[26, "transformation-to-local-shell-attached-frame"]], "Reference axis projection transform": [[26, "reference-axis-projection-transform"]], "Natural transform": [[26, "natural-transform"]], "Strain expressions": [[26, "strain-expressions"]], "Thermal strain formulation": [[26, "thermal-strain-formulation"]], "Drilling rotation": [[26, "drilling-rotation"]], "Mixed Interpolation of Tensorial Components": [[26, "mixed-interpolation-of-tensorial-components"]], "Constitutive relationships for the shell element": [[26, "constitutive-relationships-for-the-shell-element"]], "Equations of motion": [[26, "equations-of-motion"]], "Director implementation": [[26, "director-implementation"]], "Beam element implementation": [[26, "beam-element-implementation"]], "Shell element implementation": [[26, "shell-element-implementation"]], "Shell element basis": [[26, "shell-element-basis"]], "Director field parametrization": [[26, "director-field-parametrization"]], "Transformation": [[26, "transformation"]], "Strain computation": [[26, "strain-computation"]], "Theory": [[27, "theory"]]}, "indexentries": {"assembler (class in tacs)": [[2, "TACS.Assembler"]], "creator (class in tacs)": [[2, "TACS.Creator"]], "integrator (class in tacs)": [[2, "TACS.Integrator"]], "meshloader (class in tacs)": [[2, "TACS.MeshLoader"]], "addadjointresproducts() (tacs.assembler method)": [[2, "TACS.Assembler.addAdjointResProducts"]], "addadjointresxptsensproducts() (tacs.assembler method)": [[2, "TACS.Assembler.addAdjointResXptSensProducts"]], "addauxelement() (tacs.meshloader method)": [[2, "TACS.MeshLoader.addAuxElement"]], "adddvsens() (tacs.assembler method)": [[2, "TACS.Assembler.addDVSens"]], "addfunctiondomain() (tacs.meshloader method)": [[2, "TACS.MeshLoader.addFunctionDomain"]], "addjacobianvecproduct() (tacs.assembler method)": [[2, "TACS.Assembler.addJacobianVecProduct"]], "addmatdvsensinnerproduct() (tacs.assembler method)": [[2, "TACS.Assembler.addMatDVSensInnerProduct"]], "addsvsens() (tacs.assembler method)": [[2, "TACS.Assembler.addSVSens"]], "addxptsens() (tacs.assembler method)": [[2, "TACS.Assembler.addXptSens"]], "applybcs() (tacs.assembler method)": [[2, "TACS.Assembler.applyBCs"]], "applymatbcs() (tacs.assembler method)": [[2, "TACS.Assembler.applyMatBCs"]], "assemblejacobian() (tacs.assembler method)": [[2, "TACS.Assembler.assembleJacobian"]], "assemblematcombo() (tacs.assembler method)": [[2, "TACS.Assembler.assembleMatCombo"]], "assemblemattype() (tacs.assembler method)": [[2, "TACS.Assembler.assembleMatType"]], "assembleres() (tacs.assembler method)": [[2, "TACS.Assembler.assembleRes"]], "checkgradients() (tacs.integrator method)": [[2, "TACS.Integrator.checkGradients"]], "computereordering() (tacs.assembler method)": [[2, "TACS.Assembler.computeReordering"]], "copyvariables() (tacs.assembler method)": [[2, "TACS.Assembler.copyVariables"]], "create() (tacs.assembler static method)": [[2, "TACS.Assembler.create"]], "createdesignvec() (tacs.assembler method)": [[2, "TACS.Assembler.createDesignVec"]], "createmat() (tacs.assembler method)": [[2, "TACS.Assembler.createMat"]], "createnodevec() (tacs.assembler method)": [[2, "TACS.Assembler.createNodeVec"]], "createschurmat() (tacs.assembler method)": [[2, "TACS.Assembler.createSchurMat"]], "createtacs() (tacs.meshloader method)": [[2, "TACS.MeshLoader.createTACS"]], "createvec() (tacs.assembler method)": [[2, "TACS.Assembler.createVec"]], "evalenergies() (tacs.assembler method)": [[2, "TACS.Assembler.evalEnergies"]], "evalfunctions() (tacs.assembler method)": [[2, "TACS.Assembler.evalFunctions"]], "evalfunctions() (tacs.integrator method)": [[2, "TACS.Integrator.evalFunctions"]], "getadjoint() (tacs.integrator method)": [[2, "TACS.Integrator.getAdjoint"]], "getbcs() (tacs.meshloader method)": [[2, "TACS.MeshLoader.getBCs"]], "getbcmap() (tacs.assembler method)": [[2, "TACS.Assembler.getBcMap"]], "getcomponentdescript() (tacs.meshloader method)": [[2, "TACS.MeshLoader.getComponentDescript"]], "getconnectivity() (tacs.meshloader method)": [[2, "TACS.MeshLoader.getConnectivity"]], "getdesignvarrange() (tacs.assembler method)": [[2, "TACS.Assembler.getDesignVarRange"]], "getdesignvars() (tacs.assembler method)": [[2, "TACS.Assembler.getDesignVars"]], "getelementdata() (tacs.assembler method)": [[2, "TACS.Assembler.getElementData"]], "getelementdescript() (tacs.meshloader method)": [[2, "TACS.MeshLoader.getElementDescript"]], "getelementnodes() (tacs.assembler method)": [[2, "TACS.Assembler.getElementNodes"]], "getelementpartition() (tacs.creator method)": [[2, "TACS.Creator.getElementPartition"]], "getelements() (tacs.assembler method)": [[2, "TACS.Assembler.getElements"]], "getgradient() (tacs.integrator method)": [[2, "TACS.Integrator.getGradient"]], "getinitconditions() (tacs.assembler method)": [[2, "TACS.Assembler.getInitConditions"]], "getmpicomm() (tacs.assembler method)": [[2, "TACS.Assembler.getMPIComm"]], "getnodes() (tacs.assembler method)": [[2, "TACS.Assembler.getNodes"]], "getnumcomponents() (tacs.meshloader method)": [[2, "TACS.MeshLoader.getNumComponents"]], "getnumdependentnodes() (tacs.assembler method)": [[2, "TACS.Assembler.getNumDependentNodes"]], "getnumelements() (tacs.assembler method)": [[2, "TACS.Assembler.getNumElements"]], "getnumnodes() (tacs.assembler method)": [[2, "TACS.Assembler.getNumNodes"]], "getnumownednodes() (tacs.assembler method)": [[2, "TACS.Assembler.getNumOwnedNodes"]], "getnumtimesteps() (tacs.integrator method)": [[2, "TACS.Integrator.getNumTimeSteps"]], "getownerrange() (tacs.assembler method)": [[2, "TACS.Assembler.getOwnerRange"]], "getreordering() (tacs.assembler method)": [[2, "TACS.Assembler.getReordering"]], "getsimulationtime() (tacs.assembler method)": [[2, "TACS.Assembler.getSimulationTime"]], "getstates() (tacs.integrator method)": [[2, "TACS.Integrator.getStates"]], "getvariables() (tacs.assembler method)": [[2, "TACS.Assembler.getVariables"]], "getvarspernode() (tacs.assembler method)": [[2, "TACS.Assembler.getVarsPerNode"]], "getxptgradient() (tacs.integrator method)": [[2, "TACS.Integrator.getXptGradient"]], "initadjoint() (tacs.integrator method)": [[2, "TACS.Integrator.initAdjoint"]], "initialize() (tacs.assembler method)": [[2, "TACS.Assembler.initialize"]], "integrate() (tacs.integrator method)": [[2, "TACS.Integrator.integrate"]], "integrateadjoint() (tacs.integrator method)": [[2, "TACS.Integrator.integrateAdjoint"]], "iterate() (tacs.integrator method)": [[2, "TACS.Integrator.iterate"]], "iterateadjoint() (tacs.integrator method)": [[2, "TACS.Integrator.iterateAdjoint"]], "loadstates() (tacs.integrator method)": [[2, "TACS.Integrator.loadStates"]], "persiststates() (tacs.integrator method)": [[2, "TACS.Integrator.persistStates"]], "postadjoint() (tacs.integrator method)": [[2, "TACS.Integrator.postAdjoint"]], "reordervec() (tacs.assembler method)": [[2, "TACS.Assembler.reorderVec"]], "scanbdffile() (tacs.meshloader method)": [[2, "TACS.MeshLoader.scanBDFFile"]], "setabstol() (tacs.integrator method)": [[2, "TACS.Integrator.setAbsTol"]], "setauxelements() (tacs.assembler method)": [[2, "TACS.Assembler.setAuxElements"]], "setbcvaluesfromvec() (tacs.assembler method)": [[2, "TACS.Assembler.setBCValuesFromVec"]], "setbcs() (tacs.assembler method)": [[2, "TACS.Assembler.setBCs"]], "setboundaryconditions() (tacs.creator method)": [[2, "TACS.Creator.setBoundaryConditions"]], "setdependentnodes() (tacs.assembler method)": [[2, "TACS.Assembler.setDependentNodes"]], "setdesignvars() (tacs.assembler method)": [[2, "TACS.Assembler.setDesignVars"]], "setelement() (tacs.meshloader method)": [[2, "TACS.MeshLoader.setElement"]], "setelementconnectivity() (tacs.assembler method)": [[2, "TACS.Assembler.setElementConnectivity"]], "setelements() (tacs.assembler method)": [[2, "TACS.Assembler.setElements"]], "setelements() (tacs.creator method)": [[2, "TACS.Creator.setElements"]], "setfh5() (tacs.integrator method)": [[2, "TACS.Integrator.setFH5"]], "setfunctions() (tacs.integrator method)": [[2, "TACS.Integrator.setFunctions"]], "setglobalconnectivity() (tacs.creator method)": [[2, "TACS.Creator.setGlobalConnectivity"]], "setinitconditions() (tacs.assembler method)": [[2, "TACS.Assembler.setInitConditions"]], "setinitnewtondeltafraction() (tacs.integrator method)": [[2, "TACS.Integrator.setInitNewtonDeltaFraction"]], "setjacassemblyfreq() (tacs.integrator method)": [[2, "TACS.Integrator.setJacAssemblyFreq"]], "setkrylovsubspacemethod() (tacs.integrator method)": [[2, "TACS.Integrator.setKrylovSubspaceMethod"]], "setmaxnewtoniters() (tacs.integrator method)": [[2, "TACS.Integrator.setMaxNewtonIters"]], "setnodes() (tacs.assembler method)": [[2, "TACS.Assembler.setNodes"]], "setnumthreads() (tacs.assembler method)": [[2, "TACS.Assembler.setNumThreads"]], "setoutputfrequency() (tacs.integrator method)": [[2, "TACS.Integrator.setOutputFrequency"]], "setoutputprefix() (tacs.integrator method)": [[2, "TACS.Integrator.setOutputPrefix"]], "setprintlevel() (tacs.integrator method)": [[2, "TACS.Integrator.setPrintLevel"]], "setreltol() (tacs.integrator method)": [[2, "TACS.Integrator.setRelTol"]], "setsimulationtime() (tacs.assembler method)": [[2, "TACS.Assembler.setSimulationTime"]], "settimeinterval() (tacs.integrator method)": [[2, "TACS.Integrator.setTimeInterval"]], "setuselapack() (tacs.integrator method)": [[2, "TACS.Integrator.setUseLapack"]], "setuseschurmat() (tacs.integrator method)": [[2, "TACS.Integrator.setUseSchurMat"]], "setvariables() (tacs.assembler method)": [[2, "TACS.Assembler.setVariables"]], "testelement() (tacs.assembler method)": [[2, "TACS.Assembler.testElement"]], "testfunction() (tacs.assembler method)": [[2, "TACS.Assembler.testFunction"]], "zeroddotvariables() (tacs.assembler method)": [[2, "TACS.Assembler.zeroDDotVariables"]], "zerodotvariables() (tacs.assembler method)": [[2, "TACS.Assembler.zeroDotVariables"]], "zerovariables() (tacs.assembler method)": [[2, "TACS.Assembler.zeroVariables"]], "basicbeamconstitutive (class in tacs.constitutive)": [[3, "tacs.constitutive.BasicBeamConstitutive"]], "bladestiffenedshellconstitutive (class in tacs.constitutive)": [[3, "tacs.constitutive.BladeStiffenedShellConstitutive"]], "compositeshellconstitutive (class in tacs.constitutive)": [[3, "tacs.constitutive.CompositeShellConstitutive"]], "dofspringconstitutive (class in tacs.constitutive)": [[3, "tacs.constitutive.DOFSpringConstitutive"]], "generalmassconstitutive (class in tacs.constitutive)": [[3, "tacs.constitutive.GeneralMassConstitutive"]], "generalspringconstitutive (class in tacs.constitutive)": [[3, "tacs.constitutive.GeneralSpringConstitutive"]], "isorectanglebeamconstitutive (class in tacs.constitutive)": [[3, "tacs.constitutive.IsoRectangleBeamConstitutive"]], "isoshellconstitutive (class in tacs.constitutive)": [[3, "tacs.constitutive.IsoShellConstitutive"]], "isotubebeamconstitutive (class in tacs.constitutive)": [[3, "tacs.constitutive.IsoTubeBeamConstitutive"]], "lamparamshellconstitutive (class in tacs.constitutive)": [[3, "tacs.constitutive.LamParamShellConstitutive"]], "materialproperties (class in tacs.constitutive)": [[3, "tacs.constitutive.MaterialProperties"]], "orthotropicply (class in tacs.constitutive)": [[3, "tacs.constitutive.OrthotropicPly"]], "phasechangematerialconstitutive (class in tacs.constitutive)": [[3, "tacs.constitutive.PhaseChangeMaterialConstitutive"]], "planestressconstitutive (class in tacs.constitutive)": [[3, "tacs.constitutive.PlaneStressConstitutive"]], "pointmassconstitutive (class in tacs.constitutive)": [[3, "tacs.constitutive.PointMassConstitutive"]], "shellconstitutive (class in tacs.constitutive)": [[3, "tacs.constitutive.ShellConstitutive"]], "smearedcompositeshellconstitutive (class in tacs.constitutive)": [[3, "tacs.constitutive.SmearedCompositeShellConstitutive"]], "solidconstitutive (class in tacs.constitutive)": [[3, "tacs.constitutive.SolidConstitutive"]], "evalmassmatrix() (tacs.constitutive.generalmassconstitutive method)": [[3, "tacs.constitutive.GeneralMassConstitutive.evalMassMatrix"]], "generatebdfcard() (tacs.constitutive.basicbeamconstitutive method)": [[3, "tacs.constitutive.BasicBeamConstitutive.generateBDFCard"]], "generatebdfcard() (tacs.constitutive.compositeshellconstitutive method)": [[3, "tacs.constitutive.CompositeShellConstitutive.generateBDFCard"]], "generatebdfcard() (tacs.constitutive.dofspringconstitutive method)": [[3, "tacs.constitutive.DOFSpringConstitutive.generateBDFCard"]], "generatebdfcard() (tacs.constitutive.isorectanglebeamconstitutive method)": [[3, "tacs.constitutive.IsoRectangleBeamConstitutive.generateBDFCard"]], "generatebdfcard() (tacs.constitutive.isoshellconstitutive method)": [[3, "tacs.constitutive.IsoShellConstitutive.generateBDFCard"]], "generatebdfcard() (tacs.constitutive.isotubebeamconstitutive method)": [[3, "tacs.constitutive.IsoTubeBeamConstitutive.generateBDFCard"]], "generatebdfcard() (tacs.constitutive.materialproperties method)": [[3, "tacs.constitutive.MaterialProperties.generateBDFCard"]], "generatebdfcard() (tacs.constitutive.smearedcompositeshellconstitutive method)": [[3, "tacs.constitutive.SmearedCompositeShellConstitutive.generateBDFCard"]], "generatebdfcard() (tacs.constitutive.solidconstitutive method)": [[3, "tacs.constitutive.SolidConstitutive.generateBDFCard"]], "getmaterialproperties() (tacs.constitutive.materialproperties method)": [[3, "tacs.constitutive.MaterialProperties.getMaterialProperties"]], "getmaterialproperties() (tacs.constitutive.orthotropicply method)": [[3, "tacs.constitutive.OrthotropicPly.getMaterialProperties"]], "getnastranid() (tacs.constitutive.materialproperties method)": [[3, "tacs.constitutive.MaterialProperties.getNastranID"]], "module": [[3, "module-0"], [3, "module-tacs.constitutive"], [5, "module-0"], [5, "module-1"], [5, "module-2"], [5, "module-tacs.elements"], [6, "module-tacs.functions"], [13, "module-tacs.constraints.adjacency"], [14, "module-tacs.problems.buckling"], [16, "module-tacs.constraints.dv"], [17, "module-tacs.problems.modal"], [18, "module-tacs.constraints.panel_length"], [21, "module-tacs.pytacs"], [22, "module-tacs.problems.static"], [23, "module-tacs.problems.transient"], [24, "module-tacs.constraints.volume"]], "setdensity() (tacs.constitutive.materialproperties method)": [[3, "tacs.constitutive.MaterialProperties.setDensity"]], "setdrillingregularization() (tacs.constitutive.shellconstitutive method)": [[3, "tacs.constitutive.ShellConstitutive.setDrillingRegularization"]], "setksweight() (tacs.constitutive.bladestiffenedshellconstitutive method)": [[3, "tacs.constitutive.BladeStiffenedShellConstitutive.setKSWeight"]], "setnastranid() (tacs.constitutive.materialproperties method)": [[3, "tacs.constitutive.MaterialProperties.setNastranID"]], "setpanelplyfractionbounds() (tacs.constitutive.bladestiffenedshellconstitutive method)": [[3, "tacs.constitutive.BladeStiffenedShellConstitutive.setPanelPlyFractionBounds"]], "setpanelthicknessbounds() (tacs.constitutive.bladestiffenedshellconstitutive method)": [[3, "tacs.constitutive.BladeStiffenedShellConstitutive.setPanelThicknessBounds"]], "setspecificheat() (tacs.constitutive.materialproperties method)": [[3, "tacs.constitutive.MaterialProperties.setSpecificHeat"]], "setstiffenerheightbounds() (tacs.constitutive.bladestiffenedshellconstitutive method)": [[3, "tacs.constitutive.BladeStiffenedShellConstitutive.setStiffenerHeightBounds"]], "setstiffenerpitchbounds() (tacs.constitutive.bladestiffenedshellconstitutive method)": [[3, "tacs.constitutive.BladeStiffenedShellConstitutive.setStiffenerPitchBounds"]], "setstiffenerplyfractionbounds() (tacs.constitutive.bladestiffenedshellconstitutive method)": [[3, "tacs.constitutive.BladeStiffenedShellConstitutive.setStiffenerPlyFractionBounds"]], "setstiffenerthicknessbounds() (tacs.constitutive.bladestiffenedshellconstitutive method)": [[3, "tacs.constitutive.BladeStiffenedShellConstitutive.setStiffenerThicknessBounds"]], "tacs.constitutive": [[3, "module-0"], [3, "module-tacs.constitutive"]], "beam2 (class in tacs.elements)": [[5, "tacs.elements.Beam2"]], "beam2modrot (class in tacs.elements)": [[5, "tacs.elements.Beam2ModRot"]], "beam3 (class in tacs.elements)": [[5, "tacs.elements.Beam3"]], "beam3modrot (class in tacs.elements)": [[5, "tacs.elements.Beam3ModRot"]], "beamrefaxistransform (class in tacs.elements)": [[5, "tacs.elements.BeamRefAxisTransform"]], "cubichexabasis (class in tacs.elements)": [[5, "tacs.elements.CubicHexaBasis"]], "cubicquadbasis (class in tacs.elements)": [[5, "tacs.elements.CubicQuadBasis"]], "cubictetrahedralbasis (class in tacs.elements)": [[5, "tacs.elements.CubicTetrahedralBasis"]], "cubictrianglebasis (class in tacs.elements)": [[5, "tacs.elements.CubicTriangleBasis"]], "element2d (class in tacs.elements)": [[5, "tacs.elements.Element2D"]], "element3d (class in tacs.elements)": [[5, "tacs.elements.Element3D"]], "heatconduction2d (class in tacs.elements)": [[5, "tacs.elements.HeatConduction2D"]], "heatconduction3d (class in tacs.elements)": [[5, "tacs.elements.HeatConduction3D"]], "linearelasticity2d (class in tacs.elements)": [[5, "tacs.elements.LinearElasticity2D"]], "linearelasticity3d (class in tacs.elements)": [[5, "tacs.elements.LinearElasticity3D"]], "linearhexabasis (class in tacs.elements)": [[5, "tacs.elements.LinearHexaBasis"]], "linearquadbasis (class in tacs.elements)": [[5, "tacs.elements.LinearQuadBasis"]], "lineartetrahedralbasis (class in tacs.elements)": [[5, "tacs.elements.LinearTetrahedralBasis"]], "linearthermoelasticity2d (class in tacs.elements)": [[5, "tacs.elements.LinearThermoelasticity2D"]], "linearthermoelasticity3d (class in tacs.elements)": [[5, "tacs.elements.LinearThermoelasticity3D"]], "lineartrianglebasis (class in tacs.elements)": [[5, "tacs.elements.LinearTriangleBasis"]], "masselement (class in tacs.elements)": [[5, "tacs.elements.MassElement"]], "pcmheatconduction2d (class in tacs.elements)": [[5, "tacs.elements.PCMHeatConduction2D"]], "quad16nonlinearshell (class in tacs.elements)": [[5, "tacs.elements.Quad16NonlinearShell"]], "quad16nonlinearthermalshell (class in tacs.elements)": [[5, "tacs.elements.Quad16NonlinearThermalShell"]], "quad16shell (class in tacs.elements)": [[5, "tacs.elements.Quad16Shell"]], "quad16thermalshell (class in tacs.elements)": [[5, "tacs.elements.Quad16ThermalShell"]], "quad4nonlinearshell (class in tacs.elements)": [[5, "tacs.elements.Quad4NonlinearShell"]], "quad4nonlinearthermalshell (class in tacs.elements)": [[5, "tacs.elements.Quad4NonlinearThermalShell"]], "quad4shell (class in tacs.elements)": [[5, "tacs.elements.Quad4Shell"]], "quad4thermalshell (class in tacs.elements)": [[5, "tacs.elements.Quad4ThermalShell"]], "quad9nonlinearshell (class in tacs.elements)": [[5, "tacs.elements.Quad9NonlinearShell"]], "quad9nonlinearthermalshell (class in tacs.elements)": [[5, "tacs.elements.Quad9NonlinearThermalShell"]], "quad9shell (class in tacs.elements)": [[5, "tacs.elements.Quad9Shell"]], "quad9thermalshell (class in tacs.elements)": [[5, "tacs.elements.Quad9ThermalShell"]], "quadratichexabasis (class in tacs.elements)": [[5, "tacs.elements.QuadraticHexaBasis"]], "quadraticquadbasis (class in tacs.elements)": [[5, "tacs.elements.QuadraticQuadBasis"]], "quadratictetrahedralbasis (class in tacs.elements)": [[5, "tacs.elements.QuadraticTetrahedralBasis"]], "quadratictrianglebasis (class in tacs.elements)": [[5, "tacs.elements.QuadraticTriangleBasis"]], "quarticquadbasis (class in tacs.elements)": [[5, "tacs.elements.QuarticQuadBasis"]], "quinticquadbasis (class in tacs.elements)": [[5, "tacs.elements.QuinticQuadBasis"]], "rbe2 (class in tacs.elements)": [[5, "tacs.elements.RBE2"]], "rbe3 (class in tacs.elements)": [[5, "tacs.elements.RBE3"]], "shellnaturaltransform (class in tacs.elements)": [[5, "tacs.elements.ShellNaturalTransform"]], "shellrefaxistransform (class in tacs.elements)": [[5, "tacs.elements.ShellRefAxisTransform"]], "springelement (class in tacs.elements)": [[5, "tacs.elements.SpringElement"]], "springidentitytransform (class in tacs.elements)": [[5, "tacs.elements.SpringIdentityTransform"]], "springrefaxistransform (class in tacs.elements)": [[5, "tacs.elements.SpringRefAxisTransform"]], "springrefframetransform (class in tacs.elements)": [[5, "tacs.elements.SpringRefFrameTransform"]], "tri3nonlinearshell (class in tacs.elements)": [[5, "tacs.elements.Tri3NonlinearShell"]], "tri3nonlinearthermalshell (class in tacs.elements)": [[5, "tacs.elements.Tri3NonlinearThermalShell"]], "tri3shell (class in tacs.elements)": [[5, "tacs.elements.Tri3Shell"]], "tri3thermalshell (class in tacs.elements)": [[5, "tacs.elements.Tri3ThermalShell"]], "getrefaxes() (tacs.elements.springrefframetransform method)": [[5, "tacs.elements.SpringRefFrameTransform.getRefAxes"]], "getrefaxis() (tacs.elements.beamrefaxistransform method)": [[5, "tacs.elements.BeamRefAxisTransform.getRefAxis"]], "getrefaxis() (tacs.elements.shellrefaxistransform method)": [[5, "tacs.elements.ShellRefAxisTransform.getRefAxis"]], "getrefaxis() (tacs.elements.springrefaxistransform method)": [[5, "tacs.elements.SpringRefAxisTransform.getRefAxis"]], "setscalingparameters() (tacs.elements.rbe2 class method)": [[5, "tacs.elements.RBE2.setScalingParameters"]], "setscalingparameters() (tacs.elements.rbe3 class method)": [[5, "tacs.elements.RBE3.setScalingParameters"]], "tacs.elements": [[5, "module-0"], [5, "module-1"], [5, "module-2"], [5, "module-tacs.elements"]], "averagetemperature (class in tacs.functions)": [[6, "tacs.functions.AverageTemperature"]], "centerofmass (class in tacs.functions)": [[6, "tacs.functions.CenterOfMass"]], "compliance (class in tacs.functions)": [[6, "tacs.functions.Compliance"]], "enclosedvolume (class in tacs.functions)": [[6, "tacs.functions.EnclosedVolume"]], "ksdisplacement (class in tacs.functions)": [[6, "tacs.functions.KSDisplacement"]], "ksfailure (class in tacs.functions)": [[6, "tacs.functions.KSFailure"]], "kstemperature (class in tacs.functions)": [[6, "tacs.functions.KSTemperature"]], "momentofinertia (class in tacs.functions)": [[6, "tacs.functions.MomentOfInertia"]], "structuralmass (class in tacs.functions)": [[6, "tacs.functions.StructuralMass"]], "setcompliancetype() (tacs.functions.compliance method)": [[6, "tacs.functions.Compliance.setComplianceType"]], "tacs.functions": [[6, "module-tacs.functions"]], "adjacencyconstraint (class in tacs.constraints)": [[13, "tacs.constraints.AdjacencyConstraint"]], "addconstraint() (tacs.constraints.adjacencyconstraint method)": [[13, "tacs.constraints.AdjacencyConstraint.addConstraint"]], "dtype (tacs.constraints.adjacencyconstraint attribute)": [[13, "tacs.constraints.AdjacencyConstraint.dtype"]], "evalconstraints() (tacs.constraints.adjacencyconstraint method)": [[13, "tacs.constraints.AdjacencyConstraint.evalConstraints"]], "evalconstraintssens() (tacs.constraints.adjacencyconstraint method)": [[13, "tacs.constraints.AdjacencyConstraint.evalConstraintsSens"]], "getconstraintbounds() (tacs.constraints.adjacencyconstraint method)": [[13, "tacs.constraints.AdjacencyConstraint.getConstraintBounds"]], "getconstraintkeys() (tacs.constraints.adjacencyconstraint method)": [[13, "tacs.constraints.AdjacencyConstraint.getConstraintKeys"]], "getconstraintsizes() (tacs.constraints.adjacencyconstraint method)": [[13, "tacs.constraints.AdjacencyConstraint.getConstraintSizes"]], "getdesignvarrange() (tacs.constraints.adjacencyconstraint method)": [[13, "tacs.constraints.AdjacencyConstraint.getDesignVarRange"]], "getdesignvars() (tacs.constraints.adjacencyconstraint method)": [[13, "tacs.constraints.AdjacencyConstraint.getDesignVars"]], "getnodes() (tacs.constraints.adjacencyconstraint method)": [[13, "tacs.constraints.AdjacencyConstraint.getNodes"]], "getnumcoordinates() (tacs.constraints.adjacencyconstraint method)": [[13, "tacs.constraints.AdjacencyConstraint.getNumCoordinates"]], "getnumdesignvars() (tacs.constraints.adjacencyconstraint method)": [[13, "tacs.constraints.AdjacencyConstraint.getNumDesignVars"]], "getnumownednodes() (tacs.constraints.adjacencyconstraint method)": [[13, "tacs.constraints.AdjacencyConstraint.getNumOwnedNodes"]], "getnumvariables() (tacs.constraints.adjacencyconstraint method)": [[13, "tacs.constraints.AdjacencyConstraint.getNumVariables"]], "getoption() (tacs.constraints.adjacencyconstraint method)": [[13, "tacs.constraints.AdjacencyConstraint.getOption"]], "getvarspernode() (tacs.constraints.adjacencyconstraint method)": [[13, "tacs.constraints.AdjacencyConstraint.getVarsPerNode"]], "printdefaultoptions() (tacs.constraints.adjacencyconstraint class method)": [[13, "tacs.constraints.AdjacencyConstraint.printDefaultOptions"]], "printoptions() (tacs.constraints.adjacencyconstraint method)": [[13, "tacs.constraints.AdjacencyConstraint.printOptions"]], "setdesignvars() (tacs.constraints.adjacencyconstraint method)": [[13, "tacs.constraints.AdjacencyConstraint.setDesignVars"]], "setnodes() (tacs.constraints.adjacencyconstraint method)": [[13, "tacs.constraints.AdjacencyConstraint.setNodes"]], "setoption() (tacs.constraints.adjacencyconstraint method)": [[13, "tacs.constraints.AdjacencyConstraint.setOption"]], "setvarname() (tacs.constraints.adjacencyconstraint method)": [[13, "tacs.constraints.AdjacencyConstraint.setVarName"]], "tacs.constraints.adjacency": [[13, "module-tacs.constraints.adjacency"]], "writevisualization() (tacs.constraints.adjacencyconstraint method)": [[13, "tacs.constraints.AdjacencyConstraint.writeVisualization"]], "bucklingproblem (class in tacs.problems)": [[14, "tacs.problems.BucklingProblem"]], "addcentrifugalload() (tacs.problems.bucklingproblem method)": [[14, "tacs.problems.BucklingProblem.addCentrifugalLoad"]], "adddvsens() (tacs.problems.bucklingproblem method)": [[14, "tacs.problems.BucklingProblem.addDVSens"]], "addfunction() (tacs.problems.bucklingproblem method)": [[14, "tacs.problems.BucklingProblem.addFunction"]], "addinertialload() (tacs.problems.bucklingproblem method)": [[14, "tacs.problems.BucklingProblem.addInertialLoad"]], "addloadfrombdf() (tacs.problems.bucklingproblem method)": [[14, "tacs.problems.BucklingProblem.addLoadFromBDF"]], "addloadtocomponents() (tacs.problems.bucklingproblem method)": [[14, "tacs.problems.BucklingProblem.addLoadToComponents"]], "addloadtonodes() (tacs.problems.bucklingproblem method)": [[14, "tacs.problems.BucklingProblem.addLoadToNodes"]], "addloadtorhs() (tacs.problems.bucklingproblem method)": [[14, "tacs.problems.BucklingProblem.addLoadToRHS"]], "addpressuretocomponents() (tacs.problems.bucklingproblem method)": [[14, "tacs.problems.BucklingProblem.addPressureToComponents"]], "addpressuretoelements() (tacs.problems.bucklingproblem method)": [[14, "tacs.problems.BucklingProblem.addPressureToElements"]], "addtractiontocomponents() (tacs.problems.bucklingproblem method)": [[14, "tacs.problems.BucklingProblem.addTractionToComponents"]], "addtractiontoelements() (tacs.problems.bucklingproblem method)": [[14, "tacs.problems.BucklingProblem.addTractionToElements"]], "addxptsens() (tacs.problems.bucklingproblem method)": [[14, "tacs.problems.BucklingProblem.addXptSens"]], "dtype (tacs.problems.bucklingproblem attribute)": [[14, "tacs.problems.BucklingProblem.dtype"]], "evalfunctions() (tacs.problems.bucklingproblem method)": [[14, "tacs.problems.BucklingProblem.evalFunctions"]], "evalfunctionssens() (tacs.problems.bucklingproblem method)": [[14, "tacs.problems.BucklingProblem.evalFunctionsSens"]], "evalsvsens() (tacs.problems.bucklingproblem method)": [[14, "tacs.problems.BucklingProblem.evalSVSens"]], "getdesignvarrange() (tacs.problems.bucklingproblem method)": [[14, "tacs.problems.BucklingProblem.getDesignVarRange"]], "getdesignvars() (tacs.problems.bucklingproblem method)": [[14, "tacs.problems.BucklingProblem.getDesignVars"]], "getfunctionkeys() (tacs.problems.bucklingproblem method)": [[14, "tacs.problems.BucklingProblem.getFunctionKeys"]], "getnodes() (tacs.problems.bucklingproblem method)": [[14, "tacs.problems.BucklingProblem.getNodes"]], "getnumcoordinates() (tacs.problems.bucklingproblem method)": [[14, "tacs.problems.BucklingProblem.getNumCoordinates"]], "getnumdesignvars() (tacs.problems.bucklingproblem method)": [[14, "tacs.problems.BucklingProblem.getNumDesignVars"]], "getnumeigs() (tacs.problems.bucklingproblem method)": [[14, "tacs.problems.BucklingProblem.getNumEigs"]], "getnumownednodes() (tacs.problems.bucklingproblem method)": [[14, "tacs.problems.BucklingProblem.getNumOwnedNodes"]], "getnumvariables() (tacs.problems.bucklingproblem method)": [[14, "tacs.problems.BucklingProblem.getNumVariables"]], "getoption() (tacs.problems.bucklingproblem method)": [[14, "tacs.problems.BucklingProblem.getOption"]], "getvariables() (tacs.problems.bucklingproblem method)": [[14, "tacs.problems.BucklingProblem.getVariables"]], "getvarspernode() (tacs.problems.bucklingproblem method)": [[14, "tacs.problems.BucklingProblem.getVarsPerNode"]], "printdefaultoptions() (tacs.problems.bucklingproblem class method)": [[14, "tacs.problems.BucklingProblem.printDefaultOptions"]], "printoptions() (tacs.problems.bucklingproblem method)": [[14, "tacs.problems.BucklingProblem.printOptions"]], "setdesignvars() (tacs.problems.bucklingproblem method)": [[14, "tacs.problems.BucklingProblem.setDesignVars"]], "setnodes() (tacs.problems.bucklingproblem method)": [[14, "tacs.problems.BucklingProblem.setNodes"]], "setoption() (tacs.problems.bucklingproblem method)": [[14, "tacs.problems.BucklingProblem.setOption"]], "setvalname() (tacs.problems.bucklingproblem method)": [[14, "tacs.problems.BucklingProblem.setValName"]], "setvarname() (tacs.problems.bucklingproblem method)": [[14, "tacs.problems.BucklingProblem.setVarName"]], "solve() (tacs.problems.bucklingproblem method)": [[14, "tacs.problems.BucklingProblem.solve"]], "tacs.problems.buckling": [[14, "module-tacs.problems.buckling"]], "writesensfile() (tacs.problems.bucklingproblem method)": [[14, "tacs.problems.BucklingProblem.writeSensFile"]], "writesolution() (tacs.problems.bucklingproblem method)": [[14, "tacs.problems.BucklingProblem.writeSolution"]], "zeroloads() (tacs.problems.bucklingproblem method)": [[14, "tacs.problems.BucklingProblem.zeroLoads"]], "dvconstraint (class in tacs.constraints)": [[16, "tacs.constraints.DVConstraint"]], "addconstraint() (tacs.constraints.dvconstraint method)": [[16, "tacs.constraints.DVConstraint.addConstraint"]], "dtype (tacs.constraints.dvconstraint attribute)": [[16, "tacs.constraints.DVConstraint.dtype"]], "evalconstraints() (tacs.constraints.dvconstraint method)": [[16, "tacs.constraints.DVConstraint.evalConstraints"]], "evalconstraintssens() (tacs.constraints.dvconstraint method)": [[16, "tacs.constraints.DVConstraint.evalConstraintsSens"]], "getconstraintbounds() (tacs.constraints.dvconstraint method)": [[16, "tacs.constraints.DVConstraint.getConstraintBounds"]], "getconstraintkeys() (tacs.constraints.dvconstraint method)": [[16, "tacs.constraints.DVConstraint.getConstraintKeys"]], "getconstraintsizes() (tacs.constraints.dvconstraint method)": [[16, "tacs.constraints.DVConstraint.getConstraintSizes"]], "getdesignvarrange() (tacs.constraints.dvconstraint method)": [[16, "tacs.constraints.DVConstraint.getDesignVarRange"]], "getdesignvars() (tacs.constraints.dvconstraint method)": [[16, "tacs.constraints.DVConstraint.getDesignVars"]], "getnodes() (tacs.constraints.dvconstraint method)": [[16, "tacs.constraints.DVConstraint.getNodes"]], "getnumcoordinates() (tacs.constraints.dvconstraint method)": [[16, "tacs.constraints.DVConstraint.getNumCoordinates"]], "getnumdesignvars() (tacs.constraints.dvconstraint method)": [[16, "tacs.constraints.DVConstraint.getNumDesignVars"]], "getnumownednodes() (tacs.constraints.dvconstraint method)": [[16, "tacs.constraints.DVConstraint.getNumOwnedNodes"]], "getnumvariables() (tacs.constraints.dvconstraint method)": [[16, "tacs.constraints.DVConstraint.getNumVariables"]], "getoption() (tacs.constraints.dvconstraint method)": [[16, "tacs.constraints.DVConstraint.getOption"]], "getvarspernode() (tacs.constraints.dvconstraint method)": [[16, "tacs.constraints.DVConstraint.getVarsPerNode"]], "printdefaultoptions() (tacs.constraints.dvconstraint class method)": [[16, "tacs.constraints.DVConstraint.printDefaultOptions"]], "printoptions() (tacs.constraints.dvconstraint method)": [[16, "tacs.constraints.DVConstraint.printOptions"]], "setdesignvars() (tacs.constraints.dvconstraint method)": [[16, "tacs.constraints.DVConstraint.setDesignVars"]], "setnodes() (tacs.constraints.dvconstraint method)": [[16, "tacs.constraints.DVConstraint.setNodes"]], "setoption() (tacs.constraints.dvconstraint method)": [[16, "tacs.constraints.DVConstraint.setOption"]], "setvarname() (tacs.constraints.dvconstraint method)": [[16, "tacs.constraints.DVConstraint.setVarName"]], "tacs.constraints.dv": [[16, "module-tacs.constraints.dv"]], "modalproblem (class in tacs.problems)": [[17, "tacs.problems.ModalProblem"]], "addfunction() (tacs.problems.modalproblem method)": [[17, "tacs.problems.ModalProblem.addFunction"]], "dtype (tacs.problems.modalproblem attribute)": [[17, "tacs.problems.ModalProblem.dtype"]], "evalfunctions() (tacs.problems.modalproblem method)": [[17, "tacs.problems.ModalProblem.evalFunctions"]], "evalfunctionssens() (tacs.problems.modalproblem method)": [[17, "tacs.problems.ModalProblem.evalFunctionsSens"]], "getdesignvarrange() (tacs.problems.modalproblem method)": [[17, "tacs.problems.ModalProblem.getDesignVarRange"]], "getdesignvars() (tacs.problems.modalproblem method)": [[17, "tacs.problems.ModalProblem.getDesignVars"]], "getfunctionkeys() (tacs.problems.modalproblem method)": [[17, "tacs.problems.ModalProblem.getFunctionKeys"]], "getnodes() (tacs.problems.modalproblem method)": [[17, "tacs.problems.ModalProblem.getNodes"]], "getnumcoordinates() (tacs.problems.modalproblem method)": [[17, "tacs.problems.ModalProblem.getNumCoordinates"]], "getnumdesignvars() (tacs.problems.modalproblem method)": [[17, "tacs.problems.ModalProblem.getNumDesignVars"]], "getnumeigs() (tacs.problems.modalproblem method)": [[17, "tacs.problems.ModalProblem.getNumEigs"]], "getnumownednodes() (tacs.problems.modalproblem method)": [[17, "tacs.problems.ModalProblem.getNumOwnedNodes"]], "getnumvariables() (tacs.problems.modalproblem method)": [[17, "tacs.problems.ModalProblem.getNumVariables"]], "getoption() (tacs.problems.modalproblem method)": [[17, "tacs.problems.ModalProblem.getOption"]], "getvariables() (tacs.problems.modalproblem method)": [[17, "tacs.problems.ModalProblem.getVariables"]], "getvarspernode() (tacs.problems.modalproblem method)": [[17, "tacs.problems.ModalProblem.getVarsPerNode"]], "printdefaultoptions() (tacs.problems.modalproblem class method)": [[17, "tacs.problems.ModalProblem.printDefaultOptions"]], "printoptions() (tacs.problems.modalproblem method)": [[17, "tacs.problems.ModalProblem.printOptions"]], "setdesignvars() (tacs.problems.modalproblem method)": [[17, "tacs.problems.ModalProblem.setDesignVars"]], "setnodes() (tacs.problems.modalproblem method)": [[17, "tacs.problems.ModalProblem.setNodes"]], "setoption() (tacs.problems.modalproblem method)": [[17, "tacs.problems.ModalProblem.setOption"]], "setvalname() (tacs.problems.modalproblem method)": [[17, "tacs.problems.ModalProblem.setValName"]], "setvarname() (tacs.problems.modalproblem method)": [[17, "tacs.problems.ModalProblem.setVarName"]], "solve() (tacs.problems.modalproblem method)": [[17, "tacs.problems.ModalProblem.solve"]], "tacs.problems.modal": [[17, "module-tacs.problems.modal"]], "writesensfile() (tacs.problems.modalproblem method)": [[17, "tacs.problems.ModalProblem.writeSensFile"]], "writesolution() (tacs.problems.modalproblem method)": [[17, "tacs.problems.ModalProblem.writeSolution"]], "panellengthconstraint (class in tacs.constraints)": [[18, "tacs.constraints.PanelLengthConstraint"]], "addconstraint() (tacs.constraints.panellengthconstraint method)": [[18, "tacs.constraints.PanelLengthConstraint.addConstraint"]], "dtype (tacs.constraints.panellengthconstraint attribute)": [[18, "tacs.constraints.PanelLengthConstraint.dtype"]], "evalconstraints() (tacs.constraints.panellengthconstraint method)": [[18, "tacs.constraints.PanelLengthConstraint.evalConstraints"]], "evalconstraintssens() (tacs.constraints.panellengthconstraint method)": [[18, "tacs.constraints.PanelLengthConstraint.evalConstraintsSens"]], "getconstraintbounds() (tacs.constraints.panellengthconstraint method)": [[18, "tacs.constraints.PanelLengthConstraint.getConstraintBounds"]], "getconstraintkeys() (tacs.constraints.panellengthconstraint method)": [[18, "tacs.constraints.PanelLengthConstraint.getConstraintKeys"]], "getconstraintsizes() (tacs.constraints.panellengthconstraint method)": [[18, "tacs.constraints.PanelLengthConstraint.getConstraintSizes"]], "getdesignvarrange() (tacs.constraints.panellengthconstraint method)": [[18, "tacs.constraints.PanelLengthConstraint.getDesignVarRange"]], "getdesignvars() (tacs.constraints.panellengthconstraint method)": [[18, "tacs.constraints.PanelLengthConstraint.getDesignVars"]], "getnodes() (tacs.constraints.panellengthconstraint method)": [[18, "tacs.constraints.PanelLengthConstraint.getNodes"]], "getnumcoordinates() (tacs.constraints.panellengthconstraint method)": [[18, "tacs.constraints.PanelLengthConstraint.getNumCoordinates"]], "getnumdesignvars() (tacs.constraints.panellengthconstraint method)": [[18, "tacs.constraints.PanelLengthConstraint.getNumDesignVars"]], "getnumownednodes() (tacs.constraints.panellengthconstraint method)": [[18, "tacs.constraints.PanelLengthConstraint.getNumOwnedNodes"]], "getnumvariables() (tacs.constraints.panellengthconstraint method)": [[18, "tacs.constraints.PanelLengthConstraint.getNumVariables"]], "getoption() (tacs.constraints.panellengthconstraint method)": [[18, "tacs.constraints.PanelLengthConstraint.getOption"]], "getvarspernode() (tacs.constraints.panellengthconstraint method)": [[18, "tacs.constraints.PanelLengthConstraint.getVarsPerNode"]], "printdefaultoptions() (tacs.constraints.panellengthconstraint class method)": [[18, "tacs.constraints.PanelLengthConstraint.printDefaultOptions"]], "printoptions() (tacs.constraints.panellengthconstraint method)": [[18, "tacs.constraints.PanelLengthConstraint.printOptions"]], "setdesignvars() (tacs.constraints.panellengthconstraint method)": [[18, "tacs.constraints.PanelLengthConstraint.setDesignVars"]], "setnodes() (tacs.constraints.panellengthconstraint method)": [[18, "tacs.constraints.PanelLengthConstraint.setNodes"]], "setoption() (tacs.constraints.panellengthconstraint method)": [[18, "tacs.constraints.PanelLengthConstraint.setOption"]], "setvarname() (tacs.constraints.panellengthconstraint method)": [[18, "tacs.constraints.PanelLengthConstraint.setVarName"]], "tacs.constraints.panel_length": [[18, "module-tacs.constraints.panel_length"]], "addglobaldv() (tacs.pytacs.pytacs method)": [[21, "tacs.pytacs.pyTACS.addGlobalDV"]], "applybcstovec() (tacs.pytacs.pytacs method)": [[21, "tacs.pytacs.pyTACS.applyBCsToVec"]], "assignmassdv() (tacs.pytacs.pytacs method)": [[21, "tacs.pytacs.pyTACS.assignMassDV"]], "createadjacencyconstraint() (tacs.pytacs.pytacs method)": [[21, "tacs.pytacs.pyTACS.createAdjacencyConstraint"]], "createbucklingproblem() (tacs.pytacs.pytacs method)": [[21, "tacs.pytacs.pyTACS.createBucklingProblem"]], "createdvconstraint() (tacs.pytacs.pytacs method)": [[21, "tacs.pytacs.pyTACS.createDVConstraint"]], "createdesignvec() (tacs.pytacs.pytacs method)": [[21, "tacs.pytacs.pyTACS.createDesignVec"]], "createmodalproblem() (tacs.pytacs.pytacs method)": [[21, "tacs.pytacs.pyTACS.createModalProblem"]], "createnodevec() (tacs.pytacs.pytacs method)": [[21, "tacs.pytacs.pyTACS.createNodeVec"]], "createpanellengthconstraint() (tacs.pytacs.pytacs method)": [[21, "tacs.pytacs.pyTACS.createPanelLengthConstraint"]], "createstaticproblem() (tacs.pytacs.pytacs method)": [[21, "tacs.pytacs.pyTACS.createStaticProblem"]], "createtacsprobsfrombdf() (tacs.pytacs.pytacs method)": [[21, "tacs.pytacs.pyTACS.createTACSProbsFromBDF"]], "createtransientproblem() (tacs.pytacs.pytacs method)": [[21, "tacs.pytacs.pyTACS.createTransientProblem"]], "createvec() (tacs.pytacs.pytacs method)": [[21, "tacs.pytacs.pyTACS.createVec"]], "createvolumeconstraint() (tacs.pytacs.pytacs method)": [[21, "tacs.pytacs.pyTACS.createVolumeConstraint"]], "dtype (tacs.pytacs.pytacs attribute)": [[21, "tacs.pytacs.pyTACS.dtype"]], "elemcallback() (in module tacs.pytacs)": [[21, "tacs.pytacs.elemCallBack"]], "getbdfinfo() (tacs.pytacs.pytacs method)": [[21, "tacs.pytacs.pyTACS.getBDFInfo"]], "getcompnames() (tacs.pytacs.pytacs method)": [[21, "tacs.pytacs.pyTACS.getCompNames"]], "getdesignvarrange() (tacs.pytacs.pytacs method)": [[21, "tacs.pytacs.pyTACS.getDesignVarRange"]], "getglobaldvkeys() (tacs.pytacs.pytacs method)": [[21, "tacs.pytacs.pyTACS.getGlobalDVKeys"]], "getglobaldvnums() (tacs.pytacs.pytacs method)": [[21, "tacs.pytacs.pyTACS.getGlobalDVNums"]], "getglobaldvs() (tacs.pytacs.pytacs method)": [[21, "tacs.pytacs.pyTACS.getGlobalDVs"]], "getglobalnodeidsforcomps() (tacs.pytacs.pytacs method)": [[21, "tacs.pytacs.pyTACS.getGlobalNodeIDsForComps"]], "getlocalmultipliernodeids() (tacs.pytacs.pytacs method)": [[21, "tacs.pytacs.pyTACS.getLocalMultiplierNodeIDs"]], "getlocalnodeidsforcomps() (tacs.pytacs.pytacs method)": [[21, "tacs.pytacs.pyTACS.getLocalNodeIDsForComps"]], "getnumcomponents() (tacs.pytacs.pytacs method)": [[21, "tacs.pytacs.pyTACS.getNumComponents"]], "getnumdesignvars() (tacs.pytacs.pytacs method)": [[21, "tacs.pytacs.pyTACS.getNumDesignVars"]], "getnumownedmultipliernodes() (tacs.pytacs.pytacs method)": [[21, "tacs.pytacs.pyTACS.getNumOwnedMultiplierNodes"]], "getnumownednodes() (tacs.pytacs.pytacs method)": [[21, "tacs.pytacs.pyTACS.getNumOwnedNodes"]], "getoption() (tacs.pytacs.pytacs method)": [[21, "tacs.pytacs.pyTACS.getOption"]], "getorigdesignvars() (tacs.pytacs.pytacs method)": [[21, "tacs.pytacs.pyTACS.getOrigDesignVars"]], "getorignodes() (tacs.pytacs.pytacs method)": [[21, "tacs.pytacs.pyTACS.getOrigNodes"]], "gettotalnumdesignvars() (tacs.pytacs.pytacs method)": [[21, "tacs.pytacs.pyTACS.getTotalNumDesignVars"]], "gettotalnumglobaldvs() (tacs.pytacs.pytacs method)": [[21, "tacs.pytacs.pyTACS.getTotalNumGlobalDVs"]], "getvarspernode() (tacs.pytacs.pytacs method)": [[21, "tacs.pytacs.pyTACS.getVarsPerNode"]], "initialize() (tacs.pytacs.pytacs method)": [[21, "tacs.pytacs.pyTACS.initialize"]], "printdefaultoptions() (tacs.pytacs.pytacs class method)": [[21, "tacs.pytacs.pyTACS.printDefaultOptions"]], "printoptions() (tacs.pytacs.pytacs method)": [[21, "tacs.pytacs.pyTACS.printOptions"]], "pytacs (class in tacs.pytacs)": [[21, "tacs.pytacs.pyTACS"]], "selectcompids() (tacs.pytacs.pytacs method)": [[21, "tacs.pytacs.pyTACS.selectCompIDs"]], "setoption() (tacs.pytacs.pytacs method)": [[21, "tacs.pytacs.pyTACS.setOption"]], "tacs.pytacs": [[21, "module-tacs.pytacs"]], "writebdf() (tacs.pytacs.pytacs method)": [[21, "tacs.pytacs.pyTACS.writeBDF"]], "staticproblem (class in tacs.problems)": [[22, "tacs.problems.StaticProblem"]], "addadjointresproducts() (tacs.problems.staticproblem method)": [[22, "tacs.problems.StaticProblem.addAdjointResProducts"]], "addadjointresxptsensproducts() (tacs.problems.staticproblem method)": [[22, "tacs.problems.StaticProblem.addAdjointResXptSensProducts"]], "addcentrifugalload() (tacs.problems.staticproblem method)": [[22, "tacs.problems.StaticProblem.addCentrifugalLoad"]], "adddvsens() (tacs.problems.staticproblem method)": [[22, "tacs.problems.StaticProblem.addDVSens"]], "addfunction() (tacs.problems.staticproblem method)": [[22, "tacs.problems.StaticProblem.addFunction"]], "addinertialload() (tacs.problems.staticproblem method)": [[22, "tacs.problems.StaticProblem.addInertialLoad"]], "addloadfrombdf() (tacs.problems.staticproblem method)": [[22, "tacs.problems.StaticProblem.addLoadFromBDF"]], "addloadtocomponents() (tacs.problems.staticproblem method)": [[22, "tacs.problems.StaticProblem.addLoadToComponents"]], "addloadtonodes() (tacs.problems.staticproblem method)": [[22, "tacs.problems.StaticProblem.addLoadToNodes"]], "addloadtorhs() (tacs.problems.staticproblem method)": [[22, "tacs.problems.StaticProblem.addLoadToRHS"]], "addpressuretocomponents() (tacs.problems.staticproblem method)": [[22, "tacs.problems.StaticProblem.addPressureToComponents"]], "addpressuretoelements() (tacs.problems.staticproblem method)": [[22, "tacs.problems.StaticProblem.addPressureToElements"]], "addsvsens() (tacs.problems.staticproblem method)": [[22, "tacs.problems.StaticProblem.addSVSens"]], "addtractiontocomponents() (tacs.problems.staticproblem method)": [[22, "tacs.problems.StaticProblem.addTractionToComponents"]], "addtractiontoelements() (tacs.problems.staticproblem method)": [[22, "tacs.problems.StaticProblem.addTractionToElements"]], "addtransposejacvecproduct() (tacs.problems.staticproblem method)": [[22, "tacs.problems.StaticProblem.addTransposeJacVecProduct"]], "addxptsens() (tacs.problems.staticproblem method)": [[22, "tacs.problems.StaticProblem.addXptSens"]], "dtype (tacs.problems.staticproblem attribute)": [[22, "tacs.problems.StaticProblem.dtype"]], "evalfunctions() (tacs.problems.staticproblem method)": [[22, "tacs.problems.StaticProblem.evalFunctions"]], "evalfunctionssens() (tacs.problems.staticproblem method)": [[22, "tacs.problems.StaticProblem.evalFunctionsSens"]], "getdesignvarrange() (tacs.problems.staticproblem method)": [[22, "tacs.problems.StaticProblem.getDesignVarRange"]], "getdesignvars() (tacs.problems.staticproblem method)": [[22, "tacs.problems.StaticProblem.getDesignVars"]], "getfunctionkeys() (tacs.problems.staticproblem method)": [[22, "tacs.problems.StaticProblem.getFunctionKeys"]], "getjacobian() (tacs.problems.staticproblem method)": [[22, "tacs.problems.StaticProblem.getJacobian"]], "getnodes() (tacs.problems.staticproblem method)": [[22, "tacs.problems.StaticProblem.getNodes"]], "getnumcoordinates() (tacs.problems.staticproblem method)": [[22, "tacs.problems.StaticProblem.getNumCoordinates"]], "getnumdesignvars() (tacs.problems.staticproblem method)": [[22, "tacs.problems.StaticProblem.getNumDesignVars"]], "getnumownednodes() (tacs.problems.staticproblem method)": [[22, "tacs.problems.StaticProblem.getNumOwnedNodes"]], "getnumvariables() (tacs.problems.staticproblem method)": [[22, "tacs.problems.StaticProblem.getNumVariables"]], "getoption() (tacs.problems.staticproblem method)": [[22, "tacs.problems.StaticProblem.getOption"]], "getresidual() (tacs.problems.staticproblem method)": [[22, "tacs.problems.StaticProblem.getResidual"]], "getvariables() (tacs.problems.staticproblem method)": [[22, "tacs.problems.StaticProblem.getVariables"]], "getvarspernode() (tacs.problems.staticproblem method)": [[22, "tacs.problems.StaticProblem.getVarsPerNode"]], "loadscale (tacs.problems.staticproblem property)": [[22, "tacs.problems.StaticProblem.loadScale"]], "printdefaultoptions() (tacs.problems.staticproblem class method)": [[22, "tacs.problems.StaticProblem.printDefaultOptions"]], "printoptions() (tacs.problems.staticproblem method)": [[22, "tacs.problems.StaticProblem.printOptions"]], "setdesignvars() (tacs.problems.staticproblem method)": [[22, "tacs.problems.StaticProblem.setDesignVars"]], "setloadscale() (tacs.problems.staticproblem method)": [[22, "tacs.problems.StaticProblem.setLoadScale"]], "setnodes() (tacs.problems.staticproblem method)": [[22, "tacs.problems.StaticProblem.setNodes"]], "setoption() (tacs.problems.staticproblem method)": [[22, "tacs.problems.StaticProblem.setOption"]], "setvarname() (tacs.problems.staticproblem method)": [[22, "tacs.problems.StaticProblem.setVarName"]], "setvariables() (tacs.problems.staticproblem method)": [[22, "tacs.problems.StaticProblem.setVariables"]], "solve() (tacs.problems.staticproblem method)": [[22, "tacs.problems.StaticProblem.solve"]], "solveadjoint() (tacs.problems.staticproblem method)": [[22, "tacs.problems.StaticProblem.solveAdjoint"]], "tacs.problems.static": [[22, "module-tacs.problems.static"]], "writeloadtobdf() (tacs.problems.staticproblem method)": [[22, "tacs.problems.StaticProblem.writeLoadToBDF"]], "writesensfile() (tacs.problems.staticproblem method)": [[22, "tacs.problems.StaticProblem.writeSensFile"]], "writesolution() (tacs.problems.staticproblem method)": [[22, "tacs.problems.StaticProblem.writeSolution"]], "zeroloads() (tacs.problems.staticproblem method)": [[22, "tacs.problems.StaticProblem.zeroLoads"]], "zerovariables() (tacs.problems.staticproblem method)": [[22, "tacs.problems.StaticProblem.zeroVariables"]], "transientproblem (class in tacs.problems)": [[23, "tacs.problems.TransientProblem"]], "addcentrifugalload() (tacs.problems.transientproblem method)": [[23, "tacs.problems.TransientProblem.addCentrifugalLoad"]], "addfunction() (tacs.problems.transientproblem method)": [[23, "tacs.problems.TransientProblem.addFunction"]], "addinertialload() (tacs.problems.transientproblem method)": [[23, "tacs.problems.TransientProblem.addInertialLoad"]], "addloadfrombdf() (tacs.problems.transientproblem method)": [[23, "tacs.problems.TransientProblem.addLoadFromBDF"]], "addloadtocomponents() (tacs.problems.transientproblem method)": [[23, "tacs.problems.TransientProblem.addLoadToComponents"]], "addloadtonodes() (tacs.problems.transientproblem method)": [[23, "tacs.problems.TransientProblem.addLoadToNodes"]], "addloadtorhs() (tacs.problems.transientproblem method)": [[23, "tacs.problems.TransientProblem.addLoadToRHS"]], "addpressuretocomponents() (tacs.problems.transientproblem method)": [[23, "tacs.problems.TransientProblem.addPressureToComponents"]], "addpressuretoelements() (tacs.problems.transientproblem method)": [[23, "tacs.problems.TransientProblem.addPressureToElements"]], "addtractiontocomponents() (tacs.problems.transientproblem method)": [[23, "tacs.problems.TransientProblem.addTractionToComponents"]], "addtractiontoelements() (tacs.problems.transientproblem method)": [[23, "tacs.problems.TransientProblem.addTractionToElements"]], "dtype (tacs.problems.transientproblem attribute)": [[23, "tacs.problems.TransientProblem.dtype"]], "evalfunctions() (tacs.problems.transientproblem method)": [[23, "tacs.problems.TransientProblem.evalFunctions"]], "evalfunctionssens() (tacs.problems.transientproblem method)": [[23, "tacs.problems.TransientProblem.evalFunctionsSens"]], "getdesignvarrange() (tacs.problems.transientproblem method)": [[23, "tacs.problems.TransientProblem.getDesignVarRange"]], "getdesignvars() (tacs.problems.transientproblem method)": [[23, "tacs.problems.TransientProblem.getDesignVars"]], "getfunctionkeys() (tacs.problems.transientproblem method)": [[23, "tacs.problems.TransientProblem.getFunctionKeys"]], "getnodes() (tacs.problems.transientproblem method)": [[23, "tacs.problems.TransientProblem.getNodes"]], "getnumcoordinates() (tacs.problems.transientproblem method)": [[23, "tacs.problems.TransientProblem.getNumCoordinates"]], "getnumdesignvars() (tacs.problems.transientproblem method)": [[23, "tacs.problems.TransientProblem.getNumDesignVars"]], "getnumownednodes() (tacs.problems.transientproblem method)": [[23, "tacs.problems.TransientProblem.getNumOwnedNodes"]], "getnumtimestages() (tacs.problems.transientproblem method)": [[23, "tacs.problems.TransientProblem.getNumTimeStages"]], "getnumtimesteps() (tacs.problems.transientproblem method)": [[23, "tacs.problems.TransientProblem.getNumTimeSteps"]], "getnumvariables() (tacs.problems.transientproblem method)": [[23, "tacs.problems.TransientProblem.getNumVariables"]], "getoption() (tacs.problems.transientproblem method)": [[23, "tacs.problems.TransientProblem.getOption"]], "gettimestages() (tacs.problems.transientproblem method)": [[23, "tacs.problems.TransientProblem.getTimeStages"]], "gettimesteps() (tacs.problems.transientproblem method)": [[23, "tacs.problems.TransientProblem.getTimeSteps"]], "getvariables() (tacs.problems.transientproblem method)": [[23, "tacs.problems.TransientProblem.getVariables"]], "getvarspernode() (tacs.problems.transientproblem method)": [[23, "tacs.problems.TransientProblem.getVarsPerNode"]], "iterate() (tacs.problems.transientproblem method)": [[23, "tacs.problems.TransientProblem.iterate"]], "prepiterativesolve() (tacs.problems.transientproblem method)": [[23, "tacs.problems.TransientProblem.prepIterativeSolve"]], "printdefaultoptions() (tacs.problems.transientproblem class method)": [[23, "tacs.problems.TransientProblem.printDefaultOptions"]], "printoptions() (tacs.problems.transientproblem method)": [[23, "tacs.problems.TransientProblem.printOptions"]], "setdesignvars() (tacs.problems.transientproblem method)": [[23, "tacs.problems.TransientProblem.setDesignVars"]], "setinitconditions() (tacs.problems.transientproblem method)": [[23, "tacs.problems.TransientProblem.setInitConditions"]], "setnodes() (tacs.problems.transientproblem method)": [[23, "tacs.problems.TransientProblem.setNodes"]], "setoption() (tacs.problems.transientproblem method)": [[23, "tacs.problems.TransientProblem.setOption"]], "setvarname() (tacs.problems.transientproblem method)": [[23, "tacs.problems.TransientProblem.setVarName"]], "solve() (tacs.problems.transientproblem method)": [[23, "tacs.problems.TransientProblem.solve"]], "tacs.problems.transient": [[23, "module-tacs.problems.transient"]], "writesensfile() (tacs.problems.transientproblem method)": [[23, "tacs.problems.TransientProblem.writeSensFile"]], "writesolution() (tacs.problems.transientproblem method)": [[23, "tacs.problems.TransientProblem.writeSolution"]], "zeroloads() (tacs.problems.transientproblem method)": [[23, "tacs.problems.TransientProblem.zeroLoads"]], "volumeconstraint (class in tacs.constraints)": [[24, "tacs.constraints.VolumeConstraint"]], "addconstraint() (tacs.constraints.volumeconstraint method)": [[24, "tacs.constraints.VolumeConstraint.addConstraint"]], "dtype (tacs.constraints.volumeconstraint attribute)": [[24, "tacs.constraints.VolumeConstraint.dtype"]], "evalconstraints() (tacs.constraints.volumeconstraint method)": [[24, "tacs.constraints.VolumeConstraint.evalConstraints"]], "evalconstraintssens() (tacs.constraints.volumeconstraint method)": [[24, "tacs.constraints.VolumeConstraint.evalConstraintsSens"]], "getconstraintbounds() (tacs.constraints.volumeconstraint method)": [[24, "tacs.constraints.VolumeConstraint.getConstraintBounds"]], "getconstraintkeys() (tacs.constraints.volumeconstraint method)": [[24, "tacs.constraints.VolumeConstraint.getConstraintKeys"]], "getconstraintsizes() (tacs.constraints.volumeconstraint method)": [[24, "tacs.constraints.VolumeConstraint.getConstraintSizes"]], "getdesignvarrange() (tacs.constraints.volumeconstraint method)": [[24, "tacs.constraints.VolumeConstraint.getDesignVarRange"]], "getdesignvars() (tacs.constraints.volumeconstraint method)": [[24, "tacs.constraints.VolumeConstraint.getDesignVars"]], "getnodes() (tacs.constraints.volumeconstraint method)": [[24, "tacs.constraints.VolumeConstraint.getNodes"]], "getnumcoordinates() (tacs.constraints.volumeconstraint method)": [[24, "tacs.constraints.VolumeConstraint.getNumCoordinates"]], "getnumdesignvars() (tacs.constraints.volumeconstraint method)": [[24, "tacs.constraints.VolumeConstraint.getNumDesignVars"]], "getnumownednodes() (tacs.constraints.volumeconstraint method)": [[24, "tacs.constraints.VolumeConstraint.getNumOwnedNodes"]], "getnumvariables() (tacs.constraints.volumeconstraint method)": [[24, "tacs.constraints.VolumeConstraint.getNumVariables"]], "getoption() (tacs.constraints.volumeconstraint method)": [[24, "tacs.constraints.VolumeConstraint.getOption"]], "getvarspernode() (tacs.constraints.volumeconstraint method)": [[24, "tacs.constraints.VolumeConstraint.getVarsPerNode"]], "printdefaultoptions() (tacs.constraints.volumeconstraint class method)": [[24, "tacs.constraints.VolumeConstraint.printDefaultOptions"]], "printoptions() (tacs.constraints.volumeconstraint method)": [[24, "tacs.constraints.VolumeConstraint.printOptions"]], "setdesignvars() (tacs.constraints.volumeconstraint method)": [[24, "tacs.constraints.VolumeConstraint.setDesignVars"]], "setnodes() (tacs.constraints.volumeconstraint method)": [[24, "tacs.constraints.VolumeConstraint.setNodes"]], "setoption() (tacs.constraints.volumeconstraint method)": [[24, "tacs.constraints.VolumeConstraint.setOption"]], "setvarname() (tacs.constraints.volumeconstraint method)": [[24, "tacs.constraints.VolumeConstraint.setVarName"]], "tacs.constraints.volume": [[24, "module-tacs.constraints.volume"]], "writevisualization() (tacs.constraints.volumeconstraint method)": [[24, "tacs.constraints.VolumeConstraint.writeVisualization"]]}})