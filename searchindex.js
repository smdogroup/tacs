Search.setIndex({"docnames": ["caps2tacs/caps2tacs", "caps2tacs/main", "core/TACS", "core/constitutive", "core/core", "core/elements", "core/functions", "examples/Example-Beam_Optimization", "examples/Example-CRM_Optimization", "examples/Example-Plate", "examples/Example-Transient_Battery", "index", "install", "interfaces", "mphys/builder", "mphys/mphys", "pytacs/adjacency", "pytacs/buckling", "pytacs/constraints", "pytacs/dvcon", "pytacs/modal", "pytacs/panel_length", "pytacs/problems", "pytacs/pytacs", "pytacs/pytacs_module", "pytacs/static", "pytacs/transient", "pytacs/volume", "theory/elements_theory", "theory/shell_element", "theory/theory"], "filenames": ["caps2tacs/caps2tacs.rst", "caps2tacs/main.rst", "core/TACS.rst", "core/constitutive.rst", "core/core.rst", "core/elements.rst", "core/functions.rst", "examples/Example-Beam_Optimization.rst", "examples/Example-CRM_Optimization.rst", "examples/Example-Plate.rst", "examples/Example-Transient_Battery.rst", "index.rst", "install.rst", "interfaces.rst", "mphys/builder.rst", "mphys/mphys.rst", "pytacs/adjacency.rst", "pytacs/buckling.rst", "pytacs/constraints.rst", "pytacs/dvcon.rst", "pytacs/modal.rst", "pytacs/panel_length.rst", "pytacs/problems.rst", "pytacs/pytacs.rst", "pytacs/pytacs_module.rst", "pytacs/static.rst", "pytacs/transient.rst", "pytacs/volume.rst", "theory/elements_theory.rst", "theory/shell_element.rst", "theory/theory.rst"], "titles": ["caps2tacs", "Installation of ESP/CAPS", "Direct", "constitutive module", "Core modules", "elements module", "functions module", "Beam optimization with MPhys", "CRM Optimization", "Plate under static load", "Battery pack during thermal runaway", "TACS Overview", "Install", "Interfaces", "TacsBuilder class", "MPhys", "AdjacencyConstraint", "BucklingProblem", "Constraint classes", "DVConstraint", "ModalProblem", "PanelLengthConstraint", "Problem classes", "pyTACS", "pyTACS class", "StaticProblem", "TransientProblem", "VolumeConstraint", "&lt;no title&gt;", "Beam and shell elements in TACS", "Theory"], "terms": {"The": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 19, 20, 21, 23, 24, 25, 26, 27, 29], "modul": [0, 1, 7, 11, 24, 25, 26], "i": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 23, 24, 25, 26, 27, 29], "python": [0, 1, 2, 13, 23, 24], "interfac": [0, 2, 11, 14, 15, 23, 24], "run": [0, 1, 5, 7, 8, 12, 14, 23], "tac": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 19, 20, 21, 23, 24, 25, 26, 27, 30], "analysi": [0, 1, 2, 3, 5, 7, 9, 10, 11, 12, 14, 15, 17, 20, 23, 24, 25, 26, 29], "geometri": [0, 1, 5, 9, 14, 29], "built": [0, 1, 6, 12], "esp": [0, 17, 20, 25, 26], "cap": [0, 17, 20, 25, 26], "engin": [0, 1, 17, 25, 26], "sketch": [0, 1], "pad": [0, 1], "top": [0, 3], "pytac": [0, 2, 9, 10, 11, 13, 14, 16, 17, 19, 20, 21, 25, 26, 27], "tacsaim": [0, 1, 17, 20, 25, 26], "from": [0, 1, 2, 5, 6, 7, 8, 9, 10, 11, 14, 16, 17, 19, 20, 21, 24, 25, 26, 27, 29], "us": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 19, 20, 21, 23, 24, 25, 26, 27, 29], "funtofem": [0, 1], "size": [0, 1, 2, 16, 17, 19, 20, 21, 24, 25, 26, 27], "shape": [0, 1, 2, 3, 17, 20, 24, 25, 26, 29], "optim": [0, 1, 2, 3, 10, 11, 12, 14, 15, 16, 17, 19, 20, 21, 23, 25, 26, 27], "an": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 12, 14, 16, 17, 19, 20, 21, 23, 24, 25, 26, 27, 29], "aerodynmam": 0, "structur": [0, 1, 2, 3, 5, 6, 7, 8, 11, 12, 14, 16, 17, 19, 20, 21, 23, 24, 25, 26, 27], "under": [0, 3, 5, 7, 10, 11, 29], "onewai": 0, "coupl": [0, 1, 2, 3, 7, 14, 15, 17, 25, 26, 29], "fulli": [0, 3], "aerostructur": [0, 14, 17, 25], "also": [0, 2, 7, 12, 24, 29], "provid": [0, 1, 2, 15, 16, 17, 19, 20, 21, 24, 25, 26, 27, 29], "thermoelast": [0, 1, 3, 5, 17, 24, 25, 26, 29], "properti": [0, 1, 2, 3, 5, 7, 8, 9, 10, 12, 14, 24, 25], "through": [0, 1, 2, 3, 10, 12, 13, 24, 29], "For": [0, 1, 2, 6, 8, 9, 10, 12, 15, 19, 24, 26, 27, 29], "each": [0, 2, 3, 5, 6, 7, 8, 9, 10, 12, 14, 16, 17, 19, 21, 24, 25, 26, 27, 29], "design": [0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 14, 16, 17, 19, 20, 21, 23, 24, 25, 26, 27, 29], "build": [0, 1, 12], "nastran": [0, 2, 3, 9, 14, 17, 23, 24, 25, 26], "file": [0, 1, 2, 7, 8, 9, 10, 12, 14, 16, 17, 19, 20, 21, 23, 24, 25, 26, 27], "mesh": [0, 1, 2, 7, 8, 9, 10, 14, 16, 17, 19, 20, 21, 23, 24, 25, 26, 27, 29], "bdf": [0, 2, 3, 7, 8, 9, 10, 14, 17, 23, 25, 26], "dat": 0, "which": [0, 1, 2, 5, 6, 7, 9, 10, 12, 14, 16, 17, 19, 20, 21, 24, 25, 26, 27, 29], "ar": [0, 1, 2, 3, 5, 6, 8, 9, 10, 12, 13, 14, 16, 17, 19, 20, 21, 23, 24, 25, 26, 27, 29], "locat": [0, 1, 2, 3, 9, 10, 12, 14, 16, 17, 19, 20, 21, 25, 26, 27, 29], "work": [0, 1, 2, 12, 24, 29], "directori": [0, 1, 2, 7, 9, 10, 12, 14, 16, 17, 20, 25, 26, 27], "usual": [0, 1, 2, 3, 6], "capsstruct": 0, "scratch": 0, "output": [0, 1, 2, 7, 12, 14, 16, 17, 20, 25, 26, 27], "can": [0, 1, 2, 3, 6, 7, 9, 10, 12, 14, 16, 17, 19, 20, 21, 23, 24, 25, 26, 27, 29], "store": [0, 2, 3, 16, 19, 21, 27, 29], "well": [0, 10, 24, 25, 26, 29], "f5": [0, 2, 7, 8, 9, 10, 12, 14, 16, 17, 19, 20, 21, 24, 25, 26, 27], "develop": [0, 11, 12, 24], "sean": 0, "engelstad": 0, "more": [0, 1, 2, 9, 11, 12, 14, 15, 16, 17, 19, 20, 21, 23, 25, 26, 27, 29], "exampl": [0, 2, 3, 6, 7, 9, 10, 14, 16, 17, 19, 20, 21, 24, 25, 26, 27, 29], "involv": [0, 1, 2, 9, 29], "cfd": [0, 1, 26], "pleas": [0, 1, 16, 17, 19, 20, 21, 25, 26, 27], "see": [0, 1, 2, 7, 9, 14, 15, 19, 25, 26], "github": [0, 1, 12], "instal": [0, 11], "intro": 0, "test": [0, 2, 3], "link": [1, 12], "main": [1, 15, 16, 17, 19, 20, 21, 23, 24, 25, 26, 27], "webist": 1, "follow": [1, 2, 3, 5, 6, 7, 12, 14, 16, 17, 20, 23, 24, 25, 26, 27, 29], "A": [1, 2, 3, 5, 8, 13, 16, 17, 24, 25, 26, 27, 29], "prebuilt": 1, "distribut": [1, 2, 5, 7, 17, 24, 25, 26, 29], "found": [1, 6, 7, 9, 10, 24], "folder": 1, "environ": [1, 12], "variabl": [1, 2, 3, 6, 7, 8, 9, 10, 12, 14, 16, 17, 19, 20, 21, 23, 24, 25, 26, 27, 29], "must": [1, 2, 9, 12, 14, 17, 24, 25, 26, 27, 29], "setup": [1, 2, 3, 5, 7, 9, 12, 14, 23, 24, 25, 26], "bashrc": [1, 12], "servecsm": 1, "command": [1, 12], "view": 1, "csm": 1, "alia": [1, 16, 17, 19, 20, 21, 24, 25, 26, 27], "one": [1, 2, 3, 6, 7, 9, 10, 12, 14, 15, 17, 20, 24, 25, 26, 29], "repeatedli": 1, "option": [1, 3, 5, 6, 7, 8, 12, 14, 19, 21], "note": [1, 2, 12, 16, 17, 19, 20, 21, 24, 25, 26, 27, 29], "sourc": [1, 2, 11, 14, 16, 17, 19, 20, 21, 24, 25, 26, 27], "won": 1, "t": [1, 2, 3, 5, 6, 7, 8, 9, 10, 12, 14, 21, 24, 25, 29], "until": [1, 2, 23], "after": [1, 2, 7, 9, 10, 12, 14, 29], "full": [1, 2, 5, 29], "so": [1, 2, 7, 8, 9, 12, 13, 16, 17, 19, 20, 21, 25, 26, 27], "you": [1, 12], "ignor": [1, 3, 24], "immedi": [1, 2], "export": [1, 2, 12], "esp_root": 1, "packag": [1, 12, 15], "esp123": 1, "engsketchpad": 1, "pythonpath": 1, "pyesp": 1, "espenv": 1, "shell": [1, 3, 5, 9, 11, 14, 17, 20, 24, 25, 26, 27, 30], "bin": 1, "linux": [1, 12], "machin": [1, 12], "proce": [1, 2, 23], "opencascad": 1, "version": [1, 2, 12], "chang": [1, 3, 5, 16, 17, 19, 20, 21, 24, 25, 26, 27, 29], "past": 1, "accordingli": [1, 12], "basic": [1, 24], "step": [1, 2, 9, 10, 16, 23, 24, 26], "download": [1, 12], "tar": [1, 12], "unpack": 1, "inform": [1, 2, 3, 9, 12, 14, 15, 16, 17, 19, 20, 21, 24, 25, 26, 27], "come": [1, 24, 25, 26], "Then": [1, 2, 10, 12], "we": [1, 2, 7, 9, 10, 24, 29], "onli": [1, 2, 6, 9, 10, 14, 16, 17, 19, 20, 21, 24, 25, 26, 27, 29], "need": [1, 2, 6, 12, 14, 16, 17, 19, 20, 21, 24, 25, 26, 27], "make": [1, 2], "auto": 1, "don": [1, 5, 12, 24], "rest": 1, "mkdir": 1, "cd": 1, "wget": 1, "http": [1, 12], "acdl": 1, "mit": 1, "edu": 1, "aarch64": 1, "tgz": [1, 12], "xvf": 1, "config": 1, "makeenv": 1, "7": [1, 3, 5, 17, 20, 24, 25, 26], "0": [1, 2, 3, 5, 6, 7, 8, 9, 10, 12, 14, 16, 17, 19, 20, 21, 24, 25, 26, 27, 29], "src": [1, 12], "aim": [1, 17, 20, 25, 26], "caps2tac": [1, 11, 13, 17, 20, 25, 26], "import": [1, 7, 8, 9, 10, 12, 13, 24, 29], "unless": [1, 2], "properli": 1, "your": [1, 5, 12], "differenti": [1, 6], "cad": 1, "defin": [1, 2, 3, 5, 7, 8, 9, 10, 14, 16, 17, 19, 20, 21, 24, 25, 26, 27, 29], "comput": [1, 2, 3, 5, 6, 8, 9, 10, 14, 16, 17, 19, 20, 21, 23, 24, 25, 26, 27], "solid": [1, 3, 24, 27], "model": [1, 2, 3, 6, 7, 8, 9, 10, 14, 16, 17, 19, 20, 21, 23, 24, 25, 26, 27, 29], "user": [1, 2, 5, 7, 9, 10, 12, 14, 15, 16, 17, 19, 20, 21, 24, 25, 26, 27], "write": [1, 2, 7, 8, 9, 10, 14, 16, 17, 19, 20, 21, 24, 25, 26, 27], "own": [1, 2, 14, 16, 17, 19, 20, 21, 24, 25, 26, 27, 29], "tutori": 1, "websit": 1, "thing": 1, "includ": [1, 2, 10, 12, 14, 17, 19, 24, 25, 26], "below": [1, 3, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 20, 23, 24, 25, 26, 27, 29], "refer": [1, 3, 5], "caps_w": 1, "simple_naca_w": 1, "configur": [1, 2, 7, 29], "paramet": [1, 2, 3, 5, 6, 7, 8, 14, 16, 17, 19, 20, 21, 24, 25, 26, 27, 29], "cfgpmtr": 1, "nrib": 1, "10": [1, 3, 5, 8, 9, 16, 17, 19, 20, 21, 24, 25, 26, 27], "integ": [1, 17, 20, 24], "fix": [1, 7, 9, 14, 17, 25, 26], "dure": [1, 3, 9, 11, 14, 24, 25, 26, 29], "despmtr": 1, "span": [1, 7], "real": [1, 2], "number": [1, 2, 3, 5, 7, 8, 10, 14, 16, 17, 19, 20, 21, 23, 24, 25, 26, 27], "ti": [1, 2], "capsgroup": 1, "attribut": [1, 16, 17, 19, 20, 21, 25, 26, 27], "region": [1, 10, 24], "same": [1, 2, 8, 10, 12, 19, 21, 24], "car": 1, "denot": [1, 14, 29], "rib1": [1, 24], "etc": [1, 2, 5, 12, 14, 17, 19, 24, 25, 26], "often": [1, 24, 29], "pattern": [1, 10], "statement": 1, "sometim": 1, "primit": 1, "udprim": 1, "editattr": 1, "capsconstraint": 1, "intend": [1, 12, 25, 26], "have": [1, 2, 3, 12, 14, 24, 29], "constraint": [1, 2, 5, 7, 8, 14, 16, 17, 19, 20, 21, 23, 24, 25, 26, 27, 29], "e": [1, 2, 3, 5, 7, 8, 9, 12, 14, 17, 24, 25, 26, 29], "g": [1, 2, 3, 8, 14, 24, 25], "These": [1, 2, 3, 5, 6, 8, 10, 12, 13, 23, 24, 29], "temperatur": [1, 3, 6, 10, 29], "elast": [1, 3, 5, 8, 17, 24, 25, 26], "right": [1, 10, 17, 25, 26, 29], "now": [1, 8, 9, 10], "capsload": 1, "load": [1, 2, 3, 5, 6, 7, 8, 10, 11, 14, 17, 23, 24, 25, 26], "thi": [1, 2, 3, 5, 6, 7, 8, 9, 10, 12, 13, 14, 16, 17, 19, 20, 21, 23, 24, 25, 26, 27, 29], "simpl": [1, 2, 8, 9], "analys": [1, 6, 9, 14, 23], "aerodynam": [1, 17, 25, 26], "cannot": [1, 2, 5, 24, 29], "wai": [1, 3, 9, 24], "how": [1, 2, 9, 26], "do": [1, 3, 7, 9, 10, 19, 24], "capsaim": 1, "specifi": [1, 2, 3, 6, 7, 8, 10, 17, 23, 24, 25, 26], "bodi": [1, 2, 5, 14, 29], "tool": [1, 5, 11], "add": [1, 2, 5, 7, 9, 10, 12, 14, 17, 23, 24, 25, 26, 29], "egadstessaim": 1, "here": [1, 2, 7, 9, 10, 29], "occasion": 1, "capsmesh": 1, "set": [1, 2, 3, 5, 6, 7, 8, 9, 10, 12, 14, 16, 17, 19, 20, 21, 23, 24, 25, 26, 27], "altern": [1, 12, 17], "differ": [1, 2, 3, 5, 10, 19, 24], "section": [1, 2, 3, 7, 15, 23, 29], "tacsmodel": 1, "object": [1, 2, 3, 5, 6, 7, 8, 9, 10, 12, 14, 16, 17, 19, 20, 21, 23, 24, 25, 26, 27, 29], "supervis": 1, "process": [1, 2, 6, 7, 9, 10, 12, 24, 26], "updat": [1, 3, 16, 17, 19, 20, 21, 24, 25, 26, 27], "support": [1, 5, 12, 13, 14, 17, 20, 24, 25, 26, 27], "mpi": [1, 2, 8, 10, 12, 14, 16, 17, 19, 20, 21, 24, 25, 26, 27], "parallel": [1, 2, 5, 11, 12], "featur": [1, 10, 12, 29], "directli": [1, 16, 17, 19, 20, 21, 25, 26, 27, 29], "avail": [1, 3, 5, 6, 12, 14, 29], "comm": [1, 2, 7, 8, 10, 14, 16, 17, 19, 20, 21, 24, 25, 26, 27], "comm_world": [1, 8], "tacs_model": 1, "csm_file": 1, "next": [1, 2, 7, 9, 10], "gener": [1, 2, 3, 5, 6, 8, 9, 12, 15, 16, 17, 19, 20, 21, 24, 25, 26, 27, 29], "global": [1, 2, 5, 6, 8, 14, 17, 24, 25, 26, 29], "depend": [1, 2, 5, 16, 17, 19, 20, 21, 24, 25, 26, 27, 29], "scale": [1, 2, 5, 8, 14, 17, 19, 20, 24, 25, 26], "ll": [1, 9], "want": [1, 10, 12, 16, 17, 19, 20, 21, 24, 25, 26, 27], "tune": 1, "hyperparamet": 1, "small": [1, 29], "egadsaim": 1, "routin": [1, 2, 12, 14, 16, 17, 19, 20, 21, 25, 26, 27], "get": [1, 2, 3, 5, 7, 8, 9, 10, 12, 14, 16, 17, 19, 20, 21, 24, 25, 26, 27], "qualiti": 1, "mesh_aim": 1, "set_mesh": 1, "edge_pt_min": 1, "15": [1, 3, 17, 20, 25], "edge_pt_max": 1, "20": [1, 3, 8, 14, 16, 19, 25, 27], "global_mesh_s": 1, "25": [1, 5], "max_surf_offset": 1, "01": [1, 10, 24], "max_dihedral_angl": 1, "register_to": 1, "There": [1, 3, 6, 9, 12, 13, 24, 29], "certain": [1, 17, 24, 25, 26], "regist": 1, "befor": [1, 2, 3, 6, 9, 14, 17, 24, 25, 26], "If": [1, 2, 3, 6, 10, 12, 16, 17, 19, 20, 21, 24, 25, 26, 27], "correctli": 1, "throw": 1, "error": [1, 3, 12, 14], "check": [1, 10, 14, 16, 17, 19, 20, 21, 25, 26, 27], "phase": [1, 3, 5], "materi": [1, 5, 7, 8, 9, 10, 14, 24, 29], "element": [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 14, 16, 17, 19, 21, 23, 24, 25, 26, 27, 30], "definit": [1, 3, 6, 19, 24, 29], "type": [1, 2, 3, 5, 6, 9, 10, 12, 14, 16, 17, 19, 20, 21, 24, 25, 26, 27], "isotrop": [1, 3, 5, 7], "orthotrop": [1, 3, 5, 29], "anisotrop": [1, 3, 5], "ad": [1, 2, 5, 7, 14, 16, 17, 19, 20, 21, 24, 25, 26, 27, 29], "underli": [1, 14], "sever": [1, 2, 3, 6, 10, 12, 13, 24, 29], "common": [1, 2, 16, 17, 23, 24, 25, 26, 27], "save": [1, 2, 16, 17, 19, 20, 21, 25, 26, 27], "class": [1, 2, 6, 7, 8, 9, 10, 13, 15, 16, 17, 19, 20, 21, 23, 25, 26, 27], "method": [1, 2, 5, 6, 9, 10, 11, 12, 13, 14, 16, 17, 19, 20, 21, 23, 24, 25, 26, 27, 29], "aluminum": [1, 9, 10], "steel": 1, "titanium": 1, "carbon": 1, "fiber": 1, "current": [1, 2, 3, 6, 7, 13, 14, 16, 17, 19, 20, 21, 24, 25, 26, 27], "shellproperti": 1, "indirectli": 1, "thicknessvari": 1, "name": [1, 9, 10, 12, 14, 16, 17, 19, 20, 21, 24, 25, 26, 27], "thick": [1, 2, 3, 7, 8, 9, 10, 16, 19, 29], "thermal": [1, 3, 11, 14], "instanc": [1, 2, 6, 10, 14, 16, 17, 20, 23, 24, 25, 26, 27], "pinconstraint": 1, "temperatureconstraint": 1, "input": [1, 2, 6, 7, 9, 10, 14, 24, 25], "match": [1, 19, 24], "static": [1, 2, 6, 7, 11, 17, 24, 25, 29], "problem": [1, 2, 5, 6, 7, 8, 9, 10, 14, 15, 16, 17, 19, 20, 21, 23, 24, 25, 26, 27], "gridforc": 1, "pressur": [1, 17, 25, 26], "whose": 1, "softwar": [1, 7, 12], "repo": 1, "function": [1, 2, 4, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 20, 23, 24, 25, 26, 27, 29], "ksfailur": [1, 2, 6, 7, 8, 9, 14], "mass": [1, 2, 3, 5, 6, 7, 8, 9, 14, 24, 25, 26, 29], "complianc": [1, 6], "onc": [1, 2, 7, 12, 24], "all": [1, 2, 3, 6, 8, 9, 10, 12, 13, 14, 16, 17, 19, 20, 21, 24, 25, 26, 27], "abov": [1, 7, 12, 24], "readi": 1, "complet": [1, 2, 7, 12, 24, 29], "pre_analysi": 1, "run_analysi": 1, "solut": [1, 7, 8, 9, 10, 14, 16, 17, 20, 24, 25, 26, 27], "final": [1, 2, 7, 8, 9, 10, 24], "post_analysi": 1, "valu": [1, 2, 3, 6, 7, 8, 10, 14, 16, 17, 19, 20, 21, 23, 24, 25, 26, 27, 29], "deriv": [1, 2, 8, 12, 14, 16, 17, 19, 20, 21, 25, 26, 27, 29], "adjoint": [1, 2, 8, 25], "include_aim": 1, "true": [1, 6, 7, 8, 9, 14, 16, 17, 20, 21, 24, 25, 26, 27], "five": 1, "coars": 1, "symmetr": [1, 3], "naca": 1, "0012": 1, "wing": [1, 11], "1": [1, 2, 3, 5, 6, 7, 8, 10, 12, 14, 16, 17, 19, 20, 21, 24, 25, 26, 27, 29], "steadi": [1, 5], "egad": 1, "vertic": 1, "2": [1, 2, 3, 5, 6, 8, 10, 12, 14, 20, 21, 24, 25, 26, 29], "unsteadi": 1, "vari": [1, 2, 10, 14, 16, 29], "sinusoid": 1, "time": [1, 2, 7, 10, 14, 16, 17, 20, 24, 25, 26, 27, 29], "3": [1, 3, 5, 7, 8, 9, 10, 12, 14, 16, 17, 19, 20, 21, 24, 25, 26, 27, 29], "find": [1, 29], "panel": [1, 3, 16, 19, 21, 24], "hold": [1, 3, 14, 16, 17, 19, 20, 21, 24, 25, 26, 27, 29], "aero": 1, "4": [1, 2, 3, 5, 17, 23, 24, 25, 26], "rib": [1, 24], "spar": [1, 24], "insid": [1, 24], "5": [1, 3, 8, 9, 10, 12, 14, 24, 25, 29], "aflr": 1, "shown": [1, 3, 7, 10, 25], "result": [1, 2, 6, 7, 16, 17, 19, 20, 21, 25, 26, 27, 29], "about": [1, 3, 6, 14, 24, 29], "40": 1, "drop": 1, "weight": [1, 2, 3, 5, 6, 19, 24], "equal": [1, 3, 8, 10, 21], "notic": 1, "ha": [1, 2, 6, 9, 10, 11, 12, 14, 16, 17, 19, 20, 21, 23, 24, 25, 26, 27], "largest": 1, "root": [1, 12, 16, 17, 19, 20, 21, 24, 25, 26, 27], "relat": [1, 24], "beam": [1, 2, 3, 5, 11, 30], "bend": [1, 29], "clamp": 1, "27": [1, 5], "suggest": 1, "placement": 1, "veri": [1, 2], "good": [1, 3], "In": [1, 2, 9, 10, 12, 17, 24, 25, 26, 29], "case": [1, 2, 6, 9, 10, 16, 17, 19, 20, 21, 24, 25, 26, 27, 29], "move": 1, "toward": 1, "lead": [1, 10, 24], "edg": [1, 5, 24], "higher": [1, 29], "curvatur": 1, "two": [1, 2, 5, 6, 9, 10, 12, 16, 23, 24, 29], "unittest": 1, "verifi": 1, "integration_test": 1, "test_caps_shape_deriv": 1, "py": [1, 12, 24], "test_caps_thick_deriv": 1, "respons": [2, 3, 9, 14, 16, 17, 19, 20, 21, 24, 25, 26, 27, 29], "up": [2, 7, 8, 9, 10, 12, 14, 24], "bookkeep": 2, "most": [2, 3, 6, 13, 17, 23, 24, 25, 26], "like": [2, 3, 5, 6, 7, 10, 12, 16, 17, 19, 20, 21, 25, 26, 27], "state": [2, 5, 8, 16, 17, 19, 20, 21, 24, 25, 26, 27, 29], "vector": [2, 5, 6, 14, 16, 17, 19, 20, 21, 24, 25, 26, 27, 29], "fe": [2, 17, 25, 26], "matric": 2, "approach": [2, 9, 13, 23, 24, 29], "allow": [2, 9, 14, 24], "visibl": 2, "c": [2, 3, 8, 13, 16, 19, 24, 25, 29], "code": [2, 11], "daunt": 2, "new": [2, 7, 8, 12, 14, 16, 17, 19, 20, 21, 24, 25, 26, 27], "simplifi": [2, 29], "where": [2, 3, 6, 9, 10, 16, 17, 19, 20, 21, 24, 25, 26, 27, 29], "been": [2, 9, 10, 11, 12, 14, 24, 29], "autom": [2, 23], "usag": [2, 23], "evalu": [2, 3, 6, 7, 8, 9, 10, 12, 14, 16, 17, 19, 20, 21, 23, 25, 26, 27, 29], "gradient": [2, 3, 6, 7, 8, 9, 11, 12, 23, 24, 29], "desir": [2, 8, 17, 20, 23, 24, 25, 26], "respect": [2, 6, 7, 8, 9, 10, 12, 16, 17, 19, 20, 21, 23, 25, 26, 27, 29], "finit": [2, 6, 11, 12, 23, 29], "form": [2, 14, 16, 19, 23, 24, 29], "style": [2, 23], "compon": [2, 5, 6, 7, 8, 10, 14, 16, 17, 19, 25, 26], "constitut": [2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 21, 24], "creat": [2, 7, 8, 9, 10, 12, 13, 14, 16, 17, 19, 20, 21, 23, 24, 25, 26, 27, 29], "appli": [2, 5, 6, 7, 8, 9, 10, 17, 19, 21, 23, 24, 25, 26], "boundari": [2, 9, 14, 16, 24], "condit": [2, 9, 14, 24, 25, 26], "solv": [2, 8, 9, 10, 16, 17, 19, 20, 21, 23, 24, 25, 26, 27], "system": [2, 5, 8, 12, 29], "pass": [2, 3, 6, 7, 9, 10, 14, 21, 23, 24, 25, 26], "paropt": [2, 8, 23], "order": [2, 3, 12, 17, 23, 24, 25, 26, 29], "minim": [2, 7, 8, 23], "particular": [2, 6, 23, 24], "subject": [2, 7, 8, 23], "some": [2, 5, 6, 9, 23, 24, 29], "improv": [2, 23], "iter": [2, 7, 8, 14, 16, 17, 19, 20, 21, 23, 25, 26, 27], "repeat": [2, 23], "criteria": [2, 6, 9, 23], "satisfi": [2, 23, 29], "It": [2, 9, 16, 17, 19, 20, 21, 24, 25, 26, 27, 29], "contain": [2, 3, 5, 7, 8, 12, 13, 14, 16, 17, 19, 20, 21, 24, 25, 26, 27, 29], "its": [2, 6, 9, 10, 14, 29], "typic": [2, 3, 16, 17, 19, 20, 21, 23, 24, 25, 26, 27, 29], "applybc": [2, 8], "solver": [2, 8, 14, 15, 16, 17, 19, 20, 21, 24, 25, 26, 27], "createvec": [2, 8, 24], "createfemat": [2, 8], "setdesignvar": [2, 8, 16, 17, 19, 20, 21, 25, 26, 27], "vale": 2, "evalfunct": [2, 8, 9, 10, 17, 20, 24, 25, 26], "call": [2, 3, 7, 8, 9, 10, 12, 14, 15, 17, 20, 23, 24, 25, 26, 29], "adddvsen": [2, 17, 25], "addsvsen": [2, 25], "addadjointresproduct": [2, 25], "adjlist": 2, "dfdxlist": 2, "alpha": [2, 3, 8], "loadscal": [2, 25], "collect": [2, 14, 24, 29], "tacsassembl": 2, "product": [2, 3, 5, 6, 8, 12, 25], "residu": [2, 8, 17, 20, 25, 26], "w": [2, 3, 7, 8, 10, 12, 21, 24], "r": [2, 8, 21, 24, 29], "simultan": 2, "reus": 2, "perform": [2, 3, 7, 11, 24], "task": 2, "evaladjointresproduct": [2, 8], "memori": 2, "than": [2, 8, 10, 16, 17, 19, 20, 21, 25, 26, 27], "arrai": [2, 3, 5, 6, 7, 9, 10, 14, 16, 17, 19, 20, 21, 24, 25, 26, 27], "dvsen": 2, "num_dv": 2, "factor": [2, 3, 5, 6, 8, 14, 17, 19, 20, 24, 25, 26], "aux": [2, 25], "contribut": [2, 3, 17, 25, 29], "default": [2, 3, 5, 6, 9, 12, 14, 16, 17, 19, 20, 21, 24, 25, 26, 27], "addadjointresxptsensproduct": [2, 25], "node": [2, 3, 5, 8, 9, 10, 14, 16, 17, 19, 20, 21, 24, 25, 26, 27, 29], "funclist": 2, "list": [2, 3, 8, 14, 16, 17, 19, 20, 21, 24, 25, 26, 27], "addjacobianvecproduct": 2, "beta": [2, 8], "gamma": [2, 8], "x": [2, 3, 5, 6, 7, 8, 9, 16, 17, 19, 20, 21, 24, 25, 26, 27, 29], "y": [2, 3, 5, 6, 7, 8, 9, 14, 29], "mator": 2, "jacobian": [2, 8, 25, 26, 29], "addmatdvsensinnerproduct": 2, "mattyp": 2, "psi": 2, "phi": [2, 25], "dfdx": [2, 8], "inner": [2, 3], "matrix": [2, 3, 5, 8, 16, 17, 19, 20, 21, 25, 26, 27, 29], "sensit": [2, 9, 10, 16, 17, 19, 20, 21, 24, 25, 26, 27], "dfdulist": 2, "pointer": 2, "vec": [2, 16, 17, 19, 20, 21, 24, 25, 26, 27], "addxptsen": [2, 17, 25], "applymatbc": 2, "mat": [2, 3, 8], "assemblejacobian": [2, 8], "dirichlet": 2, "zero": [2, 3, 8, 17, 21, 24, 25, 26], "row": [2, 16, 19, 21, 27], "associ": [2, 3, 5, 17, 20, 24, 25, 26], "diagon": [2, 5, 10, 17, 20, 25, 26], "uniti": [2, 6], "assembli": 2, "ani": [2, 7, 8, 9, 12, 14, 24, 25, 26], "commun": [2, 14], "requir": [2, 3, 5, 6, 7, 8, 9, 10, 12, 17, 25, 26, 29], "coeffici": [2, 3, 29], "term": [2, 25, 29], "second": [2, 5, 6, 9, 10, 24, 26, 29], "govern": [2, 29], "equat": [2, 16, 17, 19, 21, 25, 26, 27], "orient": [2, 5, 12, 29], "normal": [2, 5, 6, 29], "transpos": [2, 25], "assemblematcombo": 2, "mattype1": 2, "scale1": 2, "mattype2": 2, "scale2": 2, "combin": [2, 3, 24, 29], "assemblemattyp": 2, "assembler": 2, "traction": [2, 17, 25, 26], "tacssurfacetract": 2, "point": [2, 3, 5, 7, 8, 9, 14, 17, 24, 25, 26, 29], "entri": [2, 3, 9, 14, 17, 25, 26], "first": [2, 3, 5, 6, 7, 8, 9, 10, 17, 24, 25, 26, 29], "rh": [2, 17, 25, 26], "computereord": 2, "order_typ": 2, "mat_typ": 2, "reorder": 2, "unknown": 2, "initi": [2, 3, 7, 8, 9, 10, 14, 16, 17, 19, 20, 21, 23, 25, 26, 27, 29], "copyvari": 2, "none": [2, 5, 8, 9, 14, 16, 17, 19, 20, 21, 24, 25, 26, 27], "dvec": 2, "ddvec": 2, "varspernod": [2, 5, 17, 25, 26], "numownednod": [2, 26], "numel": 2, "numdependentnod": 2, "factori": 2, "createdesignvec": [2, 24], "createmat": 2, "createnodevec": [2, 24], "createschurmat": 2, "special": [2, 24], "suit": 2, "On": 2, "scheme": [2, 14, 26], "subsequ": 2, "": [2, 3, 5, 7, 8, 9, 10, 12, 14, 17, 19, 20, 21, 24, 25, 26, 29], "femat": 2, "non": [2, 24], "togeth": 2, "easier": [2, 24], "eigenvalu": [2, 17, 20, 24], "determin": [2, 3, 5, 6, 14, 17, 20, 24, 25, 26, 29], "serial": 2, "other": [2, 5, 7, 10, 12, 15, 24, 25, 26], "separ": [2, 6, 14, 24], "end": [2, 12, 14, 24, 26, 29], "block": [2, 10], "while": [2, 6, 24], "local": [2, 3, 5, 7, 24], "impos": [2, 29], "kludg": 2, "within": [2, 3, 6, 10, 12, 19, 24, 29], "hopefulli": 2, "reduc": [2, 29], "fill": [2, 25], "ins": 2, "although": 2, "firm": 2, "proof": 2, "back": [2, 7, 9, 10], "place": [2, 3, 8, 12, 17, 19, 20, 25, 26], "fematbindic": 2, "fematcindic": 2, "map": 2, "mathemat": 2, "written": [2, 12, 24, 29], "a1": 2, "p": 2, "permut": 2, "column": 2, "thei": [2, 7, 8, 12, 21, 24, 29], "share": [2, 24], "exactli": 2, "layout": 2, "evalenergi": 2, "kinet": [2, 29], "potenti": [2, 29], "energi": [2, 6, 10, 29], "getbcmap": 2, "getdesignvarrang": [2, 8, 16, 17, 19, 20, 21, 24, 25, 26, 27], "lb": [2, 8], "ub": [2, 8], "retriev": [2, 24], "rang": [2, 8, 26], "individu": [2, 17, 25, 26], "mai": [2, 5, 6, 12, 14, 24], "consist": [2, 3, 15, 21, 23, 29], "someon": 2, "incorrect": 2, "data": [2, 8, 24, 29], "could": [2, 10], "best": [2, 12], "guess": [2, 17, 20, 24], "take": [2, 9, 10, 16, 17, 24, 25, 26, 29], "minimum": [2, 3, 9, 12], "upper": [2, 3, 7, 8, 14, 16, 17, 19, 20, 21, 24, 25, 26, 27], "bound": [2, 3, 8, 14, 16, 17, 19, 20, 21, 24, 25, 26, 27], "maximum": [2, 6, 8, 9, 10], "lower": [2, 3, 7, 8, 14, 16, 17, 19, 20, 21, 24, 25, 26, 27], "lowerbound": [2, 3], "upperbound": [2, 3], "numdv": 2, "getdesignvar": [2, 8, 16, 17, 19, 20, 21, 25, 26, 27], "assign": [2, 3, 7, 8, 9, 14, 24, 25], "doe": [2, 24], "ensur": [2, 12, 16, 24, 27], "between": [2, 3, 24, 29], "inconsist": [2, 6], "begin": [2, 29], "return": [2, 3, 5, 6, 7, 8, 9, 10, 12, 14, 16, 17, 19, 20, 21, 24, 25, 26, 27], "them": [2, 3, 6, 8, 10], "maintain": 2, "multipli": [2, 5, 14, 17, 20, 24, 25, 26, 29], "correspond": [2, 3, 10, 12, 14, 16, 17, 19, 20, 21, 24, 25, 26, 27], "undefin": 2, "behaviour": [2, 24], "getelementdata": 2, "num": [2, 24], "getelementnod": 2, "given": [2, 5, 6, 10, 14, 17, 24, 25, 26, 29], "getel": 2, "getinitcondit": 2, "getmpicomm": 2, "getnod": [2, 16, 17, 19, 20, 21, 25, 26, 27], "getnumdependentnod": 2, "getnumel": 2, "getnumnod": 2, "getnumownednod": [2, 16, 17, 19, 20, 21, 24, 25, 26, 27], "getownerrang": 2, "processor": [2, 8, 14, 16, 17, 19, 20, 21, 24, 25, 26, 27], "getreord": 2, "getsimulationtim": 2, "simul": [2, 10], "getvari": [2, 17, 20, 25, 26], "getvarspernod": [2, 16, 17, 19, 20, 21, 24, 25, 26, 27], "per": [2, 16, 17, 19, 20, 21, 24, 25, 26, 27], "when": [2, 10, 12, 14, 23, 24, 29], "tacscreat": 2, "reordervec": 2, "base": [2, 3, 5, 6, 8, 9, 11, 12, 14, 16, 17, 20, 24, 25, 26, 27, 29], "setauxel": 2, "elem": [2, 7, 9, 10, 14], "auxiliari": 2, "setbcvaluesfromvec": 2, "bc": 2, "setbc": 2, "setdependentnod": 2, "ptr": 2, "conn": 2, "connect": [2, 5, 7, 15, 24], "howev": [2, 24, 29], "setelementconnect": 2, "setel": [2, 8], "setinitcondit": [2, 26], "setnod": [2, 16, 17, 19, 20, 21, 25, 26, 27], "setnumthread": 2, "thread": 2, "setsimulationtim": 2, "setvari": [2, 8, 25], "testel": 2, "elemnum": 2, "print_level": 2, "dh": 2, "1e": [2, 3, 8, 14, 16, 17, 19, 20, 25, 26, 27], "06": 2, "rtol": 2, "08": 2, "atol": 2, "implement": [2, 6, 11, 12, 13, 21, 24, 30], "stiff": [2, 3, 5, 8, 9, 17, 20, 25, 26, 29], "variou": [2, 25, 26], "part": [2, 17, 21, 24, 25, 26, 29], "strain": [2, 3, 5, 6, 8, 24], "nodal": [2, 17, 24, 25, 27, 29], "coordin": [2, 5, 14, 16, 17, 19, 20, 21, 24, 25, 26, 27, 29], "print": [2, 7, 10, 16, 17, 19, 20, 21, 24, 25, 26, 27], "level": [2, 13, 17, 20, 25, 26], "testfunct": 2, "func": [2, 8, 9, 10, 16, 17, 19, 20, 21, 25, 26, 27], "interest": [2, 9, 10, 12, 23], "random": 2, "perturb": 2, "should": [2, 3, 6, 7, 9, 12, 14, 15, 16, 17, 19, 20, 21, 24, 25, 26, 27, 29], "randomli": 2, "otherwis": [2, 10, 25], "produc": [2, 9, 10, 29], "unrealist": 2, "central": 2, "compil": 2, "complex": [2, 3, 16, 19, 21, 25, 27], "approxim": [2, 6, 8, 10, 12, 17, 25, 29], "zeroddotvari": 2, "2nd": 2, "zerodotvari": 2, "zerovari": [2, 8, 25], "read": [2, 8, 9, 14, 24], "fem": [2, 7], "scanbdffil": [2, 8], "getnumcompon": [2, 8, 24], "addauxel": 2, "comp_num": 2, "addfunctiondomain": 2, "comp_list": 2, "domain": [2, 6, 10, 14, 24], "createtac": [2, 8], "distribtu": 2, "getbc": 2, "getcomponentdescript": 2, "descript": [2, 9, 14, 16, 17, 20, 24, 25, 26, 27], "getconnect": 2, "getelementdescript": [2, 8], "fname": 2, "scan": 2, "bulk": 2, "elem_typ": 2, "grid": [2, 5, 10, 14, 17, 24, 25, 26], "similar": 2, "manual": [2, 12], "rather": [2, 8], "setboundarycondit": 2, "getelementpartit": 2, "partit": [2, 24, 25], "bcptr": 2, "bcvar": 2, "bcval": 2, "setglobalconnect": 2, "num_nod": [2, 5, 29], "node_ptr": 2, "node_conn": 2, "id_num": 2, "id": [2, 3, 9, 10, 14, 17, 24, 25, 26], "natur": [2, 5, 24], "frequenc": [2, 20, 24, 25], "eigenproblem": 2, "extract": 2, "eigenvector": [2, 17, 20], "mode": [2, 3, 7, 14, 17, 20, 24], "lowest": [2, 17, 20, 24], "forward": [2, 14], "dirk": [2, 26], "abm": 2, "nbg": 2, "inherit": [2, 6, 29], "checkgradi": [2, 8], "self": [2, 7, 8, 16, 17, 19, 20, 21, 25, 26, 27], "doubl": [2, 5, 6, 24, 29], "fd": 2, "csd": 2, "verif": 2, "getadjoint": 2, "int": [2, 3, 5, 6, 14, 16, 17, 19, 20, 21, 24, 25, 26, 27, 29], "step_num": 2, "func_num": 2, "getgradi": 2, "getnumtimestep": [2, 26], "getstat": 2, "time_step": 2, "getxptgradi": 2, "initadjoint": 2, "integrateadjoint": 2, "backward": 2, "forc": [2, 5, 7, 8, 9, 17, 24, 25, 26], "nonlinear": [2, 5, 24, 27, 29], "iterateadjoint": 2, "revers": [2, 14], "loadstat": 2, "prefix": 2, "disk": 2, "string": [2, 16, 17, 19, 20, 21, 24, 25, 26, 27], "argument": [2, 3, 6, 9, 10, 12, 24, 25, 26], "put": 2, "binari": 2, "persistst": 2, "postadjoint": 2, "finish": 2, "calcul": [2, 6, 24], "setabstol": 2, "absolut": [2, 17, 20, 25, 26], "toler": [2, 17, 20, 25, 26, 27], "newton": 2, "setfh5": 2, "tofh5": [2, 8], "rigid": [2, 5, 29], "setfunct": 2, "start_plan": 2, "end_plan": 2, "obtain": 2, "setinitnewtondeltafract": 2, "frac": [2, 7, 29], "setjacassemblyfreq": 2, "freq": 2, "frequent": [2, 26], "setkrylovsubspacemethod": 2, "ksm": [2, 8], "linear": [2, 5, 6, 8, 16, 17, 19, 24, 25, 29], "setmaxnewtonit": 2, "max_newton_it": 2, "setoutputfrequ": 2, "write_freq": 2, "setoutputprefix": 2, "_prefix": 2, "setprintlevel": 2, "tacsintegr": 2, "off": 2, "summari": 2, "setreltol": 2, "rel": [2, 3, 17, 20, 25, 26, 27], "settimeinterv": 2, "tinit": [2, 10, 24, 26], "tfinal": [2, 10, 24, 26], "interv": [2, 26], "setuselapack": 2, "use_lapack": 2, "lapack": [2, 12], "slow": 2, "setuseschurmat": 2, "use_schur_mat": 2, "orderingtyp": [2, 25], "tacsschurmat": [2, 25], "execut": [2, 12], "behavior": [3, 29], "materialproperti": [3, 7, 9, 10, 14, 24], "mechan": [3, 29], "goal": [3, 29], "queri": 3, "plane": [3, 29], "stress": [3, 5, 6, 7, 8, 9, 14, 24, 29], "expans": [3, 29], "describ": [3, 12, 24, 29], "possibl": [3, 24], "appropri": [3, 5, 6, 7, 9, 10, 12, 29], "situat": 3, "rho": [3, 7, 8, 9, 10, 14], "specific_heat": [3, 10], "kappa": [3, 10, 29], "densiti": [3, 7, 8, 9, 10, 14], "specif": [3, 10, 16, 17, 19, 20, 21, 24, 25, 26, 27], "heat": [3, 5, 10, 17, 25, 26], "conduct": [3, 5, 9, 10, 14, 17, 25, 26], "2d": [3, 5, 17, 24, 25, 26], "3d": [3, 5, 6], "kappa1": 3, "kappa2": 3, "kappa3": 3, "nu": [3, 7, 8, 9, 14], "young": [3, 7, 9, 14], "modulu": [3, 7, 8, 9, 14], "poisson": [3, 7, 8, 9, 14], "ratio": [3, 7, 8, 9, 14, 25], "yield": [3, 7, 8, 9, 14], "strength": [3, 6], "e1": 3, "e2": 3, "nu12": 3, "g12": 3, "t1": 3, "t2": 3, "c1": [3, 5, 16, 17, 19, 20, 21, 25, 26, 27], "c2": [3, 5], "s12": 3, "moduli": 3, "e3": 3, "nu13": 3, "nu23": 3, "g13": 3, "g23": 3, "t3": 3, "c3": 3, "s13": 3, "s23": 3, "alpha1": 3, "alpha2": 3, "alpha3": 3, "keyword": [3, 6, 9, 10, 25, 26], "arg": [3, 14, 17, 20, 25, 26], "format": [3, 9, 10, 12, 14, 16, 17, 19, 20, 21, 25, 26, 27], "float": [3, 5, 6, 16, 17, 19, 20, 21, 24, 25, 26, 27], "direct": [3, 5, 6, 7, 8, 11, 12, 13, 23, 24, 29], "coeefici": 3, "shear": [3, 5, 7, 8, 29], "tension": 3, "compress": [3, 16, 19, 21, 27], "generatebdfcard": 3, "pynastran": [3, 14, 24, 25], "card": [3, 9, 24], "mat1": [3, 24], "mat8": [3, 24], "getmaterialproperti": 3, "dictionari": [3, 14, 16, 17, 19, 20, 21, 24, 25, 26, 27], "dict": [3, 14, 16, 17, 19, 20, 21, 24, 25, 26, 27], "getnastranid": 3, "setdens": 3, "setnastranid": 3, "setspecificheat": 3, "orthotropicpli": 3, "ply": [3, 19], "interact": [3, 24], "tsai": 3, "wu": 3, "failur": [3, 6, 7, 9, 10], "criterion": 3, "suppli": [3, 5, 16, 17, 19, 20, 21, 24, 25, 26, 27], "Be": 3, "care": 3, "easili": [3, 12], "fall": 3, "outsid": 3, "accept": [3, 6, 12, 17, 20, 24, 25, 26], "ply_thick": 3, "prop": [3, 7, 9, 10, 14, 24], "max_strain_criterion": 3, "bool": [3, 5, 6, 14, 16, 17, 19, 20, 21, 24, 25, 26, 27], "flag": [3, 5, 6, 8, 12, 14, 16, 17, 19, 20, 21, 24, 25, 26, 27], "max": [3, 7, 8, 17, 20, 25], "fals": [3, 5, 6, 7, 14, 16, 17, 19, 20, 21, 24, 25, 26, 27], "procedur": [3, 5, 9, 10, 17, 20, 24, 25, 26], "buckl": [3, 14, 17, 24], "basicbeamconstitut": [3, 24], "beamconstitut": [3, 5], "timoshenko": [3, 5], "theori": [3, 7, 11, 29], "neg": [3, 6, 24], "sign": [3, 6], "convent": [3, 6], "inertia": [3, 6, 24, 29], "iyz": [3, 6], "z": [3, 5, 6, 8, 29], "da": 3, "moment": [3, 5, 6, 7, 17, 24, 25, 26], "area": 3, "alwai": [3, 5, 6, 9, 14, 29], "posit": [3, 6, 17, 25, 29], "iyi": [3, 6], "cross": [3, 5, 7], "j": [3, 10, 25, 29], "polar": 3, "axi": [3, 5, 6], "ii": 3, "iz": 3, "yz": 3, "ky": 3, "correct": [3, 8, 24, 25], "6": [3, 5, 7, 8, 9, 17, 24, 25, 26], "kz": 3, "bar": 3, "pbar": [3, 24], "bladestiffenedshellconstitut": 3, "shellconstitut": [3, 5], "stiffen": [3, 19, 24], "explicitli": 3, "instead": [3, 16, 17, 19, 20, 21, 24, 25, 26, 27], "smear": 3, "across": [3, 14, 16, 17, 19, 24, 25, 26, 29], "panelpli": 3, "stiffenerpli": 3, "kcorr": [3, 8], "panellength": 3, "length": [3, 7, 10, 17, 19, 21, 24, 25, 26, 29], "dv": [3, 7, 14, 16, 19, 21, 24], "panellengthnum": 3, "lenth": 3, "tell": [3, 9], "treat": [3, 24, 29], "stiffenerpitch": 3, "pitch": [3, 24], "stiffenerpitchnum": 3, "panelthick": 3, "panelthicknum": 3, "numpanelpli": 3, "distinct": 3, "angl": 3, "panelplyangl": 3, "numpi": [3, 5, 7, 8, 9, 10, 12, 16, 17, 19, 20, 21, 24, 25, 26, 27], "ndarrai": [3, 5, 14, 16, 17, 19, 20, 21, 24, 25, 26, 27], "panelplyfrac": 3, "fraction": [3, 19], "panelplyfracnum": 3, "np": [3, 7, 8, 9, 10, 14], "intc": 3, "stiffenerheight": 3, "height": 3, "stiffenerheightnum": 3, "stiffenerthick": 3, "stiffenerthicknum": 3, "numstiffenerpli": 3, "stiffenerplyangl": 3, "stiffenerplyfrac": 3, "stiffenerplyfracnum": 3, "flangefract": 3, "width": [3, 7], "rais": [3, 9, 14], "valueerror": [3, 9, 14], "setksweight": 3, "ksweight": [3, 6, 7, 8, 9, 10, 14], "k": [3, 6, 8, 10, 17, 24, 25, 26, 29], "aggreg": [3, 6, 7, 8, 10], "setpanelplyfractionbound": 3, "pli": 3, "setpanelthicknessbound": 3, "1e20": [3, 16, 19, 21, 27], "setstiffenerheightbound": 3, "setstiffenerpitchbound": 3, "setstiffenerplyfractionbound": 3, "setstiffenerthicknessbound": 3, "compositeshellconstitut": [3, 24], "composit": [3, 11, 12, 19], "lamin": [3, 29], "deform": [3, 29], "fsdt": 3, "ply_list": 3, "layup": 3, "ply_angl": 3, "radian": 3, "toffset": 3, "offset": [3, 24, 29], "distanc": 3, "mid": [3, 29], "measur": [3, 8], "plate": [3, 10, 11, 14, 24, 29], "bottom": 3, "pcomp": [3, 24], "dofspringconstitut": [3, 24], "generalspringconstitut": [3, 5], "tradit": 3, "spring": [3, 5], "dof": [3, 5, 17, 24, 25, 26], "assum": [3, 24, 26, 29], "bush": 3, "pbush": [3, 24], "generalmassconstitut": [3, 5], "translat": 3, "rotat": [3, 5, 17, 25, 26], "m": [3, 7, 8, 9, 10, 14, 21, 24, 26, 29], "8": [3, 5, 12, 24], "9": [3, 5, 10, 14, 24, 29], "11": [3, 12], "12": [3, 10, 17, 20, 25, 26, 27], "13": [3, 12], "14": [3, 17, 20, 25, 26], "16": [3, 5], "17": 3, "18": 3, "19": 3, "flatten": [3, 26], "side": [3, 10, 17, 25, 26], "evalmassmatrix": 3, "6x6": 3, "21": [3, 12], "repres": [3, 10, 14, 17, 20, 25, 26, 29], "uniqu": [3, 17, 24, 25, 26], "isorectanglebeamconstitut": [3, 7], "rectangular": [3, 7], "dimens": 3, "along": [3, 6, 7, 17, 20, 25, 26], "perpindicular": 3, "wnum": 3, "wlb": 3, "wub": 3, "diamet": 3, "tnum": [3, 7, 9, 10, 14], "tlb": 3, "tub": 3, "woffset": 3, "pbarl": 3, "isoshellconstitut": [3, 9, 14, 24], "pshell": [3, 24], "isotubebeamconstitut": 3, "hollow": 3, "circular": 3, "d": [3, 8, 25, 29], "tube": 3, "dnum": 3, "dlb": 3, "dub": 3, "wall": 3, "lamparamshellconstitut": 3, "phasechangematerialconstitut": [3, 5], "solid_prop": 3, "liquid_prop": 3, "liquid": 3, "lh": 3, "latent": 3, "mt": 3, "melt": 3, "planestressconstitut": [3, 5, 10], "util": [3, 23, 29], "pointmassconstitut": 3, "i12": [3, 24], "x1": 3, "x2": 3, "dm": [3, 6], "i11": [3, 24], "x3": 3, "i22": [3, 24], "i33": 3, "i13": 3, "i23": 3, "mnum": 3, "mlb": 3, "mub": 3, "i11num": 3, "i11lb": 3, "i11ub": 3, "i22num": 3, "i22lb": 3, "i22ub": 3, "i33num": 3, "i33lb": 3, "i33ub": 3, "i12num": 3, "i12lb": 3, "i12ub": 3, "i13num": 3, "i13lb": 3, "i13ub": 3, "i23num": 3, "i23lb": 3, "i23ub": 3, "setdrillingregular": 3, "kpenalti": 3, "regular": 3, "drill": 3, "smearedcompositeshellconstitut": 3, "homogen": 3, "continu": [3, 6, 11], "parametr": 3, "stack": 3, "sequenc": [3, 14, 24], "effect": 3, "total": [3, 5, 8, 10, 14, 17, 24, 25, 26, 29], "ply_fract": 3, "thickness_dv_num": 3, "ply_fraction_dv_num": 3, "thickness_lb": 3, "thickness_ub": 3, "ply_fraction_lb": 3, "ply_fraction_ub": 3, "t_offset": 3, "solidconstitut": [3, 5, 24], "topologi": [3, 11], "void": [3, 29], "present": [3, 12], "intermedi": [3, 26], "psolid": [3, 24], "librari": [5, 7, 8, 9, 10], "capabl": [5, 7, 23, 29], "parameter": [5, 29], "elementbasi": 5, "lineartetrahedralbasi": [5, 24], "tetrahedr": 5, "numnod": 5, "quadratictetrahedralbasi": 5, "quadrat": [5, 29], "linearhexabasi": [5, 24], "hexahedr": 5, "quadratichexabasi": 5, "cubichexabasi": 5, "cubic": 5, "64": [5, 12], "linearquadbasi": [5, 10], "quad": 5, "quadraticquadbasi": 5, "cubicquadbasi": 5, "quarticquadbasi": 5, "quartic": 5, "quinticquadbasi": 5, "quintic": 5, "36": 5, "lineartrianglebasi": [5, 10], "triangular": 5, "quadratictrianglebasi": 5, "cubictrianglebasi": 5, "elementmodel": 5, "heatconduction2d": [5, 10], "con": [5, 7, 8, 9, 10, 14], "heatconduction3d": 5, "pcmheatconduction2d": 5, "linearelasticity2d": 5, "linearelasticity3d": [5, 24], "linearthermoelasticity2d": 5, "steady_flag": 5, "linearthermoelasticity3d": 5, "shellnaturaltransform": 5, "shelltransform": 5, "align": [5, 29], "who": 5, "shellrefaxistransform": 5, "project": [5, 6, 24], "surfac": [5, 27, 29], "getrefaxi": 5, "beamrefaxistransform": [5, 7], "beamtransform": 5, "springidentitytransform": 5, "springtransform": 5, "stif": 5, "ident": [5, 24], "ax": [5, 29], "springrefaxistransform": 5, "Not": [5, 21, 24], "coincid": 5, "springrefframetransform": 5, "arbritrari": 5, "frame": [5, 24], "axis1": 5, "axis2": 5, "getrefax": 5, "axis_j": 5, "axis_i": 5, "element2d": [5, 10], "outputel": [5, 24], "plane_stress_el": [5, 24], "physic": [5, 10, 15, 17, 25, 26], "element3d": [5, 24], "solid_el": [5, 24], "quad4shel": [5, 9, 14, 24], "emploi": 5, "mix": 5, "interpol": 5, "tensori": 5, "mitc": [5, 29], "avoid": 5, "lock": [5, 29], "beam_or_shell_el": [5, 24], "equival": [5, 24], "quad9shel": [5, 24], "quad16shel": 5, "tri3shel": [5, 24], "quad4nonlinearshel": 5, "geometr": [5, 24, 29], "quad9nonlinearshel": 5, "quad16nonlinearshel": 5, "tri3nonlinearshel": 5, "quad4nonlinearthermalshel": 5, "quad9nonlinearthermalshel": 5, "quad16nonlinearthermalshel": 5, "tri3nonlinearthermalshel": 5, "quad4thermalshel": [5, 24], "quad9thermalshel": 5, "quad16thermalshel": 5, "tri3thermalshel": 5, "beam2": [5, 7, 24], "beam3": 5, "beam2modrot": 5, "moder": [5, 29], "beam3modrot": 5, "rbe2": [5, 24], "arbitrari": 5, "independ": [5, 7], "degre": [5, 9, 10, 12, 14, 16, 17, 19, 20, 21, 25, 26, 27, 29], "freedom": [5, 9, 10, 14, 16, 17, 19, 20, 21, 25, 26, 27, 29], "six": 5, "motion": 5, "singl": [5, 6, 10, 24, 26, 29], "n_dep": 5, "rigid_el": [5, 24], "constrained_dof": 5, "attach": [5, 16, 17, 20, 25, 26, 27], "classmethod": [5, 16, 17, 19, 20, 21, 24, 25, 26, 27], "setscalingparamet": 5, "1000": [5, 7, 8, 17, 20, 25, 26], "lagrang": [5, 14, 17, 20, 24, 25, 26, 29], "formul": [5, 16, 24, 27], "rbe": [5, 17, 20, 25, 26], "artifici": [5, 17, 20, 25, 26, 29], "constant": [5, 6, 7, 17, 20, 25, 26], "precondition": [5, 17, 20, 25, 26], "stabil": [5, 17, 20, 25, 26], "rbe3": [5, 24], "power": 5, "unlik": 5, "rbar": 5, "doesn": [5, 24], "addit": [5, 9, 12, 17, 25, 29], "n_indep": 5, "dep_constrained_dof": 5, "eleemnt": 5, "indep_constrained_dof": 5, "massel": [5, 24], "mass_el": [5, 24], "springel": [5, 24], "spring_el": [5, 24], "assembl": [6, 8, 9, 14, 16, 17, 19, 20, 21, 23, 24, 25, 26, 27, 29], "ever": [6, 29], "handl": [6, 9, 14, 17, 20, 25, 26, 29], "averagetemperatur": 6, "spatial": [6, 29], "averag": [6, 17, 25, 26], "volum": [6, 14, 24, 27], "centerofmass": 6, "center": [6, 9, 14, 17, 25, 26], "give": [6, 10, 29], "transient": [6, 10, 24, 26, 29], "cg": 6, "onto": [6, 29], "integr": [6, 24, 26, 29], "displac": [6, 8, 17, 24, 25], "setcompliancetyp": 6, "compliance_typ": 6, "enclosedvolum": 6, "enclos": [6, 14, 24, 27], "ksdisplac": 6, "kreisselmei": 6, "steinhaus": 6, "over": [6, 8, 10, 17, 23, 25, 26, 29], "smooth": 6, "80": 6, "ftype": 6, "str": [6, 14, 16, 17, 19, 20, 21, 24, 25, 26, 27], "discret": [6, 7, 26], "pnorm": 6, "insensit": [6, 16, 17, 19, 20, 21, 24, 25, 26, 27], "necessari": [6, 9, 12, 24, 26], "either": [6, 10, 12, 29], "consid": [6, 9, 29], "threshold": 6, "mean": 6, "least": 6, "exceed": [6, 10], "impli": [6, 24], "safetyfactor": [6, 7, 14], "safeti": 6, "kstemperatur": [6, 10], "momentofinertia": 6, "origin": [6, 11, 24], "i_out": 6, "vec1": 6, "i_tensor": 6, "vec2": 6, "tensor": 6, "ixx": 6, "ixi": 6, "ixz": 6, "iyx": 6, "izx": 6, "izi": 6, "izz": 6, "direction1": 6, "direction2": 6, "aboutcm": 6, "whether": [6, 14, 17, 24, 25, 26], "taken": [6, 29], "structuralmass": [6, 7, 8, 9, 14], "script": [7, 9, 10, 12], "demonstr": [7, 8, 10], "act": [7, 9], "wrapper": [7, 17, 20, 24, 25, 26], "openmdao": [7, 14, 15], "cantilev": 7, "tip": 7, "100": [7, 8, 9, 10, 14, 16, 19, 21, 24, 27], "dictat": 7, "By": [7, 10, 17, 24, 25], "realiz": 7, "spanwis": 7, "sigma": [7, 8, 14, 17, 20, 24], "analyt": 7, "sqrt": 7, "6v": 7, "cdot": 7, "l": [7, 29], "sigma_i": 7, "o": [7, 8, 10, 29], "matplotlib": 7, "pyplot": 7, "plt": [7, 9, 10, 12], "api": 7, "om": 7, "multipoint": [7, 14], "scenario_structur": 7, "scenariostructur": 7, "tacsbuild": [7, 15], "bdf_file": 7, "path": [7, 10, 12], "join": [7, 10], "dirnam": [7, 10], "__file__": [7, 10], "beam_opt": 7, "05": 7, "2500": [7, 8, 9, 14], "kg": [7, 8, 9, 10, 14], "70": 7, "0e9": 7, "pa": [7, 8, 9, 14], "350e6": [7, 8], "v": 7, "1e3": 7, "elemcallback": [7, 9, 10, 14], "callback": [7, 9, 10, 14], "def": [7, 8, 9, 10, 14, 24], "element_callback": [7, 14], "dvnum": [7, 9, 10, 24], "compid": [7, 9, 10, 16, 17, 19, 20, 21, 24, 25, 26, 27], "compdescript": [7, 9, 10, 24], "elemdescript": [7, 9, 10, 14, 24], "specialdv": [7, 9], "kwarg": [7, 9, 10, 14, 17, 20, 24, 25, 26], "everi": [7, 8, 9, 10, 14, 21, 24, 26], "group": [7, 11, 14, 16, 19, 21, 23, 27], "refaxi": 7, "transform": [7, 9, 14], "problem_setup": [7, 14], "scenario": [7, 14], "staticproblem": [7, 9, 22, 24], "modifi": [7, 12, 14, 16, 17, 19, 20, 21, 24, 25, 26, 27, 29], "eval": [7, 14, 25, 26], "our": [7, 9, 10], "kn": [7, 9], "scenario_nam": [7, 14], "fea_assembl": [7, 14], "helper": 7, "builder": [7, 14, 15], "addfunct": [7, 9, 10, 14, 17, 20, 25, 26], "ks_vmfailur": [7, 9, 14], "addloadtonod": [7, 9, 17, 25, 26], "101": [7, 24], "nastranord": [7, 9, 17, 24, 25, 26], "essenti": [7, 24], "To": [7, 9, 10, 12, 25, 29], "instanti": [7, 10], "feed": 7, "structuralscenario": 7, "beammodel": 7, "struct_build": 7, "mesh_fil": [7, 14], "write_solut": [7, 14], "dv_arrai": 7, "get_initial_dv": [7, 14], "control": 7, "add_subsystem": 7, "indepvarcomp": 7, "promot": 7, "add_output": 7, "dv_struct": 7, "get_mesh_coordinate_subsystem": [7, 14], "mphys_add_scenario": 7, "tip_shear": 7, "mphys_connect_scenario_coordinate_sourc": 7, "struct": [7, 16, 17, 19, 20, 21, 25, 26, 27], "At": [7, 12, 29], "scipyoptimizedriv": 7, "driver": 7, "prob": 7, "declar": [7, 10], "add_design_var": 7, "001": [7, 17, 20, 25, 26], "scaler": 7, "add_object": 7, "add_constraint": 7, "debug_print": 7, "obj": 7, "nl_con": 7, "maxit": 7, "slsqp": 7, "n2": 7, "represent": 7, "show_brows": 7, "outfil": 7, "beam_opt_n2": 7, "html": 7, "run_driv": 7, "out": [7, 8, 9, 10, 14, 16, 17, 19, 20, 21, 24, 25, 26, 27, 29], "screen": 7, "termin": [7, 12], "successfulli": 7, "exit": 7, "5534716448382722": 7, "138": 7, "372": 7, "post": [7, 9, 10], "commonli": [7, 17, 25, 26], "convert": [7, 9, 10, 12, 16, 17, 19, 20, 21, 25, 26, 27], "tecplot": [7, 9, 10, 12, 16, 27], "paraview": [7, 9, 10, 12], "f5totec": [7, 9, 10, 12], "f5tovtk": [7, 9, 10, 12], "bdf_out": 7, "beam_sol": 7, "write_bdf": 7, "plot": 7, "compar": 7, "against": 7, "expect": [7, 24], "get_val": 7, "x_struct0": 7, "get_remot": 7, "t_opt": 7, "m_opt": 7, "t_exact": 7, "legend": 7, "ylabel": 7, "xlabel": 7, "titl": 7, "profil": 7, "show": [7, 9, 10, 24], "enforc": [8, 19, 21, 24, 29], "quadratur": [8, 29], "less": [8, 10], "mpi4pi": [8, 10, 12, 16, 17, 19, 20, 21, 24, 25, 26, 27], "ucrm_vonmisesmassmin": 8, "pyparoptproblem": 8, "__init__": 8, "bdf_name": 8, "meshload": [8, 16, 17, 19, 20, 21, 24, 25, 26, 27], "struct_mesh": 8, "70e9": [8, 9, 14], "min_thick": 8, "002": 8, "max_thick": 8, "02": 8, "loop": [8, 10, 26], "num_compon": 8, "descriptor": 8, "index": [8, 10, 11, 16, 17, 19, 20, 21, 24, 25, 26, 27], "design_variable_index": 8, "isofsdt": 8, "cquad": 8, "cquadr": [8, 10, 24], "cquad4": [8, 9, 10, 14, 24], "mitcshel": 8, "component_num": 8, "loader": [8, 24], "50": [8, 10], "force_arrai": 8, "getarrai": 8, "uniform": [8, 17, 25, 26], "re": [8, 25], "dfdu": 8, "pc": 8, "subspac": [8, 17, 20, 25], "restart": [8, 25], "gmre": [8, 25], "mass_scal": 8, "mm": [8, 9, 14], "meter": 8, "thickness_scal": 8, "nvar": 8, "ncon": 8, "super": 8, "comm_self": 8, "inequ": 8, "dens": 8, "both": [8, 12, 21, 24, 25, 29], "setinequalityopt": 8, "dense_ineq": 8, "use_low": 8, "use_upp": 8, "visual": [8, 9, 10, 16, 27, 29], "extra": [8, 24], "py_shel": 8, "iter_count": 8, "getvarsandbound": 8, "xval": 8, "dtype": [8, 16, 17, 19, 20, 21, 24, 25, 26, 27], "xlb": [8, 16, 17, 19, 20, 21, 24, 25, 26, 27], "xub": [8, 16, 17, 19, 20, 21, 24, 25, 26, 27], "evalobjcon": 8, "fail": 8, "varaibl": 8, "fval": 8, "fobj": 8, "von": 8, "mise": 8, "evalobjcongradi": 8, "gx": 8, "evaldvsen": 8, "evalsvsen": [8, 17], "writetofil": 8, "ucrm_it": 8, "pyparopt": 8, "tacs_comm": 8, "crm_box_2nd": 8, "crm_opt": 8, "max_lbfg": 8, "opt": 8, "bfg": 8, "setoutputfil": 8, "setarmijoparam": 8, "zw": 8, "zl": 8, "zu": 8, "getoptimizedpoint": 8, "advanc": [9, 11], "nomin": 9, "1m": 9, "flat": 9, "perimet": 9, "compris": 9, "900": 9, "submodul": 9, "purpos": [9, 16, 17, 19, 20, 24, 25, 26, 27], "bdffile": [9, 10, 25], "feaassembl": [9, 10], "automat": [9, 24], "itself": [9, 29], "long": 9, "exist": [9, 24], "done": [9, 10, 24], "464": [9, 14], "0e6": [9, 14], "tplate": [9, 10, 14], "005": [9, 14], "naturalshelltransform": [9, 14], "accord": [9, 14], "elemlist": [9, 10], "els": [9, 10, 14], "catch": [9, 14], "unexpect": [9, 14], "f": [9, 14, 17, 25, 26], "pretti": 9, "those": [9, 10, 24], "createstaticproblem": [9, 24, 25], "staticprob": 9, "point_forc": 9, "ve": [9, 10], "accomplish": 9, "uniniti": [9, 10, 14], "minu": 9, "let": [9, 14], "vonmis": 9, "select": [9, 10, 16, 17, 19, 24, 25, 26, 27, 29], "481": 9, "1e4": 9, "evalfunctionssen": [9, 10, 17, 20, 25, 26], "funcssen": [9, 10, 16, 17, 19, 20, 21, 25, 26, 27], "further": [9, 10], "writesolut": [9, 10, 17, 20, 25, 26], "point_force_000": 9, "runscript": [9, 10], "vtk": [9, 10, 12], "cell": 10, "undergo": 10, "cylindr": 10, "embed": 10, "corner": 10, "releas": [10, 12], "larg": [10, 11], "amount": 10, "nearest": 10, "adjac": [10, 16, 24], "prevent": 10, "go": [10, 12], "cascad": 10, "figur": 10, "label": [10, 14], "hand": [10, 17, 25, 26], "multipl": [10, 14, 24], "easi": [10, 24], "enabl": [10, 12, 29], "previou": 10, "three": [10, 11], "item": [10, 24], "pprint": 10, "mateteri": 10, "propertiesfor": 10, "battery_pack": 10, "065": 10, "battery_rho": 10, "1460": 10, "battery_kappa": 10, "battery_cp": 10, "880": 10, "alum_rho": 10, "2700": 10, "alum_kappa": 10, "204": 10, "alum_cp": 10, "883": 10, "globaldv": [10, 24], "basi": [10, 17, 25, 26], "elif": [10, 14], "ctria3": [10, 14, 24], "ctriar": [10, 24], "recogn": 10, "append": [10, 14, 24], "transientproblem": [10, 22, 24], "numstep": [10, 24, 26], "createtransientproblem": [10, 24, 26], "flux": 10, "gettimestep": [10, 26], "selectcompid": [10, 14, 17, 24, 25, 26], "addloadtocompon": [10, 17, 25, 26], "just": [10, 12], "specifii": 10, "spread": 10, "sinc": [10, 11, 14, 24, 25, 26, 29], "transfer": [10, 14], "6000": 10, "indic": [10, 17, 20, 24, 25, 26], "watt": 10, "000": 10, "joul": 10, "timestep": [10, 26], "enumer": 10, "00": [10, 24], "face": [10, 17, 24, 25, 26, 27], "closest": 10, "opert": 10, "event": 10, "wa": [10, 11], "withing": 10, "compids_00": 10, "compids_01": 10, "adjec": 10, "compids_04": 10, "04": [10, 24], "With": [10, 29], "ks_temp_corn": 10, "ks_temp_adjac": 10, "ks_temp_diagon": 10, "transient_000_000": 10, "transient_000_050": 10, "050": 10, "transient_000_": 10, "anim": 10, "what": [10, 24], "look": [10, 12, 16, 17, 19, 20, 21, 25, 26, 27], "toolkit": 11, "primarili": 11, "box": 11, "recent": 11, "extend": [11, 12, 29], "dimension": 11, "2010": 11, "multidisciplinari": [11, 14], "georgia": 11, "tech": 11, "lab": 11, "univers": 11, "michigan": 11, "anaconda": 11, "mphy": [11, 13, 14], "batteri": 11, "pack": 11, "runawai": 11, "director": [11, 12, 30], "core": 11, "search": 11, "page": 11, "readili": 12, "maco": 12, "window": 12, "recommend": [12, 17, 20, 24, 25, 26], "try": 12, "access": [12, 13], "virtual": [12, 29], "vm": 12, "subsystem": [12, 14], "docker": 12, "mdolab": 12, "public": 12, "imag": 12, "conda": 12, "platform": 12, "start": [12, 24, 26], "n": [12, 14, 16, 17, 19, 20, 21, 24, 25, 26, 27, 29], "activ": 12, "forg": 12, "smdogroup": 12, "bla": 12, "meti": 12, "cython": [12, 13, 16, 17, 19, 20, 21, 25, 26, 27], "suitespars": 12, "amd": 12, "tecio": 12, "fh5": 12, "compat": [12, 14, 24], "clone": 12, "git": 12, "repositori": 12, "copi": [12, 17, 25, 26], "makefil": 12, "info": [12, 14, 24], "edit": 12, "tacs_dir": 12, "cxx": 12, "lapack_lib": 12, "metis_dir": 12, "suitesparse_dir": 12, "tecio_dir": 12, "toolbox": 12, "mind": 12, "divid": [12, 17, 24, 25, 26, 29], "categori": 12, "checkout": 12, "com": 12, "sure": 12, "teciosrc": 12, "teciompisrc": 12, "cfg": 12, "wish": [12, 17, 25, 26], "extern": [12, 16, 17, 20, 24, 25, 26, 27], "inde": 12, "alreadi": [12, 17, 24, 25, 26], "simpli": 12, "adjust": 12, "fedoraproject": 12, "org": 12, "lookasid": 12, "pkg": 12, "gz": 12, "5465e67079419a69e0116de24fce58f": 12, "cmake": 12, "drtimothyaldendavi": 12, "www": 12, "boost": 12, "sudo": 12, "apt": 12, "libboost": 12, "dev": 12, "debian": 12, "someth": 12, "No": [12, 17, 20, 24, 26], "rule": [12, 24], "target": 12, "stop": 12, "leav": 12, "somedirectori": 12, "x86_64": 12, "subdirectori": 12, "bash": 12, "f5convert": 12, "f5clean": 12, "clean": 12, "date": 12, "remov": 12, "h": 12, "line": [12, 24, 29], "sub": [12, 25, 26], "numer": 12, "pip": 12, "shortcut": 12, "older": 12, "miss": [12, 24, 27], "libtac": 12, "tree": 12, "newer": 12, "therefor": [12, 24, 29], "publicli": 13, "member": 13, "wrap": 13, "document": 13, "around": 14, "assembler_setup": 14, "abc": [14, 24], "callabl": [14, 24], "prior": 14, "elem_callback": 14, "dv_num": 14, "comp_id": 14, "comp_descript": 14, "elem_descript": 14, "special_dv": 14, "counter": [14, 16, 17, 20, 24, 25, 26, 27], "propid": [14, 24], "comment": [14, 24], "belong": [14, 24], "ctetra": [14, 24], "global_dv": 14, "mani": [14, 24], "being": [14, 17, 25, 26], "baseproblem": 14, "constraint_setup": 14, "seri": 14, "buckling_setup": 14, "pytacs_opt": 14, "check_parti": 14, "partial": [14, 17, 24, 25, 29], "without": [14, 29], "still": 14, "meaning": [14, 16, 19, 21, 25, 26, 27], "weather": 14, "turn": 14, "thermostructur": 14, "separate_mass_dv": 14, "lump": 14, "struct_dv": 14, "split": [14, 17, 24, 25, 26, 29], "10401": 14, "10402": 14, "assignmassdv": [14, 24], "engine_mass": 14, "fuel_mass": 14, "elem_list": 14, "setopt": [14, 16, 17, 19, 20, 21, 24, 25, 26, 27], "outputdir": [14, 16, 17, 20, 25, 26, 27], "skip": [14, 24], "concentr": [14, 24], "ngroup": [14, 24], "struct_mass": 14, "maneuver_2_5g": 14, "maneuver_m1g": 14, "graviti": [14, 17, 25, 26], "81": 14, "addinertialload": [14, 17, 25, 26], "constr": 14, "createvolumeconstraint": [14, 24, 27], "addconstraint": [14, 16, 19, 21, 27], "5g": 14, "maneuv": 14, "createbucklingproblem": [14, 17, 24], "numeig": [14, 17, 20, 24], "l2converg": [14, 17, 20, 25, 26], "l2convergencerel": [14, 17, 20, 25, 26], "xfer": 14, "get_coupling_group_subsystem": 14, "couplinggroup": 14, "get_pre_coupling_subsystem": 14, "get_post_coupling_subsystem": 14, "get_ndof": 14, "ndof": 14, "get_number_of_nod": 14, "get_dv_bound": 14, "add_design_vari": 14, "get_dv_scal": 14, "get_ndv": 14, "proc": [14, 21, 24, 25], "get_solv": 14, "get_fea_assembl": 14, "get_tagged_indic": 14, "tag": 14, "grid_id": 14, "standard": 15, "high": 15, "fidel": 15, "multiphys": 15, "conveni": [15, 24, 29], "disciplinari": 15, "doc": 15, "detail": [15, 23], "discuss": [15, 23], "constrain": [16, 24, 27], "dv_i": [16, 24], "dv_j": [16, 24], "abruptli": [16, 24], "delta_t": [16, 19], "t_i": 16, "t_j": 16, "createadjacencyconstraint": [16, 24], "creation": [16, 17, 20, 24, 25, 26, 27], "printopt": [16, 17, 19, 20, 21, 24, 25, 26, 27], "writer": [16, 17, 20, 25, 26, 27], "numbersolut": [16, 17, 20, 25, 26, 27], "outputview": [16, 17, 19, 20, 21, 25, 26, 27], "intracomm": [16, 17, 19, 20, 21, 24, 25, 26, 27], "tacstofh5": [16, 17, 19, 20, 21, 25, 26, 27], "postprocess": [16, 17, 19, 20, 21, 25, 26, 27], "pymeshload": [16, 17, 19, 20, 21, 25, 26, 27], "connam": [16, 19, 21, 27], "dvindex": [16, 21], "evalconstraint": [16, 19, 21, 27], "evalcon": [16, 19, 21, 27], "ignoremiss": [16, 17, 19, 20, 21, 25, 26, 27], "supress": [16, 17, 19, 20, 21, 25, 26, 27], "valid": [16, 17, 19, 20, 21, 25, 26, 27], "caution": [16, 17, 19, 20, 21, 25, 26, 27, 29], "adjconstraint": [16, 21], "le_spar": [16, 19, 21, 24, 27], "c1_le_spar": [16, 19, 21, 27], "12354": [16, 17, 19, 20, 25, 26, 27], "evalconstraintssen": [16, 19, 21, 27], "derivit": [16, 17, 19, 20, 21, 25, 26, 27], "50x242": [16, 19, 21, 27], "spars": [16, 19, 21, 25, 27], "float64": [16, 17, 19, 20, 21, 24, 25, 26, 27], "writevisu": [16, 27], "basenam": [16, 17, 20, 25, 26, 27], "filenam": [16, 17, 20, 24, 25, 26, 27], "again": [16, 17, 20, 25, 26, 27, 29], "getconstraintbound": [16, 19, 21, 27], "tupl": [16, 19, 21, 25, 27], "conbound": [16, 19, 21, 27], "tacsconstraint": [16, 19, 21, 27], "getconstraintkei": [16, 19, 21, 27], "kei": [16, 17, 19, 20, 21, 24, 25, 26, 27, 29], "far": [16, 17, 19, 20, 21, 25, 26, 27], "getconstraints": [16, 19, 21, 27], "consiz": [16, 19, 21, 27], "funconsizesc": [16, 19, 21, 27], "coord": [16, 17, 19, 20, 21, 24, 25, 26, 27], "getnumcoordin": [16, 17, 19, 20, 21, 25, 26, 27], "ncoord": [16, 17, 19, 20, 21, 25, 26, 27], "getnumdesignvar": [16, 17, 19, 20, 21, 24, 25, 26, 27], "ndv": [16, 17, 19, 20, 21, 24, 25, 26, 27], "nnode": [16, 17, 19, 20, 21, 24, 25, 26, 27, 29], "getnumvari": [16, 17, 19, 20, 21, 25, 26, 27], "nstate": [16, 17, 19, 20, 21, 25, 26, 27], "getopt": [16, 17, 19, 20, 21, 24, 25, 26, 27], "vpn": [16, 17, 19, 20, 21, 24, 25, 26, 27], "printdefaultopt": [16, 17, 19, 20, 21, 24, 25, 26, 27], "nice": [16, 17, 19, 20, 21, 24, 25, 26, 27], "stdout": [16, 17, 19, 20, 21, 24, 25, 26, 27], "varnam": [16, 17, 19, 20, 21, 25, 26, 27], "xpt": [16, 17, 19, 20, 21, 24, 25, 26, 27, 29], "setvarnam": [16, 17, 19, 20, 21, 25, 26, 27], "pyopt": [16, 17, 19, 20, 21, 25, 26, 27], "addvargroup": [16, 17, 19, 20, 21, 25, 26, 27], "relev": [17, 20, 25, 26], "converg": [17, 20, 25, 26], "l2": [17, 20, 25, 26], "norm": [17, 20, 25, 26, 29], "rbestiffnessscalefactor": [17, 20, 25, 26], "rbeartificialstiff": [17, 20, 25, 26], "subspaces": [17, 20, 25], "krylov": [17, 20, 25], "nrestart": [17, 20, 25], "reset": [17, 20], "suppress": [17, 20, 25, 26], "printtim": [17, 20, 24, 25, 26], "printlevel": [17, 20, 26], "major": [17, 20, 26], "minor": [17, 20, 26], "setvalnam": [17, 20], "valnam": [17, 20], "getnumeig": [17, 20], "request": [17, 20, 25, 26], "funcnam": [17, 20, 25, 26], "funchandl": [17, 20, 25, 26], "NOT": [17, 20, 24], "FOR": [17, 20], "evalfunc": [17, 20, 25, 26], "eigsm": [17, 20], "c1_eigsm": [17, 20], "234": [17, 20, 25, 26], "89": [17, 20, 25, 26], "59": [17, 20, 25, 26], "averageload": [17, 25, 26], "remain": [17, 25, 26], "throughout": [17, 25, 26, 29], "would": [17, 25, 26], "1d": [17, 25, 26], "numcompid": [17, 25, 26], "uniformli": [17, 25, 26], "evenli": [17, 24, 25, 26], "unit": [17, 25, 26, 29], "necessarili": [17, 25, 26], "interpret": [17, 24, 25, 26], "qdot": [17, 25, 26], "rate": [17, 25, 26, 29], "fx": [17, 25, 26], "fy": [17, 25, 26], "fz": [17, 25, 26], "mx": [17, 25, 26], "my": [17, 25, 26], "mz": [17, 25, 26], "nodeid": [17, 24, 25, 26], "numnodeid": [17, 25, 26], "signal": [17, 24, 25, 26], "addloadtorh": [17, 25, 26], "fappli": [17, 25, 26], "u": [17, 25, 26, 29], "addtractiontocompon": [17, 25, 26], "faceindex": [17, 25, 26], "addtractiontoel": [17, 25, 26], "elemid": [17, 25, 26], "addpressuretocompon": [17, 25, 26], "fuel": [17, 24, 25, 26, 27], "addpressuretoel": [17, 25, 26], "presur": [17, 25, 26], "scalar": [17, 25, 26, 29], "inertiavector": [17, 25, 26], "inerti": [17, 25, 26], "due": [17, 25, 26, 29], "acceler": [17, 25, 26], "entir": [17, 24, 25, 26], "addcentrifugalload": [17, 25, 26], "omegavector": [17, 25, 26], "rotcent": [17, 25, 26], "firstord": [17, 25], "centrifug": [17, 25, 26], "veloc": [17, 25, 26], "rotor": [17, 25, 26], "roll": [17, 25, 26], "aircraft": [17, 25, 26], "rad": [17, 20, 24, 25, 26], "addloadfrombdf": [17, 25, 26], "loadid": [17, 25, 26], "grav": [17, 24, 25, 26], "rforc": [17, 24, 25, 26], "pload2": [17, 24, 25, 26], "pload4": [17, 24, 25, 26], "identif": [17, 25, 26], "zeroload": [17, 25, 26], "fext": [17, 25, 26], "u0": 17, "ex": [17, 24, 25], "eigval": [17, 20], "xptsenslist": [17, 25], "dvsenslist": [17, 25], "svsenslist": [17, 25], "intent": [17, 20, 25, 26], "program": [17, 20, 25, 26], "logic": [17, 20, 24, 25, 26], "getfunctionkei": [17, 20, 25, 26], "writesensfil": [17, 20, 25, 26], "sen": [17, 20, 25, 26], "tacs_aim": [17, 20, 25, 26], "adjacencyconstraint": [18, 19, 21, 24], "dvconstraint": [18, 24], "panellengthconstraint": [18, 24], "volumeconstraint": [18, 24], "a_0": [19, 24], "dv_0": [19, 24], "a_1": [19, 24], "dv_1": [19, 24], "a_n": [19, 24], "dv_n": [19, 24], "As": [19, 24], "pf_0": 19, "pf_45": 19, "pf_m45": 19, "pf_90": 19, "Or": 19, "blade": [19, 24], "too": [19, 24], "much": 19, "st": 19, "pt": [19, 29], "createdvconstraint": [19, 24], "dvindic": 19, "dvweight": 19, "One": [19, 24], "modal": [20, 24], "createmodalproblem": [20, 24], "squar": [20, 24], "eigenfrequ": 20, "author": 21, "alasdair": 21, "christison": 21, "grai": 21, "bladestiffenedshel": 21, "createpanellengthconstraint": [21, 24], "325": 21, "1983645": 21, "1415926": 21, "3x": 21, "modalproblem": [22, 24], "bucklingproblem": [22, 24], "offer": 23, "benefit": 23, "robust": 23, "pars": [23, 24], "fewer": 23, "keep": 23, "track": 23, "layer": 24, "hook": 24, "nearli": 24, "custom": 24, "deal": 24, "dr": 24, "kenwai": 24, "gkk": 24, "brook": 24, "histori": 24, "printdebug": 24, "debug": [24, 25], "infer": 24, "element_non": 24, "scalar_2d_el": 24, "scalar_3d_el": 24, "pcm_element": 24, "writeconnect": 24, "writenod": 24, "writedisplac": 24, "writestrain": 24, "writestress": 24, "writeextra": 24, "writeload": 24, "writecoordinatefram": 24, "familysepar": 24, "famili": 24, "charact": 24, "condens": 24, "runtim": 24, "conm1": 24, "conm2": 24, "thumb": 24, "equivel": 24, "mat2": 24, "prod": [24, 25], "cquad9": 24, "cbar": 24, "crod": 24, "chexa": 24, "cbush": 24, "desvar": 24, "counterpart": 24, "might": 24, "organ": 24, "space": 24, "wing_spar": 24, "seg": 24, "3600": 24, "3310": 24, "3797": 24, "731": 24, "3798": 24, "732": 24, "3799": 24, "733": 24, "3800": 24, "734": 24, "3801": 24, "735": 24, "3802": 24, "736": 24, "97": 24, "3262": 24, "3882": 24, "782": 24, "3601": 24, "98": 24, "3881": 24, "781": 24, "99": 24, "3875": 24, "3888": 24, "3885": 24, "3874": 24, "3887": 24, "3884": 24, "3892": 24, "3899": 24, "3896": 24, "3891": 24, "102": 24, "3898": 24, "3895": 24, "replac": 24, "referenc": 24, "rod_1": 24, "3320": 24, "rod_2": 24, "6600": 24, "6310": 24, "6320": 24, "hmname": 24, "quot": 24, "hwcolor": 24, "28": 24, "rib2": 24, "29": 24, "scalelist": 24, "tripan": 24, "len": 24, "addglobaldv": 24, "affect": 24, "cleanli": 24, "intern": [24, 27], "increment": 24, "worri": 24, "elemcallbackfunct": 24, "unbound": 24, "getglobaldv": 24, "getglobaldvkei": 24, "globaldvkei": 24, "getglobaldvnum": 24, "globaldvnum": 24, "gettotalnumglobaldv": 24, "eid": 24, "dvname": 24, "exclud": 24, "includebound": 24, "includeop": 24, "excludeop": 24, "projectvector": 24, "idea": 24, "ncomp": 24, "subgroup": 24, "oper": 24, "boil": 24, "down": 24, "subset": 24, "attempt": 24, "effici": 24, "critic": 24, "simplest": 24, "componentid": 24, "11th": 24, "fifth": 24, "probabl": 24, "advis": 24, "similarli": 24, "except": 24, "subtract": 24, "le_rib": 24, "convex": 24, "hull": 24, "concav": 24, "smaller": 24, "accumul": 24, "skin": 24, "trail": 24, "u_skin": 24, "te_spar": 24, "sort": 24, "alphabet": 24, "sequenti": 24, "includeopt": 24, "AND": 24, "getbdfinfo": 24, "bdfinfo": 24, "getcompnam": 24, "getglobalnodeidsforcomp": 24, "getlocalnodeidsforcomp": 24, "last": 24, "later": [24, 29], "getorigdesignvar": 24, "were": 24, "asbvec": 24, "gettotalnumdesignvar": 24, "getorignod": 24, "getnumownedmultipliernod": 24, "nmultnod": 24, "getlocalmultipliernodeid": 24, "var": [24, 25, 26, 29], "applybcstovec": 24, "identifi": 24, "createtacsprobsfrombdf": 24, "structproblem": 24, "predefin": 24, "tacsproblem": 24, "loadcas": [24, 25], "tload1": 24, "tload2": 24, "dload": 24, "sol": 24, "109": 24, "103": 24, "writebdf": 24, "actual": [24, 25, 26], "close": [24, 27], "manifold": [24, 27], "water": [24, 27], "tight": [24, 27], "enough": [24, 27], "wingbox": [24, 27], "vol_w": [24, 27], "vol_fuel": [24, 27], "piec": [25, 26], "ksmsolver": 25, "natural_ord": 25, "rcm_order": 25, "nd_order": 25, "tacs_amd_ord": 25, "multicolor_ord": 25, "pcfilllevel": 25, "pcfillratio": 25, "flexibl": [25, 29], "usemonitor": 25, "monitor": 25, "monitorfrequ": 25, "setloadscal": 25, "reason": [25, 26], "cl_mass": [25, 26], "c1_mass": [25, 26], "adjointlist": 25, "getresidu": 25, "getjacobian": 25, "scipi": 25, "bsr_matric": 25, "b": 25, "tacsparallelmat": 25, "bsr_matrix": 25, "addtransposejacvecproduct": 25, "solveadjoint": 25, "bvec": 25, "writeloadtobdf": 25, "loadcaseid": 25, "nastaran": 25, "timeintegr": 26, "integrationord": 26, "march": 26, "jacassemblyfreq": 26, "reassembl": 26, "slice": 26, "getnumtimestag": 26, "stage": 26, "multi": 26, "numstag": 26, "gettimestag": 26, "timestag": 26, "applic": 26, "udotdot": 26, "dvar": 26, "ddvar": 26, "prepiterativesolv": 26, "prepar": 26, "aeroelast": 26, "tightli": 26, "fluid": 26, "outer": 26, "multistag": 26, "numvarspernod": 26, "tighli": 26, "externalcfdsolv": 26, "dstate": 26, "ddstate": 26, "volchecktol": 27, "closur": 27, "volconstraint": 27, "c1_wing": 27, "captur": 29, "via": 29, "mathbf": 29, "induc": 29, "exact": 29, "left": 29, "q": 29, "undeform": 29, "tempor": 29, "focu": 29, "dot": 29, "omega": 29, "ddot": 29, "concret": 29, "explan": 29, "_": 29, "m_": 29, "mathbb": 29, "xi": 29, "lagrangian": 29, "dfrac": 29, "dt": 29, "engeri": 29, "sum_": 29, "w_": 29, "t_": 29, "n_": 29, "xi_": 29, "0i": 29, "accur": 29, "predict": 29, "quaternion": 29, "epsilon": 29, "eta": 29, "lambda": 29, "satisifi": 29, "construct": 29, "ref": 29, "perpendicular": 29, "centerlin": 29, "tangent": 29, "hat": 29, "preserv": 29, "zeta": 29, "bmatrix": 29, "xi_1": 29, "xi_2": 29, "eta_": 29, "ot": 29, "quantiti": 29, "introduc": 29, "systen": 29, "deflect": 29, "never": 29, "approx": 29, "zeroth": 29, "orthogon": 29, "mathcal": 29, "twist": 29, "theta": 29, "invari": 29, "transofrm": 29, "theta_": 29, "caus": 29, "epsilon_": 29, "alpha_": 29, "xx": 29, "xy": 29, "yy": 29, "aris": 29, "kappa_": 29, "penal": 29, "q_": 29, "penalti": 29, "cartesian": 29, "deviat": 29, "k_": 29, "v_": 29, "u_": 29, "suffer": 29, "phenomena": 29, "inabl": 29, "pure": 29, "allevi": 29, "ty": 29, "exhibit": 29, "free": 29, "context": 29, "tild": 29, "green": 29, "longer": 29, "du": 29, "dx": 29, "fg": 29, "dq": 29, "lamb": 29, "xf": 29, "computenodalfram": 29, "const": 29, "tacsscalar": 29, "xd": 29, "interpolatefram": 29, "xdz": 29, "computederiv": 29, "npt": 29, "computedirector": 29, "vars_per_nod": 29, "dir": 29, "computetransform": 29, "curvilinear": 29, "invers": 29, "3x3": 29, "xdinv": 29, "detxd": 29, "inv3x3": 29, "zxdinv": 29, "tmp": 29, "ux0": 29, "ueta": 29, "u0x": 29, "u0d": 29, "matmatmult": 29, "mattransmatmult": 29, "u1x": 29, "u1d": 29, "matmatmultadd": 29}, "objects": {"TACS": [[2, 0, 1, "", "Assembler"], [2, 0, 1, "", "Creator"], [2, 0, 1, "", "Integrator"], [2, 0, 1, "", "MeshLoader"]], "TACS.Assembler": [[2, 1, 1, "", "addAdjointResProducts"], [2, 1, 1, "", "addAdjointResXptSensProducts"], [2, 1, 1, "", "addDVSens"], [2, 1, 1, "", "addJacobianVecProduct"], [2, 1, 1, "", "addMatDVSensInnerProduct"], [2, 1, 1, "", "addSVSens"], [2, 1, 1, "", "addXptSens"], [2, 1, 1, "", "applyBCs"], [2, 1, 1, "", "applyMatBCs"], [2, 1, 1, "", "assembleJacobian"], [2, 1, 1, "", "assembleMatCombo"], [2, 1, 1, "", "assembleMatType"], [2, 1, 1, "", "assembleRes"], [2, 1, 1, "", "computeReordering"], [2, 1, 1, "", "copyVariables"], [2, 1, 1, "", "create"], [2, 1, 1, "", "createDesignVec"], [2, 1, 1, "", "createMat"], [2, 1, 1, "", "createNodeVec"], [2, 1, 1, "", "createSchurMat"], [2, 1, 1, "", "createVec"], [2, 1, 1, "", "evalEnergies"], [2, 1, 1, "", "evalFunctions"], [2, 1, 1, "", "getBcMap"], [2, 1, 1, "", "getDesignVarRange"], [2, 1, 1, "", "getDesignVars"], [2, 1, 1, "", "getElementData"], [2, 1, 1, "", "getElementNodes"], [2, 1, 1, "", "getElements"], [2, 1, 1, "", "getInitConditions"], [2, 1, 1, "", "getMPIComm"], [2, 1, 1, "", "getNodes"], [2, 1, 1, "", "getNumDependentNodes"], [2, 1, 1, "", "getNumElements"], [2, 1, 1, "", "getNumNodes"], [2, 1, 1, "", "getNumOwnedNodes"], [2, 1, 1, "", "getOwnerRange"], [2, 1, 1, "", "getReordering"], [2, 1, 1, "", "getSimulationTime"], [2, 1, 1, "", "getVariables"], [2, 1, 1, "", "getVarsPerNode"], [2, 1, 1, "", "initialize"], [2, 1, 1, "", "reorderVec"], [2, 1, 1, "", "setAuxElements"], [2, 1, 1, "", "setBCValuesFromVec"], [2, 1, 1, "", "setBCs"], [2, 1, 1, "", "setDependentNodes"], [2, 1, 1, "", "setDesignVars"], [2, 1, 1, "", "setElementConnectivity"], [2, 1, 1, "", "setElements"], [2, 1, 1, "", "setInitConditions"], [2, 1, 1, "", "setNodes"], [2, 1, 1, "", "setNumThreads"], [2, 1, 1, "", "setSimulationTime"], [2, 1, 1, "", "setVariables"], [2, 1, 1, "", "testElement"], [2, 1, 1, "", "testFunction"], [2, 1, 1, "", "zeroDDotVariables"], [2, 1, 1, "", "zeroDotVariables"], [2, 1, 1, "", "zeroVariables"]], "TACS.Creator": [[2, 1, 1, "", "getElementPartition"], [2, 1, 1, "", "setBoundaryConditions"], [2, 1, 1, "", "setElements"], [2, 1, 1, "", "setGlobalConnectivity"]], "TACS.Integrator": [[2, 1, 1, "", "checkGradients"], [2, 1, 1, "", "evalFunctions"], [2, 1, 1, "", "getAdjoint"], [2, 1, 1, "", "getGradient"], [2, 1, 1, "", "getNumTimeSteps"], [2, 1, 1, "", "getStates"], [2, 1, 1, "", "getXptGradient"], [2, 1, 1, "", "initAdjoint"], [2, 1, 1, "", "integrate"], [2, 1, 1, "", "integrateAdjoint"], [2, 1, 1, "", "iterate"], [2, 1, 1, "", "iterateAdjoint"], [2, 1, 1, "", "loadStates"], [2, 1, 1, "", "persistStates"], [2, 1, 1, "", "postAdjoint"], [2, 1, 1, "", "setAbsTol"], [2, 1, 1, "", "setFH5"], [2, 1, 1, "", "setFunctions"], [2, 1, 1, "", "setInitNewtonDeltaFraction"], [2, 1, 1, "", "setJacAssemblyFreq"], [2, 1, 1, "", "setKrylovSubspaceMethod"], [2, 1, 1, "", "setMaxNewtonIters"], [2, 1, 1, "", "setOutputFrequency"], [2, 1, 1, "", "setOutputPrefix"], [2, 1, 1, "", "setPrintLevel"], [2, 1, 1, "", "setRelTol"], [2, 1, 1, "", "setTimeInterval"], [2, 1, 1, "", "setUseLapack"], [2, 1, 1, "", "setUseSchurMat"]], "TACS.MeshLoader": [[2, 1, 1, "", "addAuxElement"], [2, 1, 1, "", "addFunctionDomain"], [2, 1, 1, "", "createTACS"], [2, 1, 1, "", "getBCs"], [2, 1, 1, "", "getComponentDescript"], [2, 1, 1, "", "getConnectivity"], [2, 1, 1, "", "getElementDescript"], [2, 1, 1, "", "getNumComponents"], [2, 1, 1, "", "scanBDFFile"], [2, 1, 1, "", "setElement"]], "tacs": [[3, 2, 0, "module-0", "constitutive"], [5, 2, 0, "module-2", "elements"], [6, 2, 0, "-", "functions"], [24, 2, 0, "-", "pytacs"]], "tacs.constitutive": [[3, 0, 1, "", "BasicBeamConstitutive"], [3, 0, 1, "", "BladeStiffenedShellConstitutive"], [3, 0, 1, "", "CompositeShellConstitutive"], [3, 0, 1, "", "DOFSpringConstitutive"], [3, 0, 1, "", "GeneralMassConstitutive"], [3, 0, 1, "", "GeneralSpringConstitutive"], [3, 0, 1, "", "IsoRectangleBeamConstitutive"], [3, 0, 1, "", "IsoShellConstitutive"], [3, 0, 1, "", "IsoTubeBeamConstitutive"], [3, 0, 1, "", "LamParamShellConstitutive"], [3, 0, 1, "", "MaterialProperties"], [3, 0, 1, "", "OrthotropicPly"], [3, 0, 1, "", "PhaseChangeMaterialConstitutive"], [3, 0, 1, "", "PlaneStressConstitutive"], [3, 0, 1, "", "PointMassConstitutive"], [3, 0, 1, "", "ShellConstitutive"], [3, 0, 1, "", "SmearedCompositeShellConstitutive"], [3, 0, 1, "", "SolidConstitutive"]], "tacs.constitutive.BasicBeamConstitutive": [[3, 1, 1, "", "generateBDFCard"]], "tacs.constitutive.BladeStiffenedShellConstitutive": [[3, 1, 1, "", "setKSWeight"], [3, 1, 1, "", "setPanelPlyFractionBounds"], [3, 1, 1, "", "setPanelThicknessBounds"], [3, 1, 1, "", "setStiffenerHeightBounds"], [3, 1, 1, "", "setStiffenerPitchBounds"], [3, 1, 1, "", "setStiffenerPlyFractionBounds"], [3, 1, 1, "", "setStiffenerThicknessBounds"]], "tacs.constitutive.CompositeShellConstitutive": [[3, 1, 1, "", "generateBDFCard"]], "tacs.constitutive.DOFSpringConstitutive": [[3, 1, 1, "", "generateBDFCard"]], "tacs.constitutive.GeneralMassConstitutive": [[3, 1, 1, "", "evalMassMatrix"]], "tacs.constitutive.IsoRectangleBeamConstitutive": [[3, 1, 1, "", "generateBDFCard"]], "tacs.constitutive.IsoShellConstitutive": [[3, 1, 1, "", "generateBDFCard"]], "tacs.constitutive.IsoTubeBeamConstitutive": [[3, 1, 1, "", "generateBDFCard"]], "tacs.constitutive.MaterialProperties": [[3, 1, 1, "", "generateBDFCard"], [3, 1, 1, "", "getMaterialProperties"], [3, 1, 1, "", "getNastranID"], [3, 1, 1, "", "setDensity"], [3, 1, 1, "", "setNastranID"], [3, 1, 1, "", "setSpecificHeat"]], "tacs.constitutive.OrthotropicPly": [[3, 1, 1, "", "getMaterialProperties"]], "tacs.constitutive.ShellConstitutive": [[3, 1, 1, "", "setDrillingRegularization"]], "tacs.constitutive.SmearedCompositeShellConstitutive": [[3, 1, 1, "", "generateBDFCard"]], "tacs.constitutive.SolidConstitutive": [[3, 1, 1, "", "generateBDFCard"]], "tacs.constraints": [[16, 0, 1, "", "AdjacencyConstraint"], [19, 0, 1, "", "DVConstraint"], [21, 0, 1, "", "PanelLengthConstraint"], [27, 0, 1, "", "VolumeConstraint"], [16, 2, 0, "-", "adjacency"], [19, 2, 0, "-", "dv"], [21, 2, 0, "-", "panel_length"], [27, 2, 0, "-", "volume"]], "tacs.constraints.AdjacencyConstraint": [[16, 1, 1, "", "addConstraint"], [16, 3, 1, "", "dtype"], [16, 1, 1, "", "evalConstraints"], [16, 1, 1, "", "evalConstraintsSens"], [16, 1, 1, "", "getConstraintBounds"], [16, 1, 1, "", "getConstraintKeys"], [16, 1, 1, "", "getConstraintSizes"], [16, 1, 1, "", "getDesignVarRange"], [16, 1, 1, "", "getDesignVars"], [16, 1, 1, "", "getNodes"], [16, 1, 1, "", "getNumCoordinates"], [16, 1, 1, "", "getNumDesignVars"], [16, 1, 1, "", "getNumOwnedNodes"], [16, 1, 1, "", "getNumVariables"], [16, 1, 1, "", "getOption"], [16, 1, 1, "", "getVarsPerNode"], [16, 1, 1, "", "printDefaultOptions"], [16, 1, 1, "", "printOptions"], [16, 1, 1, "", "setDesignVars"], [16, 1, 1, "", "setNodes"], [16, 1, 1, "", "setOption"], [16, 1, 1, "", "setVarName"], [16, 1, 1, "", "writeVisualization"]], "tacs.constraints.DVConstraint": [[19, 1, 1, "", "addConstraint"], [19, 3, 1, "", "dtype"], [19, 1, 1, "", "evalConstraints"], [19, 1, 1, "", "evalConstraintsSens"], [19, 1, 1, "", "getConstraintBounds"], [19, 1, 1, "", "getConstraintKeys"], [19, 1, 1, "", "getConstraintSizes"], [19, 1, 1, "", "getDesignVarRange"], [19, 1, 1, "", "getDesignVars"], [19, 1, 1, "", "getNodes"], [19, 1, 1, "", "getNumCoordinates"], [19, 1, 1, "", "getNumDesignVars"], [19, 1, 1, "", "getNumOwnedNodes"], [19, 1, 1, "", "getNumVariables"], [19, 1, 1, "", "getOption"], [19, 1, 1, "", "getVarsPerNode"], [19, 1, 1, "", "printDefaultOptions"], [19, 1, 1, "", "printOptions"], [19, 1, 1, "", "setDesignVars"], [19, 1, 1, "", "setNodes"], [19, 1, 1, "", "setOption"], [19, 1, 1, "", "setVarName"]], "tacs.constraints.PanelLengthConstraint": [[21, 1, 1, "", "addConstraint"], [21, 3, 1, "", "dtype"], [21, 1, 1, "", "evalConstraints"], [21, 1, 1, "", "evalConstraintsSens"], [21, 1, 1, "", "getConstraintBounds"], [21, 1, 1, "", "getConstraintKeys"], [21, 1, 1, "", "getConstraintSizes"], [21, 1, 1, "", "getDesignVarRange"], [21, 1, 1, "", "getDesignVars"], [21, 1, 1, "", "getNodes"], [21, 1, 1, "", "getNumCoordinates"], [21, 1, 1, "", "getNumDesignVars"], [21, 1, 1, "", "getNumOwnedNodes"], [21, 1, 1, "", "getNumVariables"], [21, 1, 1, "", "getOption"], [21, 1, 1, "", "getVarsPerNode"], [21, 1, 1, "", "printDefaultOptions"], [21, 1, 1, "", "printOptions"], [21, 1, 1, "", "setDesignVars"], [21, 1, 1, "", "setNodes"], [21, 1, 1, "", "setOption"], [21, 1, 1, "", "setVarName"]], "tacs.constraints.VolumeConstraint": [[27, 1, 1, "", "addConstraint"], [27, 3, 1, "", "dtype"], [27, 1, 1, "", "evalConstraints"], [27, 1, 1, "", "evalConstraintsSens"], [27, 1, 1, "", "getConstraintBounds"], [27, 1, 1, "", "getConstraintKeys"], [27, 1, 1, "", "getConstraintSizes"], [27, 1, 1, "", "getDesignVarRange"], [27, 1, 1, "", "getDesignVars"], [27, 1, 1, "", "getNodes"], [27, 1, 1, "", "getNumCoordinates"], [27, 1, 1, "", "getNumDesignVars"], [27, 1, 1, "", "getNumOwnedNodes"], [27, 1, 1, "", "getNumVariables"], [27, 1, 1, "", "getOption"], [27, 1, 1, "", "getVarsPerNode"], [27, 1, 1, "", "printDefaultOptions"], [27, 1, 1, "", "printOptions"], [27, 1, 1, "", "setDesignVars"], [27, 1, 1, "", "setNodes"], [27, 1, 1, "", "setOption"], [27, 1, 1, "", "setVarName"], [27, 1, 1, "", "writeVisualization"]], "tacs.elements": [[5, 0, 1, "", "Beam2"], [5, 0, 1, "", "Beam2ModRot"], [5, 0, 1, "", "Beam3"], [5, 0, 1, "", "Beam3ModRot"], [5, 0, 1, "", "BeamRefAxisTransform"], [5, 0, 1, "", "CubicHexaBasis"], [5, 0, 1, "", "CubicQuadBasis"], [5, 0, 1, "", "CubicTriangleBasis"], [5, 0, 1, "", "Element2D"], [5, 0, 1, "", "Element3D"], [5, 0, 1, "", "HeatConduction2D"], [5, 0, 1, "", "HeatConduction3D"], [5, 0, 1, "", "LinearElasticity2D"], [5, 0, 1, "", "LinearElasticity3D"], [5, 0, 1, "", "LinearHexaBasis"], [5, 0, 1, "", "LinearQuadBasis"], [5, 0, 1, "", "LinearTetrahedralBasis"], [5, 0, 1, "", "LinearThermoelasticity2D"], [5, 0, 1, "", "LinearThermoelasticity3D"], [5, 0, 1, "", "LinearTriangleBasis"], [5, 0, 1, "", "MassElement"], [5, 0, 1, "", "PCMHeatConduction2D"], [5, 0, 1, "", "Quad16NonlinearShell"], [5, 0, 1, "", "Quad16NonlinearThermalShell"], [5, 0, 1, "", "Quad16Shell"], [5, 0, 1, "", "Quad16ThermalShell"], [5, 0, 1, "", "Quad4NonlinearShell"], [5, 0, 1, "", "Quad4NonlinearThermalShell"], [5, 0, 1, "", "Quad4Shell"], [5, 0, 1, "", "Quad4ThermalShell"], [5, 0, 1, "", "Quad9NonlinearShell"], [5, 0, 1, "", "Quad9NonlinearThermalShell"], [5, 0, 1, "", "Quad9Shell"], [5, 0, 1, "", "Quad9ThermalShell"], [5, 0, 1, "", "QuadraticHexaBasis"], [5, 0, 1, "", "QuadraticQuadBasis"], [5, 0, 1, "", "QuadraticTetrahedralBasis"], [5, 0, 1, "", "QuadraticTriangleBasis"], [5, 0, 1, "", "QuarticQuadBasis"], [5, 0, 1, "", "QuinticQuadBasis"], [5, 0, 1, "", "RBE2"], [5, 0, 1, "", "RBE3"], [5, 0, 1, "", "ShellNaturalTransform"], [5, 0, 1, "", "ShellRefAxisTransform"], [5, 0, 1, "", "SpringElement"], [5, 0, 1, "", "SpringIdentityTransform"], [5, 0, 1, "", "SpringRefAxisTransform"], [5, 0, 1, "", "SpringRefFrameTransform"], [5, 0, 1, "", "Tri3NonlinearShell"], [5, 0, 1, "", "Tri3NonlinearThermalShell"], [5, 0, 1, "", "Tri3Shell"], [5, 0, 1, "", "Tri3ThermalShell"]], "tacs.elements.BeamRefAxisTransform": [[5, 1, 1, "", "getRefAxis"]], "tacs.elements.RBE2": [[5, 1, 1, "", "setScalingParameters"]], "tacs.elements.RBE3": [[5, 1, 1, "", "setScalingParameters"]], "tacs.elements.ShellRefAxisTransform": [[5, 1, 1, "", "getRefAxis"]], "tacs.elements.SpringRefAxisTransform": [[5, 1, 1, "", "getRefAxis"]], "tacs.elements.SpringRefFrameTransform": [[5, 1, 1, "", "getRefAxes"]], "tacs.functions": [[6, 0, 1, "", "AverageTemperature"], [6, 0, 1, "", "CenterOfMass"], [6, 0, 1, "", "Compliance"], [6, 0, 1, "", "EnclosedVolume"], [6, 0, 1, "", "KSDisplacement"], [6, 0, 1, "", "KSFailure"], [6, 0, 1, "", "KSTemperature"], [6, 0, 1, "", "MomentOfInertia"], [6, 0, 1, "", "StructuralMass"]], "tacs.functions.Compliance": [[6, 1, 1, "", "setComplianceType"]], "tacs.mphys.builder": [[14, 0, 1, "", "TacsBuilder"]], "tacs.mphys.builder.TacsBuilder": [[14, 1, 1, "", "get_coupling_group_subsystem"], [14, 1, 1, "", "get_dv_bounds"], [14, 1, 1, "", "get_dv_scalers"], [14, 1, 1, "", "get_fea_assembler"], [14, 1, 1, "", "get_initial_dvs"], [14, 1, 1, "", "get_mesh_coordinate_subsystem"], [14, 1, 1, "", "get_ndof"], [14, 1, 1, "", "get_ndv"], [14, 1, 1, "", "get_number_of_nodes"], [14, 1, 1, "", "get_post_coupling_subsystem"], [14, 1, 1, "", "get_pre_coupling_subsystem"], [14, 1, 1, "", "get_solver"], [14, 1, 1, "", "get_tagged_indices"], [14, 1, 1, "", "initialize"]], "tacs.problems": [[17, 0, 1, "", "BucklingProblem"], [20, 0, 1, "", "ModalProblem"], [25, 0, 1, "", "StaticProblem"], [26, 0, 1, "", "TransientProblem"], [17, 2, 0, "-", "buckling"], [20, 2, 0, "-", "modal"], [25, 2, 0, "-", "static"], [26, 2, 0, "-", "transient"]], "tacs.problems.BucklingProblem": [[17, 1, 1, "", "addCentrifugalLoad"], [17, 1, 1, "", "addDVSens"], [17, 1, 1, "", "addFunction"], [17, 1, 1, "", "addInertialLoad"], [17, 1, 1, "", "addLoadFromBDF"], [17, 1, 1, "", "addLoadToComponents"], [17, 1, 1, "", "addLoadToNodes"], [17, 1, 1, "", "addLoadToRHS"], [17, 1, 1, "", "addPressureToComponents"], [17, 1, 1, "", "addPressureToElements"], [17, 1, 1, "", "addTractionToComponents"], [17, 1, 1, "", "addTractionToElements"], [17, 1, 1, "", "addXptSens"], [17, 3, 1, "", "dtype"], [17, 1, 1, "", "evalFunctions"], [17, 1, 1, "", "evalFunctionsSens"], [17, 1, 1, "", "evalSVSens"], [17, 1, 1, "", "getDesignVarRange"], [17, 1, 1, "", "getDesignVars"], [17, 1, 1, "", "getFunctionKeys"], [17, 1, 1, "", "getNodes"], [17, 1, 1, "", "getNumCoordinates"], [17, 1, 1, "", "getNumDesignVars"], [17, 1, 1, "", "getNumEigs"], [17, 1, 1, "", "getNumOwnedNodes"], [17, 1, 1, "", "getNumVariables"], [17, 1, 1, "", "getOption"], [17, 1, 1, "", "getVariables"], [17, 1, 1, "", "getVarsPerNode"], [17, 1, 1, "", "printDefaultOptions"], [17, 1, 1, "", "printOptions"], [17, 1, 1, "", "setDesignVars"], [17, 1, 1, "", "setNodes"], [17, 1, 1, "", "setOption"], [17, 1, 1, "", "setValName"], [17, 1, 1, "", "setVarName"], [17, 1, 1, "", "solve"], [17, 1, 1, "", "writeSensFile"], [17, 1, 1, "", "writeSolution"], [17, 1, 1, "", "zeroLoads"]], "tacs.problems.ModalProblem": [[20, 1, 1, "", "addFunction"], [20, 3, 1, "", "dtype"], [20, 1, 1, "", "evalFunctions"], [20, 1, 1, "", "evalFunctionsSens"], [20, 1, 1, "", "getDesignVarRange"], [20, 1, 1, "", "getDesignVars"], [20, 1, 1, "", "getFunctionKeys"], [20, 1, 1, "", "getNodes"], [20, 1, 1, "", "getNumCoordinates"], [20, 1, 1, "", "getNumDesignVars"], [20, 1, 1, "", "getNumEigs"], [20, 1, 1, "", "getNumOwnedNodes"], [20, 1, 1, "", "getNumVariables"], [20, 1, 1, "", "getOption"], [20, 1, 1, "", "getVariables"], [20, 1, 1, "", "getVarsPerNode"], [20, 1, 1, "", "printDefaultOptions"], [20, 1, 1, "", "printOptions"], [20, 1, 1, "", "setDesignVars"], [20, 1, 1, "", "setNodes"], [20, 1, 1, "", "setOption"], [20, 1, 1, "", "setValName"], [20, 1, 1, "", "setVarName"], [20, 1, 1, "", "solve"], [20, 1, 1, "", "writeSensFile"], [20, 1, 1, "", "writeSolution"]], "tacs.problems.StaticProblem": [[25, 1, 1, "", "addAdjointResProducts"], [25, 1, 1, "", "addAdjointResXptSensProducts"], [25, 1, 1, "", "addCentrifugalLoad"], [25, 1, 1, "", "addDVSens"], [25, 1, 1, "", "addFunction"], [25, 1, 1, "", "addInertialLoad"], [25, 1, 1, "", "addLoadFromBDF"], [25, 1, 1, "", "addLoadToComponents"], [25, 1, 1, "", "addLoadToNodes"], [25, 1, 1, "", "addLoadToRHS"], [25, 1, 1, "", "addPressureToComponents"], [25, 1, 1, "", "addPressureToElements"], [25, 1, 1, "", "addSVSens"], [25, 1, 1, "", "addTractionToComponents"], [25, 1, 1, "", "addTractionToElements"], [25, 1, 1, "", "addTransposeJacVecProduct"], [25, 1, 1, "", "addXptSens"], [25, 3, 1, "", "dtype"], [25, 1, 1, "", "evalFunctions"], [25, 1, 1, "", "evalFunctionsSens"], [25, 1, 1, "", "getDesignVarRange"], [25, 1, 1, "", "getDesignVars"], [25, 1, 1, "", "getFunctionKeys"], [25, 1, 1, "", "getJacobian"], [25, 1, 1, "", "getNodes"], [25, 1, 1, "", "getNumCoordinates"], [25, 1, 1, "", "getNumDesignVars"], [25, 1, 1, "", "getNumOwnedNodes"], [25, 1, 1, "", "getNumVariables"], [25, 1, 1, "", "getOption"], [25, 1, 1, "", "getResidual"], [25, 1, 1, "", "getVariables"], [25, 1, 1, "", "getVarsPerNode"], [25, 4, 1, "", "loadScale"], [25, 1, 1, "", "printDefaultOptions"], [25, 1, 1, "", "printOptions"], [25, 1, 1, "", "setDesignVars"], [25, 1, 1, "", "setLoadScale"], [25, 1, 1, "", "setNodes"], [25, 1, 1, "", "setOption"], [25, 1, 1, "", "setVarName"], [25, 1, 1, "", "setVariables"], [25, 1, 1, "", "solve"], [25, 1, 1, "", "solveAdjoint"], [25, 1, 1, "", "writeLoadToBDF"], [25, 1, 1, "", "writeSensFile"], [25, 1, 1, "", "writeSolution"], [25, 1, 1, "", "zeroLoads"], [25, 1, 1, "", "zeroVariables"]], "tacs.problems.TransientProblem": [[26, 1, 1, "", "addCentrifugalLoad"], [26, 1, 1, "", "addFunction"], [26, 1, 1, "", "addInertialLoad"], [26, 1, 1, "", "addLoadFromBDF"], [26, 1, 1, "", "addLoadToComponents"], [26, 1, 1, "", "addLoadToNodes"], [26, 1, 1, "", "addLoadToRHS"], [26, 1, 1, "", "addPressureToComponents"], [26, 1, 1, "", "addPressureToElements"], [26, 1, 1, "", "addTractionToComponents"], [26, 1, 1, "", "addTractionToElements"], [26, 3, 1, "", "dtype"], [26, 1, 1, "", "evalFunctions"], [26, 1, 1, "", "evalFunctionsSens"], [26, 1, 1, "", "getDesignVarRange"], [26, 1, 1, "", "getDesignVars"], [26, 1, 1, "", "getFunctionKeys"], [26, 1, 1, "", "getNodes"], [26, 1, 1, "", "getNumCoordinates"], [26, 1, 1, "", "getNumDesignVars"], [26, 1, 1, "", "getNumOwnedNodes"], [26, 1, 1, "", "getNumTimeStages"], [26, 1, 1, "", "getNumTimeSteps"], [26, 1, 1, "", "getNumVariables"], [26, 1, 1, "", "getOption"], [26, 1, 1, "", "getTimeStages"], [26, 1, 1, "", "getTimeSteps"], [26, 1, 1, "", "getVariables"], [26, 1, 1, "", "getVarsPerNode"], [26, 1, 1, "", "iterate"], [26, 1, 1, "", "prepIterativeSolve"], [26, 1, 1, "", "printDefaultOptions"], [26, 1, 1, "", "printOptions"], [26, 1, 1, "", "setDesignVars"], [26, 1, 1, "", "setInitConditions"], [26, 1, 1, "", "setNodes"], [26, 1, 1, "", "setOption"], [26, 1, 1, "", "setVarName"], [26, 1, 1, "", "solve"], [26, 1, 1, "", "writeSensFile"], [26, 1, 1, "", "writeSolution"], [26, 1, 1, "", "zeroLoads"]], "tacs.pytacs": [[24, 5, 1, "", "elemCallBack"], [24, 0, 1, "", "pyTACS"]], "tacs.pytacs.pyTACS": [[24, 1, 1, "", "addGlobalDV"], [24, 1, 1, "", "applyBCsToVec"], [24, 1, 1, "", "assignMassDV"], [24, 1, 1, "", "createAdjacencyConstraint"], [24, 1, 1, "", "createBucklingProblem"], [24, 1, 1, "", "createDVConstraint"], [24, 1, 1, "", "createDesignVec"], [24, 1, 1, "", "createModalProblem"], [24, 1, 1, "", "createNodeVec"], [24, 1, 1, "", "createPanelLengthConstraint"], [24, 1, 1, "", "createStaticProblem"], [24, 1, 1, "", "createTACSProbsFromBDF"], [24, 1, 1, "", "createTransientProblem"], [24, 1, 1, "", "createVec"], [24, 1, 1, "", "createVolumeConstraint"], [24, 3, 1, "", "dtype"], [24, 1, 1, "", "getBDFInfo"], [24, 1, 1, "", "getCompNames"], [24, 1, 1, "", "getDesignVarRange"], [24, 1, 1, "", "getGlobalDVKeys"], [24, 1, 1, "", "getGlobalDVNums"], [24, 1, 1, "", "getGlobalDVs"], [24, 1, 1, "", "getGlobalNodeIDsForComps"], [24, 1, 1, "", "getLocalMultiplierNodeIDs"], [24, 1, 1, "", "getLocalNodeIDsForComps"], [24, 1, 1, "", "getNumComponents"], [24, 1, 1, "", "getNumDesignVars"], [24, 1, 1, "", "getNumOwnedMultiplierNodes"], [24, 1, 1, "", "getNumOwnedNodes"], [24, 1, 1, "", "getOption"], [24, 1, 1, "", "getOrigDesignVars"], [24, 1, 1, "", "getOrigNodes"], [24, 1, 1, "", "getTotalNumDesignVars"], [24, 1, 1, "", "getTotalNumGlobalDVs"], [24, 1, 1, "", "getVarsPerNode"], [24, 1, 1, "", "initialize"], [24, 1, 1, "", "printDefaultOptions"], [24, 1, 1, "", "printOptions"], [24, 1, 1, "", "selectCompIDs"], [24, 1, 1, "", "setOption"], [24, 1, 1, "", "writeBDF"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:module", "3": "py:attribute", "4": "py:property", "5": "py:function"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "module", "Python module"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "property", "Python property"], "5": ["py", "function", "Python function"]}, "titleterms": {"caps2tac": 0, "instal": [1, 12], "esp": 1, "cap": 1, "intro": 1, "exampl": [1, 11], "test": 1, "direct": 2, "workflow": [2, 23], "assembl": 2, "meshload": 2, "creator": 2, "frequencyanalysi": 2, "integr": 2, "constitut": [3, 29], "modul": [3, 4, 5, 6], "materi": 3, "class": [3, 5, 14, 18, 22, 24], "core": 4, "element": [5, 29], "basi": [5, 29], "model": 5, "transform": [5, 29], "function": 6, "beam": [7, 29], "optim": [7, 8], "mphy": [7, 15], "crm": 8, "plate": 9, "under": 9, "static": 9, "load": 9, "batteri": 10, "pack": 10, "dure": 10, "thermal": [10, 29], "runawai": 10, "tac": [11, 12, 29], "overview": 11, "get": 11, "start": 11, "refer": [11, 14, 16, 17, 19, 20, 21, 24, 25, 26, 27, 29], "indic": 11, "tabl": 11, "from": 12, "anaconda": 12, "sourc": 12, "prerequisit": 12, "basic": 12, "step": 12, "compil": 12, "detail": 12, "instruct": 12, "check": 12, "out": 12, "code": 12, "depend": 12, "make": 12, "c": 12, "librari": 12, "postprocess": 12, "tool": 12, "python": 12, "interfac": [12, 13], "tacsbuild": 14, "api": [14, 16, 17, 19, 20, 21, 24, 25, 26, 27], "adjacencyconstraint": 16, "option": [16, 17, 20, 24, 25, 26, 27], "bucklingproblem": 17, "constraint": 18, "dvconstraint": 19, "modalproblem": 20, "panellengthconstraint": 21, "problem": 22, "pytac": [23, 24], "initi": 24, "elemcallback": 24, "without": 24, "tag": 24, "compon": [24, 29], "group": 24, "bdf": 24, "icem": 24, "label": 24, "format": 24, "femap": 24, "patran": 24, "hypermesh": 24, "staticproblem": 25, "transientproblem": 26, "volumeconstraint": 27, "shell": 29, "director": 29, "parametr": 29, "volum": 29, "displac": 29, "local": 29, "attach": 29, "frame": 29, "axi": 29, "project": 29, "natur": 29, "strain": 29, "express": 29, "formul": 29, "drill": 29, "rotat": 29, "mix": 29, "interpol": 29, "tensori": 29, "relationship": 29, "equat": 29, "motion": 29, "implement": 29, "field": 29, "comput": 29, "theori": 30}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 58}, "alltitles": {"caps2tacs": [[0, "caps2tacs"]], "Installation of ESP/CAPS": [[1, "installation-of-esp-caps"]], "Intro": [[1, "intro"]], "Examples": [[1, "examples"], [11, "examples"]], "Testing": [[1, "testing"]], "Direct": [[2, "direct"]], "Workflow": [[2, "workflow"], [23, "workflow"]], "Assembler": [[2, "assembler"]], "MeshLoader": [[2, "meshloader"]], "Creator": [[2, "creator"]], "FrequencyAnalysis": [[2, "frequencyanalysis"]], "Integrator": [[2, "integrator"]], "constitutive module": [[3, "constitutive-module"]], "Material classes": [[3, "material-classes"]], "Constitutive classes": [[3, "constitutive-classes"]], "Core modules": [[4, "core-modules"]], "elements module": [[5, "elements-module"]], "Basis classes": [[5, "basis-classes"]], "Model classes": [[5, "model-classes"]], "Transform classes": [[5, "transform-classes"]], "Element classes": [[5, "element-classes"]], "functions module": [[6, "functions-module"]], "Beam optimization with MPhys": [[7, "beam-optimization-with-mphys"]], "CRM Optimization": [[8, "crm-optimization"]], "Plate under static load": [[9, "plate-under-static-load"]], "Battery pack during thermal runaway": [[10, "battery-pack-during-thermal-runaway"]], "TACS Overview": [[11, "tacs-overview"]], "Getting Started": [[11, "getting-started"]], "References": [[11, "references"]], "Indices and tables": [[11, "indices-and-tables"]], "Install": [[12, "install"]], "From Anaconda": [[12, "from-anaconda"]], "From source": [[12, "from-source"]], "Prerequisites": [[12, "prerequisites"]], "Basic steps to compile TACS": [[12, "basic-steps-to-compile-tacs"]], "Detailed installation instructions": [[12, "detailed-installation-instructions"]], "Checking out the code": [[12, "checking-out-the-code"]], "Install dependencies": [[12, "install-dependencies"]], "Make the C++ TACS library": [[12, "make-the-c-tacs-library"]], "Install postprocessing tools": [[12, "install-postprocessing-tools"]], "Installing the python interface": [[12, "installing-the-python-interface"]], "Interfaces": [[13, "interfaces"]], "TacsBuilder class": [[14, "tacsbuilder-class"]], "API Reference": [[14, "api-reference"], [16, "api-reference"], [17, "api-reference"], [19, "api-reference"], [20, "api-reference"], [21, "api-reference"], [24, "api-reference"], [25, "api-reference"], [26, "api-reference"], [27, "api-reference"]], "MPhys": [[15, "mphys"]], "AdjacencyConstraint": [[16, "module-tacs.constraints.adjacency"]], "Options": [[16, "options"], [17, "options"], [20, "options"], [24, "options"], [25, "options"], [26, "options"], [27, "options"]], "BucklingProblem": [[17, "module-tacs.problems.buckling"]], "Constraint classes": [[18, "constraint-classes"]], "DVConstraint": [[19, "module-tacs.constraints.dv"]], "ModalProblem": [[20, "module-tacs.problems.modal"]], "PanelLengthConstraint": [[21, "module-tacs.constraints.panel_length"]], "Problem classes": [[22, "problem-classes"]], "pyTACS": [[23, "pytacs"]], "pyTACS class": [[24, "module-tacs.pytacs"]], "Initializing": [[24, "initializing"]], "Initializing with elemCallBack": [[24, "initializing-with-elemcallback"]], "Initializing without elemCallBack": [[24, "initializing-without-elemcallback"]], "Tagging component groups in BDF": [[24, "tagging-component-groups-in-bdf"]], "ICEM component label format": [[24, "icem-component-label-format"]], "FEMAP component label format": [[24, "femap-component-label-format"]], "Patran component label format": [[24, "patran-component-label-format"]], "HyperMesh component label format": [[24, "hypermesh-component-label-format"]], "StaticProblem": [[25, "module-tacs.problems.static"]], "TransientProblem": [[26, "module-tacs.problems.transient"]], "VolumeConstraint": [[27, "module-tacs.constraints.volume"]], "Beam and shell elements in TACS": [[29, "beam-and-shell-elements-in-tacs"]], "Director parametrization": [[29, "director-parametrization"]], "Beam volume parametrization": [[29, "beam-volume-parametrization"]], "Shell volume parametrization": [[29, "shell-volume-parametrization"]], "Displacement parametrization": [[29, "displacement-parametrization"]], "Transformation to local shell-attached frame": [[29, "transformation-to-local-shell-attached-frame"]], "Reference axis projection transform": [[29, "reference-axis-projection-transform"]], "Natural transform": [[29, "natural-transform"]], "Strain expressions": [[29, "strain-expressions"]], "Thermal strain formulation": [[29, "thermal-strain-formulation"]], "Drilling rotation": [[29, "drilling-rotation"]], "Mixed Interpolation of Tensorial Components": [[29, "mixed-interpolation-of-tensorial-components"]], "Constitutive relationships for the shell element": [[29, "constitutive-relationships-for-the-shell-element"]], "Equations of motion": [[29, "equations-of-motion"]], "Director implementation": [[29, "director-implementation"]], "Beam element implementation": [[29, "beam-element-implementation"]], "Shell element implementation": [[29, "shell-element-implementation"]], "Shell element basis": [[29, "shell-element-basis"]], "Director field parametrization": [[29, "director-field-parametrization"]], "Transformation": [[29, "transformation"]], "Strain computation": [[29, "strain-computation"]], "Theory": [[30, "theory"]]}, "indexentries": {"assembler (class in tacs)": [[2, "TACS.Assembler"]], "creator (class in tacs)": [[2, "TACS.Creator"]], "integrator (class in tacs)": [[2, "TACS.Integrator"]], "meshloader (class in tacs)": [[2, "TACS.MeshLoader"]], "addadjointresproducts() (tacs.assembler method)": [[2, "TACS.Assembler.addAdjointResProducts"]], "addadjointresxptsensproducts() (tacs.assembler method)": [[2, "TACS.Assembler.addAdjointResXptSensProducts"]], "addauxelement() (tacs.meshloader method)": [[2, "TACS.MeshLoader.addAuxElement"]], "adddvsens() (tacs.assembler method)": [[2, "TACS.Assembler.addDVSens"]], "addfunctiondomain() (tacs.meshloader method)": [[2, "TACS.MeshLoader.addFunctionDomain"]], "addjacobianvecproduct() (tacs.assembler method)": [[2, "TACS.Assembler.addJacobianVecProduct"]], "addmatdvsensinnerproduct() (tacs.assembler method)": [[2, "TACS.Assembler.addMatDVSensInnerProduct"]], "addsvsens() (tacs.assembler method)": [[2, "TACS.Assembler.addSVSens"]], "addxptsens() (tacs.assembler method)": [[2, "TACS.Assembler.addXptSens"]], "applybcs() (tacs.assembler method)": [[2, "TACS.Assembler.applyBCs"]], "applymatbcs() (tacs.assembler method)": [[2, "TACS.Assembler.applyMatBCs"]], "assemblejacobian() (tacs.assembler method)": [[2, "TACS.Assembler.assembleJacobian"]], "assemblematcombo() (tacs.assembler method)": [[2, "TACS.Assembler.assembleMatCombo"]], "assemblemattype() (tacs.assembler method)": [[2, "TACS.Assembler.assembleMatType"]], "assembleres() (tacs.assembler method)": [[2, "TACS.Assembler.assembleRes"]], "checkgradients() (tacs.integrator method)": [[2, "TACS.Integrator.checkGradients"]], "computereordering() (tacs.assembler method)": [[2, "TACS.Assembler.computeReordering"]], "copyvariables() (tacs.assembler method)": [[2, "TACS.Assembler.copyVariables"]], "create() (tacs.assembler static method)": [[2, "TACS.Assembler.create"]], "createdesignvec() (tacs.assembler method)": [[2, "TACS.Assembler.createDesignVec"]], "createmat() (tacs.assembler method)": [[2, "TACS.Assembler.createMat"]], "createnodevec() (tacs.assembler method)": [[2, "TACS.Assembler.createNodeVec"]], "createschurmat() (tacs.assembler method)": [[2, "TACS.Assembler.createSchurMat"]], "createtacs() (tacs.meshloader method)": [[2, "TACS.MeshLoader.createTACS"]], "createvec() (tacs.assembler method)": [[2, "TACS.Assembler.createVec"]], "evalenergies() (tacs.assembler method)": [[2, "TACS.Assembler.evalEnergies"]], "evalfunctions() (tacs.assembler method)": [[2, "TACS.Assembler.evalFunctions"]], "evalfunctions() (tacs.integrator method)": [[2, "TACS.Integrator.evalFunctions"]], "getadjoint() (tacs.integrator method)": [[2, "TACS.Integrator.getAdjoint"]], "getbcs() (tacs.meshloader method)": [[2, "TACS.MeshLoader.getBCs"]], "getbcmap() (tacs.assembler method)": [[2, "TACS.Assembler.getBcMap"]], "getcomponentdescript() (tacs.meshloader method)": [[2, "TACS.MeshLoader.getComponentDescript"]], "getconnectivity() (tacs.meshloader method)": [[2, "TACS.MeshLoader.getConnectivity"]], "getdesignvarrange() (tacs.assembler method)": [[2, "TACS.Assembler.getDesignVarRange"]], "getdesignvars() (tacs.assembler method)": [[2, "TACS.Assembler.getDesignVars"]], "getelementdata() (tacs.assembler method)": [[2, "TACS.Assembler.getElementData"]], "getelementdescript() (tacs.meshloader method)": [[2, "TACS.MeshLoader.getElementDescript"]], "getelementnodes() (tacs.assembler method)": [[2, "TACS.Assembler.getElementNodes"]], "getelementpartition() (tacs.creator method)": [[2, "TACS.Creator.getElementPartition"]], "getelements() (tacs.assembler method)": [[2, "TACS.Assembler.getElements"]], "getgradient() (tacs.integrator method)": [[2, "TACS.Integrator.getGradient"]], "getinitconditions() (tacs.assembler method)": [[2, "TACS.Assembler.getInitConditions"]], "getmpicomm() (tacs.assembler method)": [[2, "TACS.Assembler.getMPIComm"]], "getnodes() (tacs.assembler method)": [[2, "TACS.Assembler.getNodes"]], "getnumcomponents() (tacs.meshloader method)": [[2, "TACS.MeshLoader.getNumComponents"]], "getnumdependentnodes() (tacs.assembler method)": [[2, "TACS.Assembler.getNumDependentNodes"]], "getnumelements() (tacs.assembler method)": [[2, "TACS.Assembler.getNumElements"]], "getnumnodes() (tacs.assembler method)": [[2, "TACS.Assembler.getNumNodes"]], "getnumownednodes() (tacs.assembler method)": [[2, "TACS.Assembler.getNumOwnedNodes"]], "getnumtimesteps() (tacs.integrator method)": [[2, "TACS.Integrator.getNumTimeSteps"]], "getownerrange() (tacs.assembler method)": [[2, "TACS.Assembler.getOwnerRange"]], "getreordering() (tacs.assembler method)": [[2, "TACS.Assembler.getReordering"]], "getsimulationtime() (tacs.assembler method)": [[2, "TACS.Assembler.getSimulationTime"]], "getstates() (tacs.integrator method)": [[2, "TACS.Integrator.getStates"]], "getvariables() (tacs.assembler method)": [[2, "TACS.Assembler.getVariables"]], "getvarspernode() (tacs.assembler method)": [[2, "TACS.Assembler.getVarsPerNode"]], "getxptgradient() (tacs.integrator method)": [[2, "TACS.Integrator.getXptGradient"]], "initadjoint() (tacs.integrator method)": [[2, "TACS.Integrator.initAdjoint"]], "initialize() (tacs.assembler method)": [[2, "TACS.Assembler.initialize"]], "integrate() (tacs.integrator method)": [[2, "TACS.Integrator.integrate"]], "integrateadjoint() (tacs.integrator method)": [[2, "TACS.Integrator.integrateAdjoint"]], "iterate() (tacs.integrator method)": [[2, "TACS.Integrator.iterate"]], "iterateadjoint() (tacs.integrator method)": [[2, "TACS.Integrator.iterateAdjoint"]], "loadstates() (tacs.integrator method)": [[2, "TACS.Integrator.loadStates"]], "persiststates() (tacs.integrator method)": [[2, "TACS.Integrator.persistStates"]], "postadjoint() (tacs.integrator method)": [[2, "TACS.Integrator.postAdjoint"]], "reordervec() (tacs.assembler method)": [[2, "TACS.Assembler.reorderVec"]], "scanbdffile() (tacs.meshloader method)": [[2, "TACS.MeshLoader.scanBDFFile"]], "setabstol() (tacs.integrator method)": [[2, "TACS.Integrator.setAbsTol"]], "setauxelements() (tacs.assembler method)": [[2, "TACS.Assembler.setAuxElements"]], "setbcvaluesfromvec() (tacs.assembler method)": [[2, "TACS.Assembler.setBCValuesFromVec"]], "setbcs() (tacs.assembler method)": [[2, "TACS.Assembler.setBCs"]], "setboundaryconditions() (tacs.creator method)": [[2, "TACS.Creator.setBoundaryConditions"]], "setdependentnodes() (tacs.assembler method)": [[2, "TACS.Assembler.setDependentNodes"]], "setdesignvars() (tacs.assembler method)": [[2, "TACS.Assembler.setDesignVars"]], "setelement() (tacs.meshloader method)": [[2, "TACS.MeshLoader.setElement"]], "setelementconnectivity() (tacs.assembler method)": [[2, "TACS.Assembler.setElementConnectivity"]], "setelements() (tacs.assembler method)": [[2, "TACS.Assembler.setElements"]], "setelements() (tacs.creator method)": [[2, "TACS.Creator.setElements"]], "setfh5() (tacs.integrator method)": [[2, "TACS.Integrator.setFH5"]], "setfunctions() (tacs.integrator method)": [[2, "TACS.Integrator.setFunctions"]], "setglobalconnectivity() (tacs.creator method)": [[2, "TACS.Creator.setGlobalConnectivity"]], "setinitconditions() (tacs.assembler method)": [[2, "TACS.Assembler.setInitConditions"]], "setinitnewtondeltafraction() (tacs.integrator method)": [[2, "TACS.Integrator.setInitNewtonDeltaFraction"]], "setjacassemblyfreq() (tacs.integrator method)": [[2, "TACS.Integrator.setJacAssemblyFreq"]], "setkrylovsubspacemethod() (tacs.integrator method)": [[2, "TACS.Integrator.setKrylovSubspaceMethod"]], "setmaxnewtoniters() (tacs.integrator method)": [[2, "TACS.Integrator.setMaxNewtonIters"]], "setnodes() (tacs.assembler method)": [[2, "TACS.Assembler.setNodes"]], "setnumthreads() (tacs.assembler method)": [[2, "TACS.Assembler.setNumThreads"]], "setoutputfrequency() (tacs.integrator method)": [[2, "TACS.Integrator.setOutputFrequency"]], "setoutputprefix() (tacs.integrator method)": [[2, "TACS.Integrator.setOutputPrefix"]], "setprintlevel() (tacs.integrator method)": [[2, "TACS.Integrator.setPrintLevel"]], "setreltol() (tacs.integrator method)": [[2, "TACS.Integrator.setRelTol"]], "setsimulationtime() (tacs.assembler method)": [[2, "TACS.Assembler.setSimulationTime"]], "settimeinterval() (tacs.integrator method)": [[2, "TACS.Integrator.setTimeInterval"]], "setuselapack() (tacs.integrator method)": [[2, "TACS.Integrator.setUseLapack"]], "setuseschurmat() (tacs.integrator method)": [[2, "TACS.Integrator.setUseSchurMat"]], "setvariables() (tacs.assembler method)": [[2, "TACS.Assembler.setVariables"]], "testelement() (tacs.assembler method)": [[2, "TACS.Assembler.testElement"]], "testfunction() (tacs.assembler method)": [[2, "TACS.Assembler.testFunction"]], "zeroddotvariables() (tacs.assembler method)": [[2, "TACS.Assembler.zeroDDotVariables"]], "zerodotvariables() (tacs.assembler method)": [[2, "TACS.Assembler.zeroDotVariables"]], "zerovariables() (tacs.assembler method)": [[2, "TACS.Assembler.zeroVariables"]], "basicbeamconstitutive (class in tacs.constitutive)": [[3, "tacs.constitutive.BasicBeamConstitutive"]], "bladestiffenedshellconstitutive (class in tacs.constitutive)": [[3, "tacs.constitutive.BladeStiffenedShellConstitutive"]], "compositeshellconstitutive (class in tacs.constitutive)": [[3, "tacs.constitutive.CompositeShellConstitutive"]], "dofspringconstitutive (class in tacs.constitutive)": [[3, "tacs.constitutive.DOFSpringConstitutive"]], "generalmassconstitutive (class in tacs.constitutive)": [[3, "tacs.constitutive.GeneralMassConstitutive"]], "generalspringconstitutive (class in tacs.constitutive)": [[3, "tacs.constitutive.GeneralSpringConstitutive"]], "isorectanglebeamconstitutive (class in tacs.constitutive)": [[3, "tacs.constitutive.IsoRectangleBeamConstitutive"]], "isoshellconstitutive (class in tacs.constitutive)": [[3, "tacs.constitutive.IsoShellConstitutive"]], "isotubebeamconstitutive (class in tacs.constitutive)": [[3, "tacs.constitutive.IsoTubeBeamConstitutive"]], "lamparamshellconstitutive (class in tacs.constitutive)": [[3, "tacs.constitutive.LamParamShellConstitutive"]], "materialproperties (class in tacs.constitutive)": [[3, "tacs.constitutive.MaterialProperties"]], "orthotropicply (class in tacs.constitutive)": [[3, "tacs.constitutive.OrthotropicPly"]], "phasechangematerialconstitutive (class in tacs.constitutive)": [[3, "tacs.constitutive.PhaseChangeMaterialConstitutive"]], "planestressconstitutive (class in tacs.constitutive)": [[3, "tacs.constitutive.PlaneStressConstitutive"]], "pointmassconstitutive (class in tacs.constitutive)": [[3, "tacs.constitutive.PointMassConstitutive"]], "shellconstitutive (class in tacs.constitutive)": [[3, "tacs.constitutive.ShellConstitutive"]], "smearedcompositeshellconstitutive (class in tacs.constitutive)": [[3, "tacs.constitutive.SmearedCompositeShellConstitutive"]], "solidconstitutive (class in tacs.constitutive)": [[3, "tacs.constitutive.SolidConstitutive"]], "evalmassmatrix() (tacs.constitutive.generalmassconstitutive method)": [[3, "tacs.constitutive.GeneralMassConstitutive.evalMassMatrix"]], "generatebdfcard() (tacs.constitutive.basicbeamconstitutive method)": [[3, "tacs.constitutive.BasicBeamConstitutive.generateBDFCard"]], "generatebdfcard() (tacs.constitutive.compositeshellconstitutive method)": [[3, "tacs.constitutive.CompositeShellConstitutive.generateBDFCard"]], "generatebdfcard() (tacs.constitutive.dofspringconstitutive method)": [[3, "tacs.constitutive.DOFSpringConstitutive.generateBDFCard"]], "generatebdfcard() (tacs.constitutive.isorectanglebeamconstitutive method)": [[3, "tacs.constitutive.IsoRectangleBeamConstitutive.generateBDFCard"]], "generatebdfcard() (tacs.constitutive.isoshellconstitutive method)": [[3, "tacs.constitutive.IsoShellConstitutive.generateBDFCard"]], "generatebdfcard() (tacs.constitutive.isotubebeamconstitutive method)": [[3, "tacs.constitutive.IsoTubeBeamConstitutive.generateBDFCard"]], "generatebdfcard() (tacs.constitutive.materialproperties method)": [[3, "tacs.constitutive.MaterialProperties.generateBDFCard"]], "generatebdfcard() (tacs.constitutive.smearedcompositeshellconstitutive method)": [[3, "tacs.constitutive.SmearedCompositeShellConstitutive.generateBDFCard"]], "generatebdfcard() (tacs.constitutive.solidconstitutive method)": [[3, "tacs.constitutive.SolidConstitutive.generateBDFCard"]], "getmaterialproperties() (tacs.constitutive.materialproperties method)": [[3, "tacs.constitutive.MaterialProperties.getMaterialProperties"]], "getmaterialproperties() (tacs.constitutive.orthotropicply method)": [[3, "tacs.constitutive.OrthotropicPly.getMaterialProperties"]], "getnastranid() (tacs.constitutive.materialproperties method)": [[3, "tacs.constitutive.MaterialProperties.getNastranID"]], "module": [[3, "module-0"], [3, "module-tacs.constitutive"], [5, "module-0"], [5, "module-1"], [5, "module-2"], [5, "module-tacs.elements"], [6, "module-tacs.functions"], [16, "module-tacs.constraints.adjacency"], [17, "module-tacs.problems.buckling"], [19, "module-tacs.constraints.dv"], [20, "module-tacs.problems.modal"], [21, "module-tacs.constraints.panel_length"], [24, "module-tacs.pytacs"], [25, "module-tacs.problems.static"], [26, "module-tacs.problems.transient"], [27, "module-tacs.constraints.volume"]], "setdensity() (tacs.constitutive.materialproperties method)": [[3, "tacs.constitutive.MaterialProperties.setDensity"]], "setdrillingregularization() (tacs.constitutive.shellconstitutive method)": [[3, "tacs.constitutive.ShellConstitutive.setDrillingRegularization"]], "setksweight() (tacs.constitutive.bladestiffenedshellconstitutive method)": [[3, "tacs.constitutive.BladeStiffenedShellConstitutive.setKSWeight"]], "setnastranid() (tacs.constitutive.materialproperties method)": [[3, "tacs.constitutive.MaterialProperties.setNastranID"]], "setpanelplyfractionbounds() (tacs.constitutive.bladestiffenedshellconstitutive method)": [[3, "tacs.constitutive.BladeStiffenedShellConstitutive.setPanelPlyFractionBounds"]], "setpanelthicknessbounds() (tacs.constitutive.bladestiffenedshellconstitutive method)": [[3, "tacs.constitutive.BladeStiffenedShellConstitutive.setPanelThicknessBounds"]], "setspecificheat() (tacs.constitutive.materialproperties method)": [[3, "tacs.constitutive.MaterialProperties.setSpecificHeat"]], "setstiffenerheightbounds() (tacs.constitutive.bladestiffenedshellconstitutive method)": [[3, "tacs.constitutive.BladeStiffenedShellConstitutive.setStiffenerHeightBounds"]], "setstiffenerpitchbounds() (tacs.constitutive.bladestiffenedshellconstitutive method)": [[3, "tacs.constitutive.BladeStiffenedShellConstitutive.setStiffenerPitchBounds"]], "setstiffenerplyfractionbounds() (tacs.constitutive.bladestiffenedshellconstitutive method)": [[3, "tacs.constitutive.BladeStiffenedShellConstitutive.setStiffenerPlyFractionBounds"]], "setstiffenerthicknessbounds() (tacs.constitutive.bladestiffenedshellconstitutive method)": [[3, "tacs.constitutive.BladeStiffenedShellConstitutive.setStiffenerThicknessBounds"]], "tacs.constitutive": [[3, "module-0"], [3, "module-tacs.constitutive"]], "beam2 (class in tacs.elements)": [[5, "tacs.elements.Beam2"]], "beam2modrot (class in tacs.elements)": [[5, "tacs.elements.Beam2ModRot"]], "beam3 (class in tacs.elements)": [[5, "tacs.elements.Beam3"]], "beam3modrot (class in tacs.elements)": [[5, "tacs.elements.Beam3ModRot"]], "beamrefaxistransform (class in tacs.elements)": [[5, "tacs.elements.BeamRefAxisTransform"]], "cubichexabasis (class in tacs.elements)": [[5, "tacs.elements.CubicHexaBasis"]], "cubicquadbasis (class in tacs.elements)": [[5, "tacs.elements.CubicQuadBasis"]], "cubictrianglebasis (class in tacs.elements)": [[5, "tacs.elements.CubicTriangleBasis"]], "element2d (class in tacs.elements)": [[5, "tacs.elements.Element2D"]], "element3d (class in tacs.elements)": [[5, "tacs.elements.Element3D"]], "heatconduction2d (class in tacs.elements)": [[5, "tacs.elements.HeatConduction2D"]], "heatconduction3d (class in tacs.elements)": [[5, "tacs.elements.HeatConduction3D"]], "linearelasticity2d (class in tacs.elements)": [[5, "tacs.elements.LinearElasticity2D"]], "linearelasticity3d (class in tacs.elements)": [[5, "tacs.elements.LinearElasticity3D"]], "linearhexabasis (class in tacs.elements)": [[5, "tacs.elements.LinearHexaBasis"]], "linearquadbasis (class in tacs.elements)": [[5, "tacs.elements.LinearQuadBasis"]], "lineartetrahedralbasis (class in tacs.elements)": [[5, "tacs.elements.LinearTetrahedralBasis"]], "linearthermoelasticity2d (class in tacs.elements)": [[5, "tacs.elements.LinearThermoelasticity2D"]], "linearthermoelasticity3d (class in tacs.elements)": [[5, "tacs.elements.LinearThermoelasticity3D"]], "lineartrianglebasis (class in tacs.elements)": [[5, "tacs.elements.LinearTriangleBasis"]], "masselement (class in tacs.elements)": [[5, "tacs.elements.MassElement"]], "pcmheatconduction2d (class in tacs.elements)": [[5, "tacs.elements.PCMHeatConduction2D"]], "quad16nonlinearshell (class in tacs.elements)": [[5, "tacs.elements.Quad16NonlinearShell"]], "quad16nonlinearthermalshell (class in tacs.elements)": [[5, "tacs.elements.Quad16NonlinearThermalShell"]], "quad16shell (class in tacs.elements)": [[5, "tacs.elements.Quad16Shell"]], "quad16thermalshell (class in tacs.elements)": [[5, "tacs.elements.Quad16ThermalShell"]], "quad4nonlinearshell (class in tacs.elements)": [[5, "tacs.elements.Quad4NonlinearShell"]], "quad4nonlinearthermalshell (class in tacs.elements)": [[5, "tacs.elements.Quad4NonlinearThermalShell"]], "quad4shell (class in tacs.elements)": [[5, "tacs.elements.Quad4Shell"]], "quad4thermalshell (class in tacs.elements)": [[5, "tacs.elements.Quad4ThermalShell"]], "quad9nonlinearshell (class in tacs.elements)": [[5, "tacs.elements.Quad9NonlinearShell"]], "quad9nonlinearthermalshell (class in tacs.elements)": [[5, "tacs.elements.Quad9NonlinearThermalShell"]], "quad9shell (class in tacs.elements)": [[5, "tacs.elements.Quad9Shell"]], "quad9thermalshell (class in tacs.elements)": [[5, "tacs.elements.Quad9ThermalShell"]], "quadratichexabasis (class in tacs.elements)": [[5, "tacs.elements.QuadraticHexaBasis"]], "quadraticquadbasis (class in tacs.elements)": [[5, "tacs.elements.QuadraticQuadBasis"]], "quadratictetrahedralbasis (class in tacs.elements)": [[5, "tacs.elements.QuadraticTetrahedralBasis"]], "quadratictrianglebasis (class in tacs.elements)": [[5, "tacs.elements.QuadraticTriangleBasis"]], "quarticquadbasis (class in tacs.elements)": [[5, "tacs.elements.QuarticQuadBasis"]], "quinticquadbasis (class in tacs.elements)": [[5, "tacs.elements.QuinticQuadBasis"]], "rbe2 (class in tacs.elements)": [[5, "tacs.elements.RBE2"]], "rbe3 (class in tacs.elements)": [[5, "tacs.elements.RBE3"]], "shellnaturaltransform (class in tacs.elements)": [[5, "tacs.elements.ShellNaturalTransform"]], "shellrefaxistransform (class in tacs.elements)": [[5, "tacs.elements.ShellRefAxisTransform"]], "springelement (class in tacs.elements)": [[5, "tacs.elements.SpringElement"]], "springidentitytransform (class in tacs.elements)": [[5, "tacs.elements.SpringIdentityTransform"]], "springrefaxistransform (class in tacs.elements)": [[5, "tacs.elements.SpringRefAxisTransform"]], "springrefframetransform (class in tacs.elements)": [[5, "tacs.elements.SpringRefFrameTransform"]], "tri3nonlinearshell (class in tacs.elements)": [[5, "tacs.elements.Tri3NonlinearShell"]], "tri3nonlinearthermalshell (class in tacs.elements)": [[5, "tacs.elements.Tri3NonlinearThermalShell"]], "tri3shell (class in tacs.elements)": [[5, "tacs.elements.Tri3Shell"]], "tri3thermalshell (class in tacs.elements)": [[5, "tacs.elements.Tri3ThermalShell"]], "getrefaxes() (tacs.elements.springrefframetransform method)": [[5, "tacs.elements.SpringRefFrameTransform.getRefAxes"]], "getrefaxis() (tacs.elements.beamrefaxistransform method)": [[5, "tacs.elements.BeamRefAxisTransform.getRefAxis"]], "getrefaxis() (tacs.elements.shellrefaxistransform method)": [[5, "tacs.elements.ShellRefAxisTransform.getRefAxis"]], "getrefaxis() (tacs.elements.springrefaxistransform method)": [[5, "tacs.elements.SpringRefAxisTransform.getRefAxis"]], "setscalingparameters() (tacs.elements.rbe2 class method)": [[5, "tacs.elements.RBE2.setScalingParameters"]], "setscalingparameters() (tacs.elements.rbe3 class method)": [[5, "tacs.elements.RBE3.setScalingParameters"]], "tacs.elements": [[5, "module-0"], [5, "module-1"], [5, "module-2"], [5, "module-tacs.elements"]], "averagetemperature (class in tacs.functions)": [[6, "tacs.functions.AverageTemperature"]], "centerofmass (class in tacs.functions)": [[6, "tacs.functions.CenterOfMass"]], "compliance (class in tacs.functions)": [[6, "tacs.functions.Compliance"]], "enclosedvolume (class in tacs.functions)": [[6, "tacs.functions.EnclosedVolume"]], "ksdisplacement (class in tacs.functions)": [[6, "tacs.functions.KSDisplacement"]], "ksfailure (class in tacs.functions)": [[6, "tacs.functions.KSFailure"]], "kstemperature (class in tacs.functions)": [[6, "tacs.functions.KSTemperature"]], "momentofinertia (class in tacs.functions)": [[6, "tacs.functions.MomentOfInertia"]], "structuralmass (class in tacs.functions)": [[6, "tacs.functions.StructuralMass"]], "setcompliancetype() (tacs.functions.compliance method)": [[6, "tacs.functions.Compliance.setComplianceType"]], "tacs.functions": [[6, "module-tacs.functions"]], "tacsbuilder (class in tacs.mphys.builder)": [[14, "tacs.mphys.builder.TacsBuilder"]], "get_coupling_group_subsystem() (tacs.mphys.builder.tacsbuilder method)": [[14, "tacs.mphys.builder.TacsBuilder.get_coupling_group_subsystem"]], "get_dv_bounds() (tacs.mphys.builder.tacsbuilder method)": [[14, "tacs.mphys.builder.TacsBuilder.get_dv_bounds"]], "get_dv_scalers() (tacs.mphys.builder.tacsbuilder method)": [[14, "tacs.mphys.builder.TacsBuilder.get_dv_scalers"]], "get_fea_assembler() (tacs.mphys.builder.tacsbuilder method)": [[14, "tacs.mphys.builder.TacsBuilder.get_fea_assembler"]], "get_initial_dvs() (tacs.mphys.builder.tacsbuilder method)": [[14, "tacs.mphys.builder.TacsBuilder.get_initial_dvs"]], "get_mesh_coordinate_subsystem() (tacs.mphys.builder.tacsbuilder method)": [[14, "tacs.mphys.builder.TacsBuilder.get_mesh_coordinate_subsystem"]], "get_ndof() (tacs.mphys.builder.tacsbuilder method)": [[14, "tacs.mphys.builder.TacsBuilder.get_ndof"]], "get_ndv() (tacs.mphys.builder.tacsbuilder method)": [[14, "tacs.mphys.builder.TacsBuilder.get_ndv"]], "get_number_of_nodes() (tacs.mphys.builder.tacsbuilder method)": [[14, "tacs.mphys.builder.TacsBuilder.get_number_of_nodes"]], "get_post_coupling_subsystem() (tacs.mphys.builder.tacsbuilder method)": [[14, "tacs.mphys.builder.TacsBuilder.get_post_coupling_subsystem"]], "get_pre_coupling_subsystem() (tacs.mphys.builder.tacsbuilder method)": [[14, "tacs.mphys.builder.TacsBuilder.get_pre_coupling_subsystem"]], "get_solver() (tacs.mphys.builder.tacsbuilder method)": [[14, "tacs.mphys.builder.TacsBuilder.get_solver"]], "get_tagged_indices() (tacs.mphys.builder.tacsbuilder method)": [[14, "tacs.mphys.builder.TacsBuilder.get_tagged_indices"]], "initialize() (tacs.mphys.builder.tacsbuilder method)": [[14, "tacs.mphys.builder.TacsBuilder.initialize"]], "adjacencyconstraint (class in tacs.constraints)": [[16, "tacs.constraints.AdjacencyConstraint"]], "addconstraint() (tacs.constraints.adjacencyconstraint method)": [[16, "tacs.constraints.AdjacencyConstraint.addConstraint"]], "dtype (tacs.constraints.adjacencyconstraint attribute)": [[16, "tacs.constraints.AdjacencyConstraint.dtype"]], "evalconstraints() (tacs.constraints.adjacencyconstraint method)": [[16, "tacs.constraints.AdjacencyConstraint.evalConstraints"]], "evalconstraintssens() (tacs.constraints.adjacencyconstraint method)": [[16, "tacs.constraints.AdjacencyConstraint.evalConstraintsSens"]], "getconstraintbounds() (tacs.constraints.adjacencyconstraint method)": [[16, "tacs.constraints.AdjacencyConstraint.getConstraintBounds"]], "getconstraintkeys() (tacs.constraints.adjacencyconstraint method)": [[16, "tacs.constraints.AdjacencyConstraint.getConstraintKeys"]], "getconstraintsizes() (tacs.constraints.adjacencyconstraint method)": [[16, "tacs.constraints.AdjacencyConstraint.getConstraintSizes"]], "getdesignvarrange() (tacs.constraints.adjacencyconstraint method)": [[16, "tacs.constraints.AdjacencyConstraint.getDesignVarRange"]], "getdesignvars() (tacs.constraints.adjacencyconstraint method)": [[16, "tacs.constraints.AdjacencyConstraint.getDesignVars"]], "getnodes() (tacs.constraints.adjacencyconstraint method)": [[16, "tacs.constraints.AdjacencyConstraint.getNodes"]], "getnumcoordinates() (tacs.constraints.adjacencyconstraint method)": [[16, "tacs.constraints.AdjacencyConstraint.getNumCoordinates"]], "getnumdesignvars() (tacs.constraints.adjacencyconstraint method)": [[16, "tacs.constraints.AdjacencyConstraint.getNumDesignVars"]], "getnumownednodes() (tacs.constraints.adjacencyconstraint method)": [[16, "tacs.constraints.AdjacencyConstraint.getNumOwnedNodes"]], "getnumvariables() (tacs.constraints.adjacencyconstraint method)": [[16, "tacs.constraints.AdjacencyConstraint.getNumVariables"]], "getoption() (tacs.constraints.adjacencyconstraint method)": [[16, "tacs.constraints.AdjacencyConstraint.getOption"]], "getvarspernode() (tacs.constraints.adjacencyconstraint method)": [[16, "tacs.constraints.AdjacencyConstraint.getVarsPerNode"]], "printdefaultoptions() (tacs.constraints.adjacencyconstraint class method)": [[16, "tacs.constraints.AdjacencyConstraint.printDefaultOptions"]], "printoptions() (tacs.constraints.adjacencyconstraint method)": [[16, "tacs.constraints.AdjacencyConstraint.printOptions"]], "setdesignvars() (tacs.constraints.adjacencyconstraint method)": [[16, "tacs.constraints.AdjacencyConstraint.setDesignVars"]], "setnodes() (tacs.constraints.adjacencyconstraint method)": [[16, "tacs.constraints.AdjacencyConstraint.setNodes"]], "setoption() (tacs.constraints.adjacencyconstraint method)": [[16, "tacs.constraints.AdjacencyConstraint.setOption"]], "setvarname() (tacs.constraints.adjacencyconstraint method)": [[16, "tacs.constraints.AdjacencyConstraint.setVarName"]], "tacs.constraints.adjacency": [[16, "module-tacs.constraints.adjacency"]], "writevisualization() (tacs.constraints.adjacencyconstraint method)": [[16, "tacs.constraints.AdjacencyConstraint.writeVisualization"]], "bucklingproblem (class in tacs.problems)": [[17, "tacs.problems.BucklingProblem"]], "addcentrifugalload() (tacs.problems.bucklingproblem method)": [[17, "tacs.problems.BucklingProblem.addCentrifugalLoad"]], "adddvsens() (tacs.problems.bucklingproblem method)": [[17, "tacs.problems.BucklingProblem.addDVSens"]], "addfunction() (tacs.problems.bucklingproblem method)": [[17, "tacs.problems.BucklingProblem.addFunction"]], "addinertialload() (tacs.problems.bucklingproblem method)": [[17, "tacs.problems.BucklingProblem.addInertialLoad"]], "addloadfrombdf() (tacs.problems.bucklingproblem method)": [[17, "tacs.problems.BucklingProblem.addLoadFromBDF"]], "addloadtocomponents() (tacs.problems.bucklingproblem method)": [[17, "tacs.problems.BucklingProblem.addLoadToComponents"]], "addloadtonodes() (tacs.problems.bucklingproblem method)": [[17, "tacs.problems.BucklingProblem.addLoadToNodes"]], "addloadtorhs() (tacs.problems.bucklingproblem method)": [[17, "tacs.problems.BucklingProblem.addLoadToRHS"]], "addpressuretocomponents() (tacs.problems.bucklingproblem method)": [[17, "tacs.problems.BucklingProblem.addPressureToComponents"]], "addpressuretoelements() (tacs.problems.bucklingproblem method)": [[17, "tacs.problems.BucklingProblem.addPressureToElements"]], "addtractiontocomponents() (tacs.problems.bucklingproblem method)": [[17, "tacs.problems.BucklingProblem.addTractionToComponents"]], "addtractiontoelements() (tacs.problems.bucklingproblem method)": [[17, "tacs.problems.BucklingProblem.addTractionToElements"]], "addxptsens() (tacs.problems.bucklingproblem method)": [[17, "tacs.problems.BucklingProblem.addXptSens"]], "dtype (tacs.problems.bucklingproblem attribute)": [[17, "tacs.problems.BucklingProblem.dtype"]], "evalfunctions() (tacs.problems.bucklingproblem method)": [[17, "tacs.problems.BucklingProblem.evalFunctions"]], "evalfunctionssens() (tacs.problems.bucklingproblem method)": [[17, "tacs.problems.BucklingProblem.evalFunctionsSens"]], "evalsvsens() (tacs.problems.bucklingproblem method)": [[17, "tacs.problems.BucklingProblem.evalSVSens"]], "getdesignvarrange() (tacs.problems.bucklingproblem method)": [[17, "tacs.problems.BucklingProblem.getDesignVarRange"]], "getdesignvars() (tacs.problems.bucklingproblem method)": [[17, "tacs.problems.BucklingProblem.getDesignVars"]], "getfunctionkeys() (tacs.problems.bucklingproblem method)": [[17, "tacs.problems.BucklingProblem.getFunctionKeys"]], "getnodes() (tacs.problems.bucklingproblem method)": [[17, "tacs.problems.BucklingProblem.getNodes"]], "getnumcoordinates() (tacs.problems.bucklingproblem method)": [[17, "tacs.problems.BucklingProblem.getNumCoordinates"]], "getnumdesignvars() (tacs.problems.bucklingproblem method)": [[17, "tacs.problems.BucklingProblem.getNumDesignVars"]], "getnumeigs() (tacs.problems.bucklingproblem method)": [[17, "tacs.problems.BucklingProblem.getNumEigs"]], "getnumownednodes() (tacs.problems.bucklingproblem method)": [[17, "tacs.problems.BucklingProblem.getNumOwnedNodes"]], "getnumvariables() (tacs.problems.bucklingproblem method)": [[17, "tacs.problems.BucklingProblem.getNumVariables"]], "getoption() (tacs.problems.bucklingproblem method)": [[17, "tacs.problems.BucklingProblem.getOption"]], "getvariables() (tacs.problems.bucklingproblem method)": [[17, "tacs.problems.BucklingProblem.getVariables"]], "getvarspernode() (tacs.problems.bucklingproblem method)": [[17, "tacs.problems.BucklingProblem.getVarsPerNode"]], "printdefaultoptions() (tacs.problems.bucklingproblem class method)": [[17, "tacs.problems.BucklingProblem.printDefaultOptions"]], "printoptions() (tacs.problems.bucklingproblem method)": [[17, "tacs.problems.BucklingProblem.printOptions"]], "setdesignvars() (tacs.problems.bucklingproblem method)": [[17, "tacs.problems.BucklingProblem.setDesignVars"]], "setnodes() (tacs.problems.bucklingproblem method)": [[17, "tacs.problems.BucklingProblem.setNodes"]], "setoption() (tacs.problems.bucklingproblem method)": [[17, "tacs.problems.BucklingProblem.setOption"]], "setvalname() (tacs.problems.bucklingproblem method)": [[17, "tacs.problems.BucklingProblem.setValName"]], "setvarname() (tacs.problems.bucklingproblem method)": [[17, "tacs.problems.BucklingProblem.setVarName"]], "solve() (tacs.problems.bucklingproblem method)": [[17, "tacs.problems.BucklingProblem.solve"]], "tacs.problems.buckling": [[17, "module-tacs.problems.buckling"]], "writesensfile() (tacs.problems.bucklingproblem method)": [[17, "tacs.problems.BucklingProblem.writeSensFile"]], "writesolution() (tacs.problems.bucklingproblem method)": [[17, "tacs.problems.BucklingProblem.writeSolution"]], "zeroloads() (tacs.problems.bucklingproblem method)": [[17, "tacs.problems.BucklingProblem.zeroLoads"]], "dvconstraint (class in tacs.constraints)": [[19, "tacs.constraints.DVConstraint"]], "addconstraint() (tacs.constraints.dvconstraint method)": [[19, "tacs.constraints.DVConstraint.addConstraint"]], "dtype (tacs.constraints.dvconstraint attribute)": [[19, "tacs.constraints.DVConstraint.dtype"]], "evalconstraints() (tacs.constraints.dvconstraint method)": [[19, "tacs.constraints.DVConstraint.evalConstraints"]], "evalconstraintssens() (tacs.constraints.dvconstraint method)": [[19, "tacs.constraints.DVConstraint.evalConstraintsSens"]], "getconstraintbounds() (tacs.constraints.dvconstraint method)": [[19, "tacs.constraints.DVConstraint.getConstraintBounds"]], "getconstraintkeys() (tacs.constraints.dvconstraint method)": [[19, "tacs.constraints.DVConstraint.getConstraintKeys"]], "getconstraintsizes() (tacs.constraints.dvconstraint method)": [[19, "tacs.constraints.DVConstraint.getConstraintSizes"]], "getdesignvarrange() (tacs.constraints.dvconstraint method)": [[19, "tacs.constraints.DVConstraint.getDesignVarRange"]], "getdesignvars() (tacs.constraints.dvconstraint method)": [[19, "tacs.constraints.DVConstraint.getDesignVars"]], "getnodes() (tacs.constraints.dvconstraint method)": [[19, "tacs.constraints.DVConstraint.getNodes"]], "getnumcoordinates() (tacs.constraints.dvconstraint method)": [[19, "tacs.constraints.DVConstraint.getNumCoordinates"]], "getnumdesignvars() (tacs.constraints.dvconstraint method)": [[19, "tacs.constraints.DVConstraint.getNumDesignVars"]], "getnumownednodes() (tacs.constraints.dvconstraint method)": [[19, "tacs.constraints.DVConstraint.getNumOwnedNodes"]], "getnumvariables() (tacs.constraints.dvconstraint method)": [[19, "tacs.constraints.DVConstraint.getNumVariables"]], "getoption() (tacs.constraints.dvconstraint method)": [[19, "tacs.constraints.DVConstraint.getOption"]], "getvarspernode() (tacs.constraints.dvconstraint method)": [[19, "tacs.constraints.DVConstraint.getVarsPerNode"]], "printdefaultoptions() (tacs.constraints.dvconstraint class method)": [[19, "tacs.constraints.DVConstraint.printDefaultOptions"]], "printoptions() (tacs.constraints.dvconstraint method)": [[19, "tacs.constraints.DVConstraint.printOptions"]], "setdesignvars() (tacs.constraints.dvconstraint method)": [[19, "tacs.constraints.DVConstraint.setDesignVars"]], "setnodes() (tacs.constraints.dvconstraint method)": [[19, "tacs.constraints.DVConstraint.setNodes"]], "setoption() (tacs.constraints.dvconstraint method)": [[19, "tacs.constraints.DVConstraint.setOption"]], "setvarname() (tacs.constraints.dvconstraint method)": [[19, "tacs.constraints.DVConstraint.setVarName"]], "tacs.constraints.dv": [[19, "module-tacs.constraints.dv"]], "modalproblem (class in tacs.problems)": [[20, "tacs.problems.ModalProblem"]], "addfunction() (tacs.problems.modalproblem method)": [[20, "tacs.problems.ModalProblem.addFunction"]], "dtype (tacs.problems.modalproblem attribute)": [[20, "tacs.problems.ModalProblem.dtype"]], "evalfunctions() (tacs.problems.modalproblem method)": [[20, "tacs.problems.ModalProblem.evalFunctions"]], "evalfunctionssens() (tacs.problems.modalproblem method)": [[20, "tacs.problems.ModalProblem.evalFunctionsSens"]], "getdesignvarrange() (tacs.problems.modalproblem method)": [[20, "tacs.problems.ModalProblem.getDesignVarRange"]], "getdesignvars() (tacs.problems.modalproblem method)": [[20, "tacs.problems.ModalProblem.getDesignVars"]], "getfunctionkeys() (tacs.problems.modalproblem method)": [[20, "tacs.problems.ModalProblem.getFunctionKeys"]], "getnodes() (tacs.problems.modalproblem method)": [[20, "tacs.problems.ModalProblem.getNodes"]], "getnumcoordinates() (tacs.problems.modalproblem method)": [[20, "tacs.problems.ModalProblem.getNumCoordinates"]], "getnumdesignvars() (tacs.problems.modalproblem method)": [[20, "tacs.problems.ModalProblem.getNumDesignVars"]], "getnumeigs() (tacs.problems.modalproblem method)": [[20, "tacs.problems.ModalProblem.getNumEigs"]], "getnumownednodes() (tacs.problems.modalproblem method)": [[20, "tacs.problems.ModalProblem.getNumOwnedNodes"]], "getnumvariables() (tacs.problems.modalproblem method)": [[20, "tacs.problems.ModalProblem.getNumVariables"]], "getoption() (tacs.problems.modalproblem method)": [[20, "tacs.problems.ModalProblem.getOption"]], "getvariables() (tacs.problems.modalproblem method)": [[20, "tacs.problems.ModalProblem.getVariables"]], "getvarspernode() (tacs.problems.modalproblem method)": [[20, "tacs.problems.ModalProblem.getVarsPerNode"]], "printdefaultoptions() (tacs.problems.modalproblem class method)": [[20, "tacs.problems.ModalProblem.printDefaultOptions"]], "printoptions() (tacs.problems.modalproblem method)": [[20, "tacs.problems.ModalProblem.printOptions"]], "setdesignvars() (tacs.problems.modalproblem method)": [[20, "tacs.problems.ModalProblem.setDesignVars"]], "setnodes() (tacs.problems.modalproblem method)": [[20, "tacs.problems.ModalProblem.setNodes"]], "setoption() (tacs.problems.modalproblem method)": [[20, "tacs.problems.ModalProblem.setOption"]], "setvalname() (tacs.problems.modalproblem method)": [[20, "tacs.problems.ModalProblem.setValName"]], "setvarname() (tacs.problems.modalproblem method)": [[20, "tacs.problems.ModalProblem.setVarName"]], "solve() (tacs.problems.modalproblem method)": [[20, "tacs.problems.ModalProblem.solve"]], "tacs.problems.modal": [[20, "module-tacs.problems.modal"]], "writesensfile() (tacs.problems.modalproblem method)": [[20, "tacs.problems.ModalProblem.writeSensFile"]], "writesolution() (tacs.problems.modalproblem method)": [[20, "tacs.problems.ModalProblem.writeSolution"]], "panellengthconstraint (class in tacs.constraints)": [[21, "tacs.constraints.PanelLengthConstraint"]], "addconstraint() (tacs.constraints.panellengthconstraint method)": [[21, "tacs.constraints.PanelLengthConstraint.addConstraint"]], "dtype (tacs.constraints.panellengthconstraint attribute)": [[21, "tacs.constraints.PanelLengthConstraint.dtype"]], "evalconstraints() (tacs.constraints.panellengthconstraint method)": [[21, "tacs.constraints.PanelLengthConstraint.evalConstraints"]], "evalconstraintssens() (tacs.constraints.panellengthconstraint method)": [[21, "tacs.constraints.PanelLengthConstraint.evalConstraintsSens"]], "getconstraintbounds() (tacs.constraints.panellengthconstraint method)": [[21, "tacs.constraints.PanelLengthConstraint.getConstraintBounds"]], "getconstraintkeys() (tacs.constraints.panellengthconstraint method)": [[21, "tacs.constraints.PanelLengthConstraint.getConstraintKeys"]], "getconstraintsizes() (tacs.constraints.panellengthconstraint method)": [[21, "tacs.constraints.PanelLengthConstraint.getConstraintSizes"]], "getdesignvarrange() (tacs.constraints.panellengthconstraint method)": [[21, "tacs.constraints.PanelLengthConstraint.getDesignVarRange"]], "getdesignvars() (tacs.constraints.panellengthconstraint method)": [[21, "tacs.constraints.PanelLengthConstraint.getDesignVars"]], "getnodes() (tacs.constraints.panellengthconstraint method)": [[21, "tacs.constraints.PanelLengthConstraint.getNodes"]], "getnumcoordinates() (tacs.constraints.panellengthconstraint method)": [[21, "tacs.constraints.PanelLengthConstraint.getNumCoordinates"]], "getnumdesignvars() (tacs.constraints.panellengthconstraint method)": [[21, "tacs.constraints.PanelLengthConstraint.getNumDesignVars"]], "getnumownednodes() (tacs.constraints.panellengthconstraint method)": [[21, "tacs.constraints.PanelLengthConstraint.getNumOwnedNodes"]], "getnumvariables() (tacs.constraints.panellengthconstraint method)": [[21, "tacs.constraints.PanelLengthConstraint.getNumVariables"]], "getoption() (tacs.constraints.panellengthconstraint method)": [[21, "tacs.constraints.PanelLengthConstraint.getOption"]], "getvarspernode() (tacs.constraints.panellengthconstraint method)": [[21, "tacs.constraints.PanelLengthConstraint.getVarsPerNode"]], "printdefaultoptions() (tacs.constraints.panellengthconstraint class method)": [[21, "tacs.constraints.PanelLengthConstraint.printDefaultOptions"]], "printoptions() (tacs.constraints.panellengthconstraint method)": [[21, "tacs.constraints.PanelLengthConstraint.printOptions"]], "setdesignvars() (tacs.constraints.panellengthconstraint method)": [[21, "tacs.constraints.PanelLengthConstraint.setDesignVars"]], "setnodes() (tacs.constraints.panellengthconstraint method)": [[21, "tacs.constraints.PanelLengthConstraint.setNodes"]], "setoption() (tacs.constraints.panellengthconstraint method)": [[21, "tacs.constraints.PanelLengthConstraint.setOption"]], "setvarname() (tacs.constraints.panellengthconstraint method)": [[21, "tacs.constraints.PanelLengthConstraint.setVarName"]], "tacs.constraints.panel_length": [[21, "module-tacs.constraints.panel_length"]], "addglobaldv() (tacs.pytacs.pytacs method)": [[24, "tacs.pytacs.pyTACS.addGlobalDV"]], "applybcstovec() (tacs.pytacs.pytacs method)": [[24, "tacs.pytacs.pyTACS.applyBCsToVec"]], "assignmassdv() (tacs.pytacs.pytacs method)": [[24, "tacs.pytacs.pyTACS.assignMassDV"]], "createadjacencyconstraint() (tacs.pytacs.pytacs method)": [[24, "tacs.pytacs.pyTACS.createAdjacencyConstraint"]], "createbucklingproblem() (tacs.pytacs.pytacs method)": [[24, "tacs.pytacs.pyTACS.createBucklingProblem"]], "createdvconstraint() (tacs.pytacs.pytacs method)": [[24, "tacs.pytacs.pyTACS.createDVConstraint"]], "createdesignvec() (tacs.pytacs.pytacs method)": [[24, "tacs.pytacs.pyTACS.createDesignVec"]], "createmodalproblem() (tacs.pytacs.pytacs method)": [[24, "tacs.pytacs.pyTACS.createModalProblem"]], "createnodevec() (tacs.pytacs.pytacs method)": [[24, "tacs.pytacs.pyTACS.createNodeVec"]], "createpanellengthconstraint() (tacs.pytacs.pytacs method)": [[24, "tacs.pytacs.pyTACS.createPanelLengthConstraint"]], "createstaticproblem() (tacs.pytacs.pytacs method)": [[24, "tacs.pytacs.pyTACS.createStaticProblem"]], "createtacsprobsfrombdf() (tacs.pytacs.pytacs method)": [[24, "tacs.pytacs.pyTACS.createTACSProbsFromBDF"]], "createtransientproblem() (tacs.pytacs.pytacs method)": [[24, "tacs.pytacs.pyTACS.createTransientProblem"]], "createvec() (tacs.pytacs.pytacs method)": [[24, "tacs.pytacs.pyTACS.createVec"]], "createvolumeconstraint() (tacs.pytacs.pytacs method)": [[24, "tacs.pytacs.pyTACS.createVolumeConstraint"]], "dtype (tacs.pytacs.pytacs attribute)": [[24, "tacs.pytacs.pyTACS.dtype"]], "elemcallback() (in module tacs.pytacs)": [[24, "tacs.pytacs.elemCallBack"]], "getbdfinfo() (tacs.pytacs.pytacs method)": [[24, "tacs.pytacs.pyTACS.getBDFInfo"]], "getcompnames() (tacs.pytacs.pytacs method)": [[24, "tacs.pytacs.pyTACS.getCompNames"]], "getdesignvarrange() (tacs.pytacs.pytacs method)": [[24, "tacs.pytacs.pyTACS.getDesignVarRange"]], "getglobaldvkeys() (tacs.pytacs.pytacs method)": [[24, "tacs.pytacs.pyTACS.getGlobalDVKeys"]], "getglobaldvnums() (tacs.pytacs.pytacs method)": [[24, "tacs.pytacs.pyTACS.getGlobalDVNums"]], "getglobaldvs() (tacs.pytacs.pytacs method)": [[24, "tacs.pytacs.pyTACS.getGlobalDVs"]], "getglobalnodeidsforcomps() (tacs.pytacs.pytacs method)": [[24, "tacs.pytacs.pyTACS.getGlobalNodeIDsForComps"]], "getlocalmultipliernodeids() (tacs.pytacs.pytacs method)": [[24, "tacs.pytacs.pyTACS.getLocalMultiplierNodeIDs"]], "getlocalnodeidsforcomps() (tacs.pytacs.pytacs method)": [[24, "tacs.pytacs.pyTACS.getLocalNodeIDsForComps"]], "getnumcomponents() (tacs.pytacs.pytacs method)": [[24, "tacs.pytacs.pyTACS.getNumComponents"]], "getnumdesignvars() (tacs.pytacs.pytacs method)": [[24, "tacs.pytacs.pyTACS.getNumDesignVars"]], "getnumownedmultipliernodes() (tacs.pytacs.pytacs method)": [[24, "tacs.pytacs.pyTACS.getNumOwnedMultiplierNodes"]], "getnumownednodes() (tacs.pytacs.pytacs method)": [[24, "tacs.pytacs.pyTACS.getNumOwnedNodes"]], "getoption() (tacs.pytacs.pytacs method)": [[24, "tacs.pytacs.pyTACS.getOption"]], "getorigdesignvars() (tacs.pytacs.pytacs method)": [[24, "tacs.pytacs.pyTACS.getOrigDesignVars"]], "getorignodes() (tacs.pytacs.pytacs method)": [[24, "tacs.pytacs.pyTACS.getOrigNodes"]], "gettotalnumdesignvars() (tacs.pytacs.pytacs method)": [[24, "tacs.pytacs.pyTACS.getTotalNumDesignVars"]], "gettotalnumglobaldvs() (tacs.pytacs.pytacs method)": [[24, "tacs.pytacs.pyTACS.getTotalNumGlobalDVs"]], "getvarspernode() (tacs.pytacs.pytacs method)": [[24, "tacs.pytacs.pyTACS.getVarsPerNode"]], "initialize() (tacs.pytacs.pytacs method)": [[24, "tacs.pytacs.pyTACS.initialize"]], "printdefaultoptions() (tacs.pytacs.pytacs class method)": [[24, "tacs.pytacs.pyTACS.printDefaultOptions"]], "printoptions() (tacs.pytacs.pytacs method)": [[24, "tacs.pytacs.pyTACS.printOptions"]], "pytacs (class in tacs.pytacs)": [[24, "tacs.pytacs.pyTACS"]], "selectcompids() (tacs.pytacs.pytacs method)": [[24, "tacs.pytacs.pyTACS.selectCompIDs"]], "setoption() (tacs.pytacs.pytacs method)": [[24, "tacs.pytacs.pyTACS.setOption"]], "tacs.pytacs": [[24, "module-tacs.pytacs"]], "writebdf() (tacs.pytacs.pytacs method)": [[24, "tacs.pytacs.pyTACS.writeBDF"]], "staticproblem (class in tacs.problems)": [[25, "tacs.problems.StaticProblem"]], "addadjointresproducts() (tacs.problems.staticproblem method)": [[25, "tacs.problems.StaticProblem.addAdjointResProducts"]], "addadjointresxptsensproducts() (tacs.problems.staticproblem method)": [[25, "tacs.problems.StaticProblem.addAdjointResXptSensProducts"]], "addcentrifugalload() (tacs.problems.staticproblem method)": [[25, "tacs.problems.StaticProblem.addCentrifugalLoad"]], "adddvsens() (tacs.problems.staticproblem method)": [[25, "tacs.problems.StaticProblem.addDVSens"]], "addfunction() (tacs.problems.staticproblem method)": [[25, "tacs.problems.StaticProblem.addFunction"]], "addinertialload() (tacs.problems.staticproblem method)": [[25, "tacs.problems.StaticProblem.addInertialLoad"]], "addloadfrombdf() (tacs.problems.staticproblem method)": [[25, "tacs.problems.StaticProblem.addLoadFromBDF"]], "addloadtocomponents() (tacs.problems.staticproblem method)": [[25, "tacs.problems.StaticProblem.addLoadToComponents"]], "addloadtonodes() (tacs.problems.staticproblem method)": [[25, "tacs.problems.StaticProblem.addLoadToNodes"]], "addloadtorhs() (tacs.problems.staticproblem method)": [[25, "tacs.problems.StaticProblem.addLoadToRHS"]], "addpressuretocomponents() (tacs.problems.staticproblem method)": [[25, "tacs.problems.StaticProblem.addPressureToComponents"]], "addpressuretoelements() (tacs.problems.staticproblem method)": [[25, "tacs.problems.StaticProblem.addPressureToElements"]], "addsvsens() (tacs.problems.staticproblem method)": [[25, "tacs.problems.StaticProblem.addSVSens"]], "addtractiontocomponents() (tacs.problems.staticproblem method)": [[25, "tacs.problems.StaticProblem.addTractionToComponents"]], "addtractiontoelements() (tacs.problems.staticproblem method)": [[25, "tacs.problems.StaticProblem.addTractionToElements"]], "addtransposejacvecproduct() (tacs.problems.staticproblem method)": [[25, "tacs.problems.StaticProblem.addTransposeJacVecProduct"]], "addxptsens() (tacs.problems.staticproblem method)": [[25, "tacs.problems.StaticProblem.addXptSens"]], "dtype (tacs.problems.staticproblem attribute)": [[25, "tacs.problems.StaticProblem.dtype"]], "evalfunctions() (tacs.problems.staticproblem method)": [[25, "tacs.problems.StaticProblem.evalFunctions"]], "evalfunctionssens() (tacs.problems.staticproblem method)": [[25, "tacs.problems.StaticProblem.evalFunctionsSens"]], "getdesignvarrange() (tacs.problems.staticproblem method)": [[25, "tacs.problems.StaticProblem.getDesignVarRange"]], "getdesignvars() (tacs.problems.staticproblem method)": [[25, "tacs.problems.StaticProblem.getDesignVars"]], "getfunctionkeys() (tacs.problems.staticproblem method)": [[25, "tacs.problems.StaticProblem.getFunctionKeys"]], "getjacobian() (tacs.problems.staticproblem method)": [[25, "tacs.problems.StaticProblem.getJacobian"]], "getnodes() (tacs.problems.staticproblem method)": [[25, "tacs.problems.StaticProblem.getNodes"]], "getnumcoordinates() (tacs.problems.staticproblem method)": [[25, "tacs.problems.StaticProblem.getNumCoordinates"]], "getnumdesignvars() (tacs.problems.staticproblem method)": [[25, "tacs.problems.StaticProblem.getNumDesignVars"]], "getnumownednodes() (tacs.problems.staticproblem method)": [[25, "tacs.problems.StaticProblem.getNumOwnedNodes"]], "getnumvariables() (tacs.problems.staticproblem method)": [[25, "tacs.problems.StaticProblem.getNumVariables"]], "getoption() (tacs.problems.staticproblem method)": [[25, "tacs.problems.StaticProblem.getOption"]], "getresidual() (tacs.problems.staticproblem method)": [[25, "tacs.problems.StaticProblem.getResidual"]], "getvariables() (tacs.problems.staticproblem method)": [[25, "tacs.problems.StaticProblem.getVariables"]], "getvarspernode() (tacs.problems.staticproblem method)": [[25, "tacs.problems.StaticProblem.getVarsPerNode"]], "loadscale (tacs.problems.staticproblem property)": [[25, "tacs.problems.StaticProblem.loadScale"]], "printdefaultoptions() (tacs.problems.staticproblem class method)": [[25, "tacs.problems.StaticProblem.printDefaultOptions"]], "printoptions() (tacs.problems.staticproblem method)": [[25, "tacs.problems.StaticProblem.printOptions"]], "setdesignvars() (tacs.problems.staticproblem method)": [[25, "tacs.problems.StaticProblem.setDesignVars"]], "setloadscale() (tacs.problems.staticproblem method)": [[25, "tacs.problems.StaticProblem.setLoadScale"]], "setnodes() (tacs.problems.staticproblem method)": [[25, "tacs.problems.StaticProblem.setNodes"]], "setoption() (tacs.problems.staticproblem method)": [[25, "tacs.problems.StaticProblem.setOption"]], "setvarname() (tacs.problems.staticproblem method)": [[25, "tacs.problems.StaticProblem.setVarName"]], "setvariables() (tacs.problems.staticproblem method)": [[25, "tacs.problems.StaticProblem.setVariables"]], "solve() (tacs.problems.staticproblem method)": [[25, "tacs.problems.StaticProblem.solve"]], "solveadjoint() (tacs.problems.staticproblem method)": [[25, "tacs.problems.StaticProblem.solveAdjoint"]], "tacs.problems.static": [[25, "module-tacs.problems.static"]], "writeloadtobdf() (tacs.problems.staticproblem method)": [[25, "tacs.problems.StaticProblem.writeLoadToBDF"]], "writesensfile() (tacs.problems.staticproblem method)": [[25, "tacs.problems.StaticProblem.writeSensFile"]], "writesolution() (tacs.problems.staticproblem method)": [[25, "tacs.problems.StaticProblem.writeSolution"]], "zeroloads() (tacs.problems.staticproblem method)": [[25, "tacs.problems.StaticProblem.zeroLoads"]], "zerovariables() (tacs.problems.staticproblem method)": [[25, "tacs.problems.StaticProblem.zeroVariables"]], "transientproblem (class in tacs.problems)": [[26, "tacs.problems.TransientProblem"]], "addcentrifugalload() (tacs.problems.transientproblem method)": [[26, "tacs.problems.TransientProblem.addCentrifugalLoad"]], "addfunction() (tacs.problems.transientproblem method)": [[26, "tacs.problems.TransientProblem.addFunction"]], "addinertialload() (tacs.problems.transientproblem method)": [[26, "tacs.problems.TransientProblem.addInertialLoad"]], "addloadfrombdf() (tacs.problems.transientproblem method)": [[26, "tacs.problems.TransientProblem.addLoadFromBDF"]], "addloadtocomponents() (tacs.problems.transientproblem method)": [[26, "tacs.problems.TransientProblem.addLoadToComponents"]], "addloadtonodes() (tacs.problems.transientproblem method)": [[26, "tacs.problems.TransientProblem.addLoadToNodes"]], "addloadtorhs() (tacs.problems.transientproblem method)": [[26, "tacs.problems.TransientProblem.addLoadToRHS"]], "addpressuretocomponents() (tacs.problems.transientproblem method)": [[26, "tacs.problems.TransientProblem.addPressureToComponents"]], "addpressuretoelements() (tacs.problems.transientproblem method)": [[26, "tacs.problems.TransientProblem.addPressureToElements"]], "addtractiontocomponents() (tacs.problems.transientproblem method)": [[26, "tacs.problems.TransientProblem.addTractionToComponents"]], "addtractiontoelements() (tacs.problems.transientproblem method)": [[26, "tacs.problems.TransientProblem.addTractionToElements"]], "dtype (tacs.problems.transientproblem attribute)": [[26, "tacs.problems.TransientProblem.dtype"]], "evalfunctions() (tacs.problems.transientproblem method)": [[26, "tacs.problems.TransientProblem.evalFunctions"]], "evalfunctionssens() (tacs.problems.transientproblem method)": [[26, "tacs.problems.TransientProblem.evalFunctionsSens"]], "getdesignvarrange() (tacs.problems.transientproblem method)": [[26, "tacs.problems.TransientProblem.getDesignVarRange"]], "getdesignvars() (tacs.problems.transientproblem method)": [[26, "tacs.problems.TransientProblem.getDesignVars"]], "getfunctionkeys() (tacs.problems.transientproblem method)": [[26, "tacs.problems.TransientProblem.getFunctionKeys"]], "getnodes() (tacs.problems.transientproblem method)": [[26, "tacs.problems.TransientProblem.getNodes"]], "getnumcoordinates() (tacs.problems.transientproblem method)": [[26, "tacs.problems.TransientProblem.getNumCoordinates"]], "getnumdesignvars() (tacs.problems.transientproblem method)": [[26, "tacs.problems.TransientProblem.getNumDesignVars"]], "getnumownednodes() (tacs.problems.transientproblem method)": [[26, "tacs.problems.TransientProblem.getNumOwnedNodes"]], "getnumtimestages() (tacs.problems.transientproblem method)": [[26, "tacs.problems.TransientProblem.getNumTimeStages"]], "getnumtimesteps() (tacs.problems.transientproblem method)": [[26, "tacs.problems.TransientProblem.getNumTimeSteps"]], "getnumvariables() (tacs.problems.transientproblem method)": [[26, "tacs.problems.TransientProblem.getNumVariables"]], "getoption() (tacs.problems.transientproblem method)": [[26, "tacs.problems.TransientProblem.getOption"]], "gettimestages() (tacs.problems.transientproblem method)": [[26, "tacs.problems.TransientProblem.getTimeStages"]], "gettimesteps() (tacs.problems.transientproblem method)": [[26, "tacs.problems.TransientProblem.getTimeSteps"]], "getvariables() (tacs.problems.transientproblem method)": [[26, "tacs.problems.TransientProblem.getVariables"]], "getvarspernode() (tacs.problems.transientproblem method)": [[26, "tacs.problems.TransientProblem.getVarsPerNode"]], "iterate() (tacs.problems.transientproblem method)": [[26, "tacs.problems.TransientProblem.iterate"]], "prepiterativesolve() (tacs.problems.transientproblem method)": [[26, "tacs.problems.TransientProblem.prepIterativeSolve"]], "printdefaultoptions() (tacs.problems.transientproblem class method)": [[26, "tacs.problems.TransientProblem.printDefaultOptions"]], "printoptions() (tacs.problems.transientproblem method)": [[26, "tacs.problems.TransientProblem.printOptions"]], "setdesignvars() (tacs.problems.transientproblem method)": [[26, "tacs.problems.TransientProblem.setDesignVars"]], "setinitconditions() (tacs.problems.transientproblem method)": [[26, "tacs.problems.TransientProblem.setInitConditions"]], "setnodes() (tacs.problems.transientproblem method)": [[26, "tacs.problems.TransientProblem.setNodes"]], "setoption() (tacs.problems.transientproblem method)": [[26, "tacs.problems.TransientProblem.setOption"]], "setvarname() (tacs.problems.transientproblem method)": [[26, "tacs.problems.TransientProblem.setVarName"]], "solve() (tacs.problems.transientproblem method)": [[26, "tacs.problems.TransientProblem.solve"]], "tacs.problems.transient": [[26, "module-tacs.problems.transient"]], "writesensfile() (tacs.problems.transientproblem method)": [[26, "tacs.problems.TransientProblem.writeSensFile"]], "writesolution() (tacs.problems.transientproblem method)": [[26, "tacs.problems.TransientProblem.writeSolution"]], "zeroloads() (tacs.problems.transientproblem method)": [[26, "tacs.problems.TransientProblem.zeroLoads"]], "volumeconstraint (class in tacs.constraints)": [[27, "tacs.constraints.VolumeConstraint"]], "addconstraint() (tacs.constraints.volumeconstraint method)": [[27, "tacs.constraints.VolumeConstraint.addConstraint"]], "dtype (tacs.constraints.volumeconstraint attribute)": [[27, "tacs.constraints.VolumeConstraint.dtype"]], "evalconstraints() (tacs.constraints.volumeconstraint method)": [[27, "tacs.constraints.VolumeConstraint.evalConstraints"]], "evalconstraintssens() (tacs.constraints.volumeconstraint method)": [[27, "tacs.constraints.VolumeConstraint.evalConstraintsSens"]], "getconstraintbounds() (tacs.constraints.volumeconstraint method)": [[27, "tacs.constraints.VolumeConstraint.getConstraintBounds"]], "getconstraintkeys() (tacs.constraints.volumeconstraint method)": [[27, "tacs.constraints.VolumeConstraint.getConstraintKeys"]], "getconstraintsizes() (tacs.constraints.volumeconstraint method)": [[27, "tacs.constraints.VolumeConstraint.getConstraintSizes"]], "getdesignvarrange() (tacs.constraints.volumeconstraint method)": [[27, "tacs.constraints.VolumeConstraint.getDesignVarRange"]], "getdesignvars() (tacs.constraints.volumeconstraint method)": [[27, "tacs.constraints.VolumeConstraint.getDesignVars"]], "getnodes() (tacs.constraints.volumeconstraint method)": [[27, "tacs.constraints.VolumeConstraint.getNodes"]], "getnumcoordinates() (tacs.constraints.volumeconstraint method)": [[27, "tacs.constraints.VolumeConstraint.getNumCoordinates"]], "getnumdesignvars() (tacs.constraints.volumeconstraint method)": [[27, "tacs.constraints.VolumeConstraint.getNumDesignVars"]], "getnumownednodes() (tacs.constraints.volumeconstraint method)": [[27, "tacs.constraints.VolumeConstraint.getNumOwnedNodes"]], "getnumvariables() (tacs.constraints.volumeconstraint method)": [[27, "tacs.constraints.VolumeConstraint.getNumVariables"]], "getoption() (tacs.constraints.volumeconstraint method)": [[27, "tacs.constraints.VolumeConstraint.getOption"]], "getvarspernode() (tacs.constraints.volumeconstraint method)": [[27, "tacs.constraints.VolumeConstraint.getVarsPerNode"]], "printdefaultoptions() (tacs.constraints.volumeconstraint class method)": [[27, "tacs.constraints.VolumeConstraint.printDefaultOptions"]], "printoptions() (tacs.constraints.volumeconstraint method)": [[27, "tacs.constraints.VolumeConstraint.printOptions"]], "setdesignvars() (tacs.constraints.volumeconstraint method)": [[27, "tacs.constraints.VolumeConstraint.setDesignVars"]], "setnodes() (tacs.constraints.volumeconstraint method)": [[27, "tacs.constraints.VolumeConstraint.setNodes"]], "setoption() (tacs.constraints.volumeconstraint method)": [[27, "tacs.constraints.VolumeConstraint.setOption"]], "setvarname() (tacs.constraints.volumeconstraint method)": [[27, "tacs.constraints.VolumeConstraint.setVarName"]], "tacs.constraints.volume": [[27, "module-tacs.constraints.volume"]], "writevisualization() (tacs.constraints.volumeconstraint method)": [[27, "tacs.constraints.VolumeConstraint.writeVisualization"]]}})