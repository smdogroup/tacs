Search.setIndex({"docnames": ["core/TACS", "core/constitutive", "core/core", "core/elements", "core/functions", "examples/Example-CRM_Optimization", "examples/Example-Plate", "examples/Example-Transient_Battery", "index", "install", "interfaces", "pytacs/adjacency", "pytacs/buckling", "pytacs/constraints", "pytacs/dvcon", "pytacs/modal", "pytacs/panel_length", "pytacs/problems", "pytacs/pytacs", "pytacs/pytacs_module", "pytacs/static", "pytacs/transient", "pytacs/volume", "theory/elements_theory", "theory/shell_element", "theory/theory"], "filenames": ["core/TACS.rst", "core/constitutive.rst", "core/core.rst", "core/elements.rst", "core/functions.rst", "examples/Example-CRM_Optimization.rst", "examples/Example-Plate.rst", "examples/Example-Transient_Battery.rst", "index.rst", "install.rst", "interfaces.rst", "pytacs/adjacency.rst", "pytacs/buckling.rst", "pytacs/constraints.rst", "pytacs/dvcon.rst", "pytacs/modal.rst", "pytacs/panel_length.rst", "pytacs/problems.rst", "pytacs/pytacs.rst", "pytacs/pytacs_module.rst", "pytacs/static.rst", "pytacs/transient.rst", "pytacs/volume.rst", "theory/elements_theory.rst", "theory/shell_element.rst", "theory/theory.rst"], "titles": ["Direct", "constitutive module", "Core modules", "elements module", "functions module", "CRM Optimization", "Plate under static load", "Battery pack during thermal runaway", "TACS Overview", "Install", "Interfaces", "AdjacencyConstraint", "BucklingProblem", "Constraint classes", "DVConstraint", "ModalProblem", "PanelLengthConstraint", "Problem classes", "pyTACS", "pyTACS class", "StaticProblem", "TransientProblem", "VolumeConstraint", "&lt;no title&gt;", "Beam and shell elements in TACS", "Theory"], "terms": {"In": [0, 6, 7, 9, 12, 19, 20, 21, 24], "python": [0, 10, 18, 19], "interfac": [0, 8, 18, 19], "tac": [0, 1, 3, 4, 5, 6, 7, 10, 11, 12, 14, 15, 16, 18, 19, 20, 21, 22, 25], "user": [0, 3, 6, 7, 9, 11, 12, 14, 15, 16, 19, 20, 21, 22], "respons": [0, 1, 6, 11, 12, 14, 15, 16, 19, 20, 21, 22, 24], "set": [0, 1, 3, 4, 5, 6, 7, 9, 11, 12, 14, 15, 16, 18, 19, 20, 21, 22], "up": [0, 5, 6, 7, 9, 19], "bookkeep": 0, "most": [0, 1, 4, 10, 12, 18, 19, 20, 21], "object": [0, 1, 3, 4, 5, 6, 7, 9, 11, 12, 14, 15, 16, 18, 19, 20, 21, 22, 24], "thi": [0, 1, 3, 4, 5, 6, 7, 9, 10, 11, 12, 14, 15, 16, 18, 19, 20, 21, 22, 24], "includ": [0, 7, 9, 12, 14, 19, 20, 21], "like": [0, 1, 3, 4, 7, 9, 11, 12, 14, 15, 16, 20, 21, 22], "state": [0, 3, 5, 11, 12, 14, 15, 16, 19, 20, 21, 22, 24], "vector": [0, 3, 4, 11, 12, 14, 15, 16, 19, 20, 21, 22, 24], "fe": [0, 12, 20, 21], "matric": 0, "etc": [0, 3, 9, 12, 14, 19, 20, 21], "approach": [0, 6, 10, 18, 19, 24], "allow": [0, 6, 19], "more": [0, 6, 8, 9, 11, 12, 14, 15, 16, 18, 20, 21, 22, 24], "visibl": 0, "work": [0, 9, 19, 24], "c": [0, 1, 5, 10, 11, 14, 19, 20, 24], "sourc": [0, 8, 11, 12, 14, 15, 16, 19, 20, 21, 22], "code": [0, 8], "can": [0, 1, 4, 6, 7, 9, 11, 12, 14, 15, 16, 18, 19, 20, 21, 22, 24], "daunt": 0, "new": [0, 5, 9, 11, 12, 14, 15, 16, 19, 20, 21, 22], "For": [0, 4, 5, 6, 7, 9, 14, 19, 21, 22, 24], "simplifi": [0, 24], "where": [0, 4, 6, 7, 11, 12, 14, 15, 16, 19, 20, 21, 22, 24], "setup": [0, 1, 3, 6, 9, 18, 19, 20, 21], "ha": [0, 4, 6, 7, 8, 9, 11, 12, 14, 15, 16, 18, 19, 20, 21, 22], "been": [0, 6, 7, 8, 9, 19, 24], "autom": [0, 18], "see": [0, 6, 14, 20, 21], "pytac": [0, 6, 7, 8, 10, 11, 12, 14, 15, 16, 20, 21, 22], "The": [0, 1, 3, 4, 5, 6, 7, 8, 9, 11, 12, 14, 15, 16, 18, 19, 20, 21, 22, 24], "common": [0, 11, 12, 18, 19, 20, 21, 22], "usag": [0, 18], "i": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 18, 19, 20, 21, 22, 24], "evalu": [0, 1, 4, 5, 6, 7, 9, 11, 12, 14, 15, 16, 18, 20, 21, 22, 24], "valu": [0, 1, 4, 5, 7, 11, 12, 14, 15, 16, 18, 19, 20, 21, 22, 24], "gradient": [0, 4, 5, 6, 8, 9, 18, 19, 24], "desir": [0, 5, 12, 15, 18, 19, 20, 21], "structur": [0, 1, 3, 4, 5, 8, 9, 11, 12, 14, 15, 16, 18, 19, 20, 21, 22], "function": [0, 2, 5, 6, 7, 8, 9, 10, 11, 12, 15, 18, 19, 20, 21, 22, 24], "respect": [0, 4, 5, 6, 7, 9, 11, 12, 14, 15, 16, 18, 20, 21, 22, 24], "specifi": [0, 1, 4, 5, 7, 12, 18, 19, 20, 21], "design": [0, 1, 4, 5, 6, 7, 8, 11, 12, 14, 15, 16, 18, 19, 20, 21, 22, 24], "variabl": [0, 1, 4, 5, 6, 7, 9, 11, 12, 14, 15, 16, 18, 19, 20, 21, 22, 24], "us": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 18, 19, 20, 21, 22, 24], "proce": [0, 18], "follow": [0, 1, 3, 4, 9, 11, 12, 15, 18, 19, 20, 21, 22, 24], "load": [0, 1, 3, 4, 5, 7, 8, 12, 18, 19, 20, 21], "finit": [0, 4, 8, 9, 18, 24], "element": [0, 1, 2, 4, 5, 6, 7, 8, 9, 11, 12, 14, 16, 18, 19, 20, 21, 22, 25], "model": [0, 1, 4, 5, 6, 7, 11, 12, 14, 15, 16, 18, 19, 20, 21, 22, 24], "form": [0, 11, 14, 18, 19, 24], "nastran": [0, 1, 6, 12, 18, 19, 20, 21], "style": [0, 18], "file": [0, 5, 6, 7, 9, 11, 12, 14, 15, 16, 18, 19, 20, 21, 22], "an": [0, 1, 3, 4, 5, 6, 7, 9, 11, 12, 14, 15, 16, 18, 19, 20, 21, 22, 24], "instanc": [0, 4, 7, 11, 12, 15, 18, 19, 20, 21, 22], "class": [0, 4, 5, 6, 7, 10, 11, 12, 14, 15, 16, 18, 20, 21, 22], "each": [0, 1, 3, 4, 5, 6, 7, 9, 11, 12, 14, 16, 19, 20, 21, 22, 24], "compon": [0, 3, 4, 5, 7, 11, 12, 14, 20, 21], "gener": [0, 1, 3, 4, 5, 6, 9, 11, 12, 14, 15, 16, 19, 20, 21, 22, 24], "constitut": [0, 2, 3, 4, 5, 6, 7, 8, 9, 16, 19], "properti": [0, 1, 3, 5, 6, 7, 9, 19, 20], "creat": [0, 5, 6, 7, 9, 10, 11, 12, 14, 15, 16, 18, 19, 20, 21, 22, 24], "appli": [0, 3, 4, 5, 6, 7, 12, 14, 16, 18, 19, 20, 21], "boundari": [0, 6, 11, 19], "condit": [0, 6, 19, 20, 21], "solv": [0, 5, 6, 7, 11, 12, 14, 15, 16, 18, 19, 20, 21, 22], "system": [0, 3, 5, 9, 24], "These": [0, 1, 3, 4, 5, 7, 9, 10, 18, 19, 24], "pass": [0, 1, 4, 6, 7, 16, 18, 19, 20, 21], "optim": [0, 1, 7, 8, 9, 11, 12, 14, 15, 16, 18, 20, 21, 22], "paropt": [0, 5, 18], "order": [0, 1, 9, 12, 18, 19, 20, 21, 24], "minim": [0, 5, 18], "particular": [0, 4, 18, 19], "subject": [0, 5, 18], "some": [0, 3, 4, 6, 18, 19, 24], "constraint": [0, 3, 5, 11, 12, 14, 15, 16, 18, 19, 20, 21, 22, 24], "improv": [0, 18], "ar": [0, 1, 3, 4, 5, 6, 7, 9, 10, 11, 12, 14, 15, 16, 18, 19, 20, 21, 22, 24], "iter": [0, 5, 11, 12, 14, 15, 16, 18, 20, 21, 22], "comput": [0, 3, 4, 5, 6, 7, 11, 12, 14, 15, 16, 18, 19, 20, 21, 22], "step": [0, 6, 7, 11, 18, 19, 21], "4": [0, 1, 3, 12, 18, 19, 20, 21], "repeat": [0, 18], "until": [0, 18], "criteria": [0, 4, 6, 18], "satisfi": [0, 18, 24], "It": [0, 6, 11, 12, 14, 15, 16, 19, 20, 21, 22, 24], "contain": [0, 1, 3, 5, 9, 10, 11, 12, 14, 15, 16, 19, 20, 21, 22, 24], "method": [0, 3, 4, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 18, 19, 20, 21, 22, 24], "problem": [0, 3, 4, 5, 6, 7, 11, 12, 14, 15, 16, 18, 19, 20, 21, 22], "onc": [0, 9, 19], "its": [0, 4, 6, 7, 24], "typic": [0, 1, 11, 12, 14, 15, 16, 18, 19, 20, 21, 22, 24], "applybc": [0, 5], "solver": [0, 5, 11, 12, 14, 15, 16, 19, 20, 21, 22], "createvec": [0, 5, 19], "createfemat": [0, 5], "setdesignvar": [0, 5, 11, 12, 14, 15, 16, 20, 21, 22], "vale": 0, "e": [0, 1, 3, 5, 6, 9, 12, 19, 20, 21, 24], "g": [0, 1, 5, 19, 20], "mass": [0, 1, 3, 4, 5, 6, 19, 20, 21, 24], "ksfailur": [0, 4, 5, 6], "evalfunct": [0, 5, 6, 7, 12, 15, 19, 20, 21], "call": [0, 1, 5, 6, 7, 9, 12, 15, 18, 19, 20, 21, 24], "adjoint": [0, 5, 20], "adddvsen": [0, 12, 20], "addsvsen": [0, 20], "addadjointresproduct": [0, 20], "collect": [0, 24], "all": [0, 1, 4, 5, 6, 7, 9, 10, 11, 12, 14, 15, 16, 19, 20, 21, 22], "tacsassembl": 0, "process": [0, 4, 6, 7, 9, 19, 21], "product": [0, 1, 3, 4, 5, 9, 20], "deriv": [0, 5, 9, 11, 12, 14, 15, 16, 20, 21, 22, 24], "residu": [0, 5, 12, 15, 20, 21], "w": [0, 5, 7, 9, 16, 19], "r": [0, 5, 16, 19, 24], "t": [0, 1, 3, 4, 5, 6, 7, 9, 16, 19, 20, 24], "sever": [0, 1, 4, 7, 9, 19, 24], "simultan": 0, "save": [0, 11, 12, 14, 15, 16, 20, 21, 22], "time": [0, 7, 11, 12, 15, 19, 20, 21, 22, 24], "reus": 0, "perform": [0, 1, 8, 19], "same": [0, 5, 7, 9, 14, 16, 19], "task": 0, "evaladjointresproduct": [0, 5], "memori": 0, "than": [0, 5, 7, 11, 12, 14, 15, 16, 20, 21, 22], "arrai": [0, 1, 3, 4, 6, 7, 11, 12, 14, 15, 16, 19, 20, 21, 22], "dvsen": 0, "num_dv": 0, "number": [0, 1, 3, 5, 7, 11, 12, 14, 15, 16, 18, 19, 20, 21, 22], "loadscal": [0, 20], "scale": [0, 3, 5, 12, 14, 15, 19, 20, 21], "factor": [0, 1, 3, 4, 5, 12, 14, 15, 19, 20, 21], "aux": [0, 20], "contribut": [0, 1, 12, 20, 24], "default": [0, 1, 3, 4, 6, 9, 11, 12, 14, 15, 16, 19, 20, 21, 22], "1": [0, 1, 3, 4, 5, 7, 9, 11, 12, 14, 15, 16, 19, 20, 21, 22, 24], "addadjointresxptsensproduct": [0, 20], "node": [0, 3, 5, 6, 7, 11, 12, 14, 15, 16, 19, 20, 21, 22, 24], "locat": [0, 6, 7, 9, 11, 12, 14, 15, 16, 20, 21, 22, 24], "list": [0, 1, 5, 11, 12, 14, 15, 16, 19, 20, 21, 22], "addjacobianvecproduct": 0, "jacobian": [0, 5, 20, 21, 24], "addmatdvsensinnerproduct": 0, "add": [0, 3, 6, 7, 9, 12, 18, 19, 20, 21, 24], "inner": [0, 1], "matrix": [0, 1, 3, 5, 11, 12, 14, 15, 16, 20, 21, 22, 24], "input": [0, 4, 6, 7, 19, 20], "sensit": [0, 6, 7, 11, 12, 14, 15, 16, 19, 20, 21, 22], "A": [0, 1, 3, 5, 10, 11, 12, 19, 20, 21, 22, 24], "pointer": 0, "vec": [0, 11, 12, 14, 15, 16, 19, 20, 21, 22], "addxptsen": [0, 12, 20], "applymatbc": 0, "assemblejacobian": [0, 5], "global": [0, 3, 4, 5, 12, 19, 20, 21, 24], "from": [0, 3, 4, 5, 6, 7, 8, 11, 12, 14, 15, 16, 19, 20, 21, 22, 24], "dirichlet": 0, "zero": [0, 1, 5, 12, 16, 19, 20, 21], "row": [0, 11, 14, 16, 22], "associ": [0, 1, 3, 12, 15, 19, 20, 21], "diagon": [0, 3, 7, 12, 15, 20, 21], "uniti": [0, 4], "assembli": 0, "also": [0, 9, 19, 24], "ani": [0, 5, 6, 9, 19, 20, 21], "commun": 0, "requir": [0, 1, 3, 4, 5, 6, 7, 9, 12, 20, 21, 24], "so": [0, 5, 6, 9, 10, 11, 12, 14, 15, 16, 20, 21, 22], "immedi": 0, "after": [0, 6, 7, 9, 24], "alpha": [0, 1, 5], "coeffici": [0, 1, 24], "beta": [0, 5], "term": [0, 20, 24], "gamma": [0, 5], "second": [0, 3, 4, 6, 7, 19, 21, 24], "govern": [0, 24], "equat": [0, 11, 12, 14, 16, 20, 21, 22], "mator": 0, "orient": [0, 3, 9, 24], "normal": [0, 3, 4, 24], "transpos": [0, 20], "assemblematcombo": 0, "combin": [0, 1, 19, 24], "two": [0, 3, 4, 6, 7, 9, 10, 11, 18, 19, 24], "assemblemattyp": 0, "assembler": 0, "case": [0, 4, 6, 7, 11, 12, 14, 15, 16, 19, 20, 21, 22, 24], "traction": [0, 12, 20, 21], "tacssurfacetract": 0, "point": [0, 1, 3, 5, 6, 12, 19, 20, 21, 24], "note": [0, 9, 11, 12, 14, 15, 16, 19, 20, 21, 22, 24], "entri": [0, 1, 6, 12, 20, 21], "first": [0, 1, 3, 4, 5, 6, 7, 12, 19, 20, 21, 24], "complet": [0, 9, 19, 24], "rh": [0, 12, 20, 21], "output": [0, 9, 11, 12, 15, 20, 21, 22], "computereord": 0, "reorder": 0, "unknown": 0, "befor": [0, 1, 4, 6, 12, 19, 20, 21], "initi": [0, 1, 5, 6, 7, 11, 12, 14, 15, 16, 18, 20, 21, 22, 24], "copyvari": 0, "static": [0, 4, 8, 12, 19, 20, 24], "factori": 0, "createdesignvec": [0, 19], "distribut": [0, 3, 12, 19, 20, 21, 24], "createmat": 0, "createnodevec": [0, 19], "createschurmat": 0, "parallel": [0, 3, 8, 9], "special": [0, 19], "suit": 0, "analysi": [0, 1, 3, 6, 7, 8, 9, 12, 15, 18, 19, 20, 21, 24], "On": 0, "scheme": [0, 21], "provid": [0, 11, 12, 14, 15, 16, 19, 20, 21, 22, 24], "subsequ": 0, "": [0, 1, 3, 5, 6, 7, 9, 12, 14, 15, 16, 19, 20, 21, 24], "femat": 0, "have": [0, 1, 9, 19, 24], "non": [0, 19], "make": 0, "ad": [0, 3, 11, 12, 14, 15, 16, 19, 20, 21, 22, 24], "togeth": 0, "easier": [0, 19], "which": [0, 3, 4, 6, 7, 9, 11, 12, 14, 15, 16, 19, 20, 21, 22, 24], "eigenvalu": [0, 12, 15, 19], "determin": [0, 1, 3, 4, 12, 15, 19, 20, 21, 24], "coupl": [0, 1, 12, 20, 21, 24], "serial": 0, "veri": 0, "simpl": [0, 5, 6], "Then": [0, 7, 9], "other": [0, 3, 7, 9, 19, 20, 21], "separ": [0, 4, 19], "must": [0, 6, 9, 12, 19, 20, 21, 22, 24], "end": [0, 9, 19, 21, 24], "block": [0, 7], "while": [0, 4, 19], "local": [0, 1, 3, 19], "type": [0, 1, 3, 4, 6, 7, 9, 11, 12, 14, 15, 16, 19, 20, 21, 22], "usual": [0, 1, 4], "impos": [0, 24], "routin": [0, 9, 11, 12, 14, 15, 16, 20, 21, 22], "here": [0, 6, 7, 24], "we": [0, 6, 7, 19, 24], "kludg": 0, "within": [0, 1, 4, 7, 9, 14, 19, 24], "full": [0, 3, 24], "next": [0, 6, 7], "ti": 0, "hopefulli": 0, "reduc": [0, 24], "fill": [0, 20], "ins": 0, "although": 0, "firm": 0, "proof": 0, "back": [0, 6, 7], "result": [0, 4, 11, 12, 14, 15, 16, 20, 21, 22, 24], "place": [0, 5, 9, 12, 14, 15, 20, 21], "store": [0, 1, 11, 14, 16, 22, 24], "fematbindic": 0, "fematcindic": 0, "map": 0, "mathemat": 0, "written": [0, 9, 19, 24], "a1": 0, "p": 0, "permut": 0, "column": 0, "one": [0, 1, 4, 6, 7, 9, 12, 15, 19, 20, 21, 24], "cannot": [0, 3, 19, 24], "unless": 0, "thei": [0, 5, 9, 16, 19, 24], "share": [0, 19], "exactli": 0, "layout": 0, "evalenergi": 0, "kinet": [0, 24], "potenti": [0, 24], "energi": [0, 4, 7, 24], "getbcmap": 0, "get": [0, 1, 3, 5, 6, 7, 9, 11, 12, 14, 15, 16, 19, 20, 21, 22], "getdesignvarrang": [0, 5, 11, 12, 14, 15, 16, 19, 20, 21, 22], "retriev": [0, 19], "rang": [0, 5, 21], "individu": [0, 12, 20, 21], "mai": [0, 3, 4, 9, 19], "consist": [0, 1, 16, 18, 24], "someon": 0, "incorrect": 0, "data": [0, 5, 19, 24], "could": [0, 7], "best": [0, 9], "guess": [0, 12, 15, 19], "take": [0, 6, 7, 11, 12, 19, 20, 21, 24], "minimum": [0, 1, 6, 9], "upper": [0, 1, 5, 11, 12, 14, 15, 16, 19, 20, 21, 22], "bound": [0, 1, 5, 11, 12, 14, 15, 16, 19, 20, 21, 22], "maximum": [0, 4, 5, 6, 7], "lower": [0, 1, 5, 11, 12, 14, 15, 16, 19, 20, 21, 22], "lowerbound": [0, 1], "upperbound": [0, 1], "numdv": 0, "getdesignvar": [0, 5, 11, 12, 14, 15, 16, 20, 21, 22], "assign": [0, 1, 5, 6, 19, 20], "doe": [0, 19], "ensur": [0, 9, 11, 19, 22], "between": [0, 1, 19, 24], "If": [0, 1, 4, 7, 9, 11, 12, 14, 15, 16, 19, 20, 21, 22], "inconsist": [0, 4], "begin": [0, 24], "return": [0, 1, 3, 4, 5, 6, 7, 9, 11, 12, 14, 15, 16, 19, 20, 21, 22], "them": [0, 1, 4, 5, 7], "maintain": 0, "own": [0, 11, 12, 14, 15, 16, 19, 20, 21, 22, 24], "multipli": [0, 3, 12, 15, 19, 20, 21, 24], "defin": [0, 1, 3, 5, 6, 7, 11, 12, 14, 15, 16, 19, 20, 21, 22, 24], "correspond": [0, 1, 7, 9, 11, 12, 14, 15, 16, 19, 20, 21, 22], "differ": [0, 1, 3, 7, 14, 19], "undefin": 0, "behaviour": [0, 19], "getelementdata": 0, "getelementnod": 0, "given": [0, 3, 4, 7, 12, 19, 20, 21, 24], "getel": 0, "getinitcondit": 0, "getmpicomm": 0, "mpi": [0, 5, 7, 9, 11, 12, 14, 15, 16, 19, 20, 21, 22], "getnod": [0, 11, 12, 14, 15, 16, 20, 21, 22], "getnumdependentnod": 0, "depend": [0, 3, 11, 12, 14, 15, 16, 19, 20, 21, 22, 24], "getnumel": 0, "getnumnod": 0, "getnumownednod": [0, 11, 12, 14, 15, 16, 19, 20, 21, 22], "getownerrang": 0, "processor": [0, 5, 11, 12, 14, 15, 16, 19, 20, 21, 22], "getreord": 0, "getsimulationtim": 0, "simul": [0, 7], "getvari": [0, 12, 15, 20, 21], "getvarspernod": [0, 11, 12, 14, 15, 16, 19, 20, 21, 22], "per": [0, 11, 12, 14, 15, 16, 19, 20, 21, 22], "need": [0, 4, 9, 11, 12, 14, 15, 16, 19, 20, 21, 22], "when": [0, 7, 9, 18, 19, 24], "tacscreat": 0, "reordervec": 0, "base": [0, 1, 3, 4, 5, 6, 8, 9, 11, 12, 15, 19, 20, 21, 22, 24], "setauxel": 0, "auxiliari": 0, "setbcvaluesfromvec": 0, "bc": 0, "setbc": 0, "setdependentnod": 0, "connect": [0, 3, 19], "howev": [0, 19, 24], "setelementconnect": 0, "setel": [0, 5], "setinitcondit": [0, 21], "setnod": [0, 11, 12, 14, 15, 16, 20, 21, 22], "setnumthread": 0, "thread": 0, "setsimulationtim": 0, "setvari": [0, 5, 20], "testel": 0, "test": [0, 1], "implement": [0, 4, 8, 9, 10, 16, 19, 25], "stiff": [0, 1, 3, 5, 6, 12, 15, 20, 21, 24], "variou": [0, 20, 21], "part": [0, 12, 16, 19, 20, 21, 24], "strain": [0, 1, 3, 4, 5, 19], "nodal": [0, 12, 19, 20, 22, 24], "coordin": [0, 3, 11, 12, 14, 15, 16, 19, 20, 21, 22, 24], "elemnum": 0, "print_level": 0, "print": [0, 7, 11, 12, 14, 15, 16, 19, 20, 21, 22], "level": [0, 10, 12, 15, 20, 21], "testfunct": 0, "interest": [0, 6, 7, 9, 18], "random": 0, "perturb": 0, "should": [0, 1, 4, 6, 9, 11, 12, 14, 15, 16, 19, 20, 21, 22, 24], "randomli": 0, "otherwis": [0, 7, 20], "produc": [0, 6, 7, 24], "unrealist": 0, "central": 0, "real": 0, "compil": 0, "complex": [0, 1, 11, 14, 16, 20, 22], "approxim": [0, 4, 5, 7, 9, 12, 20, 24], "version": [0, 9], "func": [0, 5, 6, 7, 11, 12, 14, 15, 16, 20, 21, 22], "dh": 0, "size": [0, 11, 12, 14, 15, 16, 19, 20, 21, 22], "zeroddotvari": 0, "2nd": 0, "zerodotvari": 0, "zerovari": [0, 5, 20], "read": [0, 5, 6, 19], "fem": 0, "bdf": [0, 1, 5, 6, 7, 12, 18, 20, 21], "scanbdffil": [0, 5], "getnumcompon": [0, 5, 19], "through": [0, 7, 9, 10, 19, 24], "addauxel": 0, "addfunctiondomain": 0, "domain": [0, 4, 7, 19], "createtac": [0, 5], "distribtu": 0, "getbc": 0, "getcomponentdescript": 0, "descript": [0, 6, 11, 12, 15, 19, 20, 21, 22], "getconnect": 0, "mesh": [0, 5, 6, 7, 11, 12, 14, 15, 16, 18, 19, 20, 21, 22, 24], "getelementdescript": [0, 5], "scan": 0, "onli": [0, 4, 6, 7, 11, 12, 14, 15, 16, 19, 20, 21, 22, 24], "inform": [0, 1, 6, 9, 11, 12, 14, 15, 16, 19, 20, 21, 22], "bulk": 0, "section": [0, 1, 18, 24], "elem_typ": 0, "grid": [0, 3, 7, 12, 19, 20, 21], "similar": 0, "manual": [0, 9], "rather": [0, 5], "involv": [0, 6, 24], "setboundarycondit": 0, "final": [0, 5, 6, 7, 19], "getelementpartit": 0, "partit": [0, 19, 20], "setglobalconnect": 0, "id": [0, 1, 6, 7, 12, 19, 20, 21], "natur": [0, 3, 19], "frequenc": [0, 15, 19, 20], "eigenproblem": 0, "extract": 0, "eigenvector": [0, 12, 15], "mode": [0, 1, 12, 15, 19], "shape": [0, 1, 12, 15, 19, 20, 21, 24], "exampl": [0, 1, 4, 6, 7, 11, 12, 14, 15, 16, 19, 20, 21, 22, 24], "beam": [0, 1, 3, 8, 25], "vari": [0, 7, 11, 24], "thick": [0, 1, 5, 6, 7, 11, 14, 24], "lowest": [0, 12, 15, 19], "forward": 0, "dirk": [0, 21], "abm": 0, "nbg": 0, "inherit": [0, 4, 24], "checkgradi": [0, 5], "self": [0, 5, 11, 12, 14, 15, 16, 20, 21, 22], "doubl": [0, 3, 4, 19, 24], "fd": 0, "csd": 0, "verif": 0, "funclist": 0, "getadjoint": 0, "int": [0, 1, 3, 4, 11, 12, 14, 15, 16, 19, 20, 21, 22, 24], "step_num": 0, "func_num": 0, "getgradi": 0, "getnumtimestep": [0, 21], "getstat": 0, "time_step": 0, "getxptgradi": 0, "initadjoint": 0, "integrateadjoint": 0, "backward": 0, "forc": [0, 3, 5, 6, 12, 19, 20, 21], "none": [0, 3, 5, 6, 11, 12, 14, 15, 16, 19, 20, 21, 22], "nonlinear": [0, 3, 19, 22, 24], "current": [0, 1, 4, 10, 11, 12, 14, 15, 16, 19, 20, 21, 22], "iterateadjoint": 0, "adjlist": 0, "revers": 0, "loadstat": 0, "disk": 0, "string": [0, 11, 12, 14, 15, 16, 19, 20, 21, 22], "argument": [0, 1, 4, 6, 7, 9, 19, 20, 21], "prefix": 0, "put": 0, "binari": 0, "directori": [0, 6, 7, 9, 11, 12, 15, 20, 21, 22], "persistst": 0, "write": [0, 5, 6, 7, 11, 12, 14, 15, 16, 19, 20, 21, 22], "postadjoint": 0, "finish": 0, "calcul": [0, 4, 19], "setabstol": 0, "atol": 0, "absolut": [0, 12, 15, 20, 21], "toler": [0, 12, 15, 20, 21, 22], "newton": 0, "setfh5": 0, "tofh5": [0, 5], "f5": [0, 5, 6, 7, 9, 11, 12, 14, 15, 16, 19, 20, 21, 22], "configur": [0, 24], "export": [0, 9], "rigid": [0, 3, 24], "bodi": [0, 3, 24], "setfunct": 0, "obtain": 0, "setinitnewtondeltafract": 0, "frac": [0, 24], "paramet": [0, 1, 3, 4, 5, 11, 12, 14, 15, 16, 19, 20, 21, 22, 24], "setjacassemblyfreq": 0, "freq": 0, "how": [0, 6, 21], "frequent": [0, 21], "setkrylovsubspacemethod": 0, "ksm": [0, 5], "linear": [0, 3, 4, 5, 11, 12, 14, 19, 20, 24], "setmaxnewtonit": 0, "max_newton_it": 0, "setoutputfrequ": 0, "write_freq": 0, "0": [0, 1, 4, 5, 6, 7, 9, 11, 12, 14, 15, 16, 19, 20, 21, 22, 24], "setoutputprefix": 0, "_prefix": 0, "setprintlevel": 0, "fname": 0, "tacsintegr": 0, "off": 0, "summari": 0, "2": [0, 1, 3, 4, 5, 7, 9, 15, 16, 19, 20, 21, 24], "setreltol": 0, "rtol": 0, "rel": [0, 12, 15, 20, 21, 22], "settimeinterv": 0, "tinit": [0, 7, 19, 21], "tfinal": [0, 7, 19, 21], "interv": [0, 21], "setuselapack": 0, "use_lapack": 0, "lapack": [0, 9], "slow": 0, "setuseschurmat": 0, "use_schur_mat": 0, "orderingtyp": [0, 20], "order_typ": 0, "tacsschurmat": [0, 20], "execut": [0, 9], "behavior": [1, 24], "avail": [1, 3, 4, 9, 24], "materialproperti": [1, 6, 7, 19], "mechan": [1, 24], "thermal": [1, 8], "isotrop": [1, 3], "anisotrop": [1, 3], "goal": [1, 24], "queri": 1, "shell": [1, 3, 6, 8, 12, 15, 19, 20, 21, 22, 25], "plane": [1, 24], "stress": [1, 3, 4, 5, 6, 19, 24], "solid": [1, 19, 22], "expans": [1, 24], "There": [1, 4, 6, 9, 10, 19, 24], "wai": [1, 6, 19], "describ": [1, 9, 19, 24], "possibl": [1, 19], "appropri": [1, 3, 4, 6, 7, 9, 24], "situat": 1, "rho": [1, 5, 6, 7], "specific_heat": [1, 7], "kappa": [1, 7, 24], "densiti": [1, 5, 6, 7], "specif": [1, 7, 11, 12, 14, 15, 16, 19, 20, 21, 22], "heat": [1, 3, 7, 12, 20, 21], "conduct": [1, 3, 6, 7, 12, 20, 21], "2d": [1, 3, 12, 19, 20, 21], "3d": [1, 3, 4], "kappa1": 1, "kappa2": 1, "orthotrop": [1, 3, 24], "kappa3": 1, "nu": [1, 5, 6], "y": [1, 3, 4, 5, 6, 24], "young": [1, 6], "modulu": [1, 5, 6], "poisson": [1, 5, 6], "ratio": [1, 5, 6, 20], "yield": [1, 5, 6], "strength": [1, 4], "elast": [1, 3, 5, 12, 19, 20, 21], "e1": 1, "e2": 1, "nu12": 1, "g12": 1, "t1": 1, "t2": 1, "c1": [1, 3, 11, 12, 14, 15, 16, 20, 21, 22], "c2": [1, 3], "s12": 1, "moduli": 1, "e3": 1, "nu13": 1, "nu23": 1, "g13": 1, "g23": 1, "t3": 1, "c3": 1, "s13": 1, "s23": 1, "thermoelast": [1, 3, 12, 19, 20, 21, 24], "alpha1": 1, "alpha2": 1, "alpha3": 1, "option": [1, 3, 4, 5, 9, 14, 16], "keyword": [1, 4, 6, 7, 20, 21], "arg": [1, 12, 15, 20, 21], "format": [1, 6, 7, 9, 11, 12, 14, 15, 16, 20, 21, 22], "float": [1, 3, 4, 11, 12, 14, 15, 16, 19, 20, 21, 22], "direct": [1, 3, 4, 5, 8, 9, 10, 18, 19, 24], "3": [1, 3, 5, 6, 7, 9, 11, 12, 14, 15, 16, 19, 20, 21, 22, 24], "coeefici": 1, "shear": [1, 3, 5, 24], "tension": 1, "compress": [1, 11, 14, 16, 22], "generatebdfcard": 1, "pynastran": [1, 19, 20], "card": [1, 6, 19], "hold": [1, 11, 12, 14, 15, 16, 19, 20, 21, 22, 24], "mat1": [1, 19], "mat8": [1, 19], "getmaterialproperti": 1, "dictionari": [1, 11, 12, 14, 15, 16, 19, 20, 21, 22], "mat": [1, 5], "dict": [1, 11, 12, 14, 15, 16, 19, 20, 21, 22], "getnastranid": 1, "setdens": 1, "setnastranid": 1, "setspecificheat": 1, "orthotropicpli": 1, "ply": [1, 14], "interact": [1, 19], "tsai": 1, "wu": 1, "failur": [1, 4, 6, 7], "criterion": 1, "under": [1, 3, 7, 8, 24], "suppli": [1, 3, 11, 12, 14, 15, 16, 19, 20, 21, 22], "Be": 1, "care": 1, "easili": [1, 9], "fall": 1, "outsid": 1, "accept": [1, 4, 9, 12, 15, 19, 20, 21], "dure": [1, 6, 8, 19, 20, 21, 24], "ply_thick": 1, "prop": [1, 6, 7, 19], "max_strain_criterion": 1, "bool": [1, 3, 4, 11, 12, 14, 15, 16, 19, 20, 21, 22], "flag": [1, 3, 4, 5, 9, 11, 12, 14, 15, 16, 19, 20, 21, 22], "max": [1, 5, 12, 15, 20], "fals": [1, 3, 4, 11, 12, 14, 15, 16, 19, 20, 21, 22], "procedur": [1, 3, 6, 7, 12, 15, 19, 20, 21], "buckl": [1, 12, 19], "refer": [1, 3], "basicbeamconstitut": [1, 19], "beamconstitut": [1, 3], "timoshenko": [1, 3], "theori": [1, 8, 24], "neg": [1, 4, 19], "sign": [1, 4], "convent": [1, 4], "inertia": [1, 4, 19, 24], "definit": [1, 4, 14, 19, 24], "iyz": [1, 4], "z": [1, 3, 4, 5, 24], "da": 1, "moment": [1, 3, 4, 12, 19, 20, 21], "area": 1, "alwai": [1, 3, 4, 6, 24], "posit": [1, 4, 12, 20, 24], "iyi": [1, 4], "cross": [1, 3], "j": [1, 7, 20, 24], "polar": 1, "about": [1, 4, 19, 24], "x": [1, 3, 4, 5, 6, 11, 12, 14, 15, 16, 19, 20, 21, 22, 24], "axi": [1, 3, 4], "ii": 1, "iz": 1, "yz": 1, "ky": 1, "correct": [1, 5, 19, 20], "5": [1, 5, 6, 7, 9, 19, 20, 24], "6": [1, 3, 5, 6, 12, 19, 20, 21], "kz": 1, "bar": 1, "pbar": [1, 19], "bladestiffenedshellconstitut": 1, "shellconstitut": [1, 3], "stiffen": [1, 14, 19], "explicitli": 1, "instead": [1, 11, 12, 14, 15, 16, 19, 20, 21, 22], "smear": 1, "across": [1, 11, 12, 14, 19, 20, 21, 24], "panelpli": 1, "panel": [1, 11, 14, 16, 19], "stiffenerpli": 1, "kcorr": [1, 5], "panellength": 1, "length": [1, 7, 12, 14, 16, 19, 20, 21, 24], "dv": [1, 11, 14, 16, 19], "panellengthnum": 1, "lenth": 1, "tell": [1, 6], "treat": [1, 19, 24], "stiffenerpitch": 1, "pitch": [1, 19], "stiffenerpitchnum": 1, "panelthick": 1, "panelthicknum": 1, "numpanelpli": 1, "distinct": 1, "angl": 1, "panelplyangl": 1, "numpi": [1, 3, 5, 6, 7, 9, 11, 12, 14, 15, 16, 19, 20, 21, 22], "ndarrai": [1, 3, 11, 12, 14, 15, 16, 19, 20, 21, 22], "panelplyfrac": 1, "fraction": [1, 14], "panelplyfracnum": 1, "np": [1, 5, 6, 7], "intc": 1, "stiffenerheight": 1, "height": 1, "stiffenerheightnum": 1, "stiffenerthick": 1, "stiffenerthicknum": 1, "numstiffenerpli": 1, "stiffenerplyangl": 1, "stiffenerplyfrac": 1, "stiffenerplyfracnum": 1, "flangefract": 1, "width": 1, "rais": [1, 6], "valueerror": [1, 6], "error": [1, 9], "do": [1, 6, 7, 14, 19], "setksweight": 1, "updat": [1, 11, 12, 14, 15, 16, 19, 20, 21, 22], "k": [1, 4, 5, 7, 12, 19, 20, 21, 24], "weight": [1, 3, 4, 14, 19], "aggreg": [1, 4, 5, 7], "ksweight": [1, 4, 5, 6, 7], "setpanelplyfractionbound": 1, "equal": [1, 5, 7, 16], "pli": 1, "setpanelthicknessbound": 1, "1e": [1, 5, 11, 12, 14, 15, 20, 21, 22], "1e20": [1, 11, 14, 16, 22], "setstiffenerheightbound": 1, "setstiffenerpitchbound": 1, "setstiffenerplyfractionbound": 1, "setstiffenerthicknessbound": 1, "compositeshellconstitut": [1, 19], "composit": [1, 8, 9, 14], "lamin": [1, 24], "deform": [1, 24], "fsdt": 1, "ply_list": 1, "layup": 1, "ply_angl": 1, "radian": 1, "pcomp": [1, 19], "dofspringconstitut": [1, 19], "generalspringconstitut": [1, 3], "tradit": 1, "spring": [1, 3], "dof": [1, 3, 12, 19, 20, 21], "assum": [1, 19, 21, 24], "bush": 1, "pbush": [1, 19], "generalmassconstitut": [1, 3], "fulli": 1, "translat": 1, "rotat": [1, 3, 12, 20, 21], "symmetr": 1, "shown": [1, 7, 20], "below": [1, 4, 5, 6, 7, 9, 10, 11, 12, 15, 18, 19, 20, 21, 22, 24], "m": [1, 5, 6, 7, 16, 19, 21, 24], "7": [1, 3, 12, 15, 19, 20, 21], "8": [1, 9, 19], "9": [1, 3, 7, 19, 24], "10": [1, 5, 6, 11, 12, 14, 15, 16, 19, 20, 21, 22], "11": [1, 9], "12": [1, 7, 12, 15, 20, 21, 22], "13": [1, 9], "14": [1, 12, 15, 20, 21], "15": [1, 12, 15, 20], "16": [1, 3], "17": 1, "18": 1, "19": 1, "20": [1, 5, 11, 14, 20, 22], "flatten": [1, 21], "side": [1, 7, 12, 20, 21], "evalmassmatrix": 1, "6x6": 1, "21": [1, 9], "repres": [1, 7, 12, 15, 20, 21, 24], "uniqu": [1, 12, 19, 20, 21], "isorectanglebeamconstitut": 1, "rectangular": 1, "dimens": 1, "measur": [1, 5], "along": [1, 4, 12, 15, 20, 21], "perpindicular": 1, "wnum": 1, "wlb": 1, "wub": 1, "diamet": 1, "tnum": [1, 6, 7], "tlb": 1, "tub": 1, "pbarl": 1, "isoshellconstitut": [1, 6, 19], "pshell": [1, 19], "isotubebeamconstitut": 1, "hollow": 1, "circular": 1, "d": [1, 5, 20, 24], "tube": 1, "dnum": 1, "dlb": 1, "dub": 1, "wall": 1, "lamparamshellconstitut": 1, "phasechangematerialconstitut": [1, 3], "phase": [1, 3], "chang": [1, 3, 11, 12, 14, 15, 16, 19, 20, 21, 22, 24], "solid_prop": 1, "liquid_prop": 1, "liquid": 1, "lh": 1, "latent": 1, "mt": 1, "melt": 1, "temperatur": [1, 4, 7, 24], "planestressconstitut": [1, 3, 7], "util": [1, 18, 24], "pointmassconstitut": 1, "i12": [1, 19], "x1": 1, "x2": 1, "dm": [1, 4], "i11": [1, 19], "x3": 1, "i22": [1, 19], "i33": 1, "i13": 1, "i23": 1, "mnum": 1, "mlb": 1, "mub": 1, "i11num": 1, "i11lb": 1, "i11ub": 1, "i22num": 1, "i22lb": 1, "i22ub": 1, "i33num": 1, "i33lb": 1, "i33ub": 1, "i12num": 1, "i12lb": 1, "i12ub": 1, "i13num": 1, "i13lb": 1, "i13ub": 1, "i23num": 1, "i23lb": 1, "i23ub": 1, "setdrillingregular": 1, "regular": 1, "drill": 1, "kpenalti": 1, "smearedcompositeshellconstitut": 1, "totl": 1, "ply_fract": 1, "thickness_dv_num": 1, "ply_fraction_dv_num": 1, "thickness_lb": 1, "thickness_ub": 1, "ply_fraction_lb": 1, "ply_fraction_ub": 1, "solidconstitut": [1, 3, 19], "topologi": [1, 8], "void": [1, 24], "present": [1, 9], "intermedi": [1, 21], "psolid": [1, 19], "librari": [3, 5, 6, 7], "support": [3, 9, 10, 12, 15, 19, 20, 21, 22], "capabl": [3, 18, 24], "run": [3, 5, 9, 18], "parameter": [3, 24], "elementbasi": 3, "lineartetrahedralbasi": [3, 19], "tetrahedr": 3, "quadratictetrahedralbasi": 3, "quadrat": [3, 24], "cubictetrahedralbasi": 3, "cubic": 3, "linearhexabasi": [3, 19], "hexahedr": 3, "quadratichexabasi": 3, "cubichexabasi": 3, "linearquadbasi": [3, 7], "quad": 3, "quadraticquadbasi": 3, "cubicquadbasi": 3, "quarticquadbasi": 3, "quartic": 3, "quinticquadbasi": 3, "quintic": 3, "lineartrianglebasi": [3, 7], "triangular": 3, "quadratictrianglebasi": 3, "cubictrianglebasi": 3, "elementmodel": 3, "heatconduction2d": [3, 7], "varspernod": [3, 12, 20, 21], "con": [3, 5, 6, 7], "materi": [3, 5, 6, 7, 19, 24], "heatconduction3d": 3, "pcmheatconduction2d": 3, "linearelasticity2d": 3, "linearelasticity3d": [3, 19], "linearthermoelasticity2d": 3, "steady_flag": 3, "steadi": 3, "linearthermoelasticity3d": 3, "shellnaturaltransform": 3, "shelltransform": 3, "align": [3, 24], "edg": [3, 19], "who": 3, "don": [3, 9, 19], "shellrefaxistransform": 3, "project": [3, 4, 19], "surfac": [3, 22, 24], "getrefaxi": 3, "beamrefaxistransform": 3, "beamtransform": 3, "springidentitytransform": 3, "springtransform": 3, "stif": 3, "ident": [3, 19], "ax": [3, 24], "springrefaxistransform": 3, "Not": [3, 16, 19], "coincid": 3, "springrefframetransform": 3, "arbritrari": 3, "frame": [3, 19], "axis1": 3, "axis2": 3, "getrefax": 3, "axis_j": 3, "axis_i": 3, "element2d": [3, 7], "outputel": [3, 19], "plane_stress_el": [3, 19], "physic": [3, 7, 12, 20, 21], "element3d": [3, 19], "solid_el": [3, 19], "quad4shel": [3, 6, 19], "emploi": 3, "mix": 3, "interpol": 3, "tensori": 3, "mitc": [3, 24], "avoid": 3, "lock": [3, 24], "beam_or_shell_el": [3, 19], "equival": [3, 19], "quad9shel": [3, 19], "quad16shel": 3, "tri3shel": [3, 19], "quad4nonlinearshel": 3, "geometr": [3, 19, 24], "quad9nonlinearshel": 3, "quad16nonlinearshel": 3, "tri3nonlinearshel": 3, "quad4nonlinearthermalshel": 3, "quad9nonlinearthermalshel": 3, "quad16nonlinearthermalshel": 3, "tri3nonlinearthermalshel": 3, "quad4thermalshel": [3, 19], "quad9thermalshel": 3, "quad16thermalshel": 3, "tri3thermalshel": 3, "beam2": [3, 19], "beam3": 3, "beam2modrot": 3, "moder": [3, 24], "beam3modrot": 3, "rbe2": [3, 19], "arbitrari": 3, "independ": 3, "degre": [3, 6, 7, 9, 11, 12, 14, 15, 16, 20, 21, 22, 24], "freedom": [3, 6, 7, 11, 12, 14, 15, 16, 20, 21, 22, 24], "six": 3, "motion": 3, "singl": [3, 4, 7, 19, 21, 24], "rigid_el": [3, 19], "num_nod": [3, 24], "total": [3, 5, 7, 12, 19, 20, 21, 24], "constrained_dof": 3, "attach": [3, 11, 12, 15, 20, 21, 22], "setscalingparamet": 3, "lagrang": [3, 12, 15, 19, 20, 21, 24], "formul": [3, 11, 19, 22], "rbe": [3, 12, 15, 20, 21], "artifici": [3, 12, 15, 20, 21, 24], "constant": [3, 4, 12, 15, 20, 21], "precondition": [3, 12, 15, 20, 21], "stabil": [3, 12, 15, 20, 21], "rbe3": [3, 19], "power": 3, "tool": [3, 8], "unlik": 3, "rbar": 3, "doesn": [3, 19], "addit": [3, 6, 9, 12, 20, 24], "your": [3, 9], "geometri": [3, 6, 24], "dep_constrained_dof": 3, "eleemnt": 3, "indep_constrained_dof": 3, "massel": [3, 19], "mass_el": [3, 19], "springel": [3, 19], "spring_el": [3, 19], "built": [4, 9], "found": [4, 6, 7, 19], "assembl": [4, 5, 6, 11, 12, 14, 15, 16, 18, 19, 20, 21, 22, 24], "ever": [4, 24], "handl": [4, 6, 12, 15, 20, 21, 24], "averagetemperatur": 4, "spatial": [4, 24], "averag": [4, 12, 20, 21], "volum": [4, 19, 22], "centerofmass": 4, "center": [4, 6, 12, 20, 21], "analys": [4, 6, 18], "give": [4, 7, 24], "transient": [4, 7, 19, 21, 24], "cg": 4, "onto": [4, 24], "complianc": 4, "integr": [4, 19, 21, 24], "displac": [4, 5, 12, 19, 20], "setcompliancetyp": 4, "enclosedvolum": 4, "enclos": [4, 19, 22], "ksdisplac": 4, "kreisselmei": 4, "steinhaus": 4, "over": [4, 5, 7, 12, 18, 20, 21, 24], "smooth": 4, "differenti": 4, "80": 4, "ftype": 4, "str": [4, 11, 12, 14, 15, 16, 19, 20, 21, 22], "discret": [4, 21], "continu": [4, 8], "pnorm": 4, "insensit": [4, 11, 12, 14, 15, 16, 19, 20, 21, 22], "necessari": [4, 6, 9, 19, 21], "either": [4, 7, 9, 24], "consid": [4, 6, 24], "threshold": 4, "mean": 4, "least": 4, "exceed": [4, 7], "impli": [4, 19], "safetyfactor": 4, "safeti": 4, "kstemperatur": [4, 7], "momentofinertia": 4, "origin": [4, 8, 19], "i_out": 4, "vec1": 4, "i_tensor": 4, "vec2": 4, "tensor": 4, "ixx": 4, "ixi": 4, "ixz": 4, "iyx": 4, "izx": 4, "izi": 4, "izz": 4, "direction1": 4, "direction2": 4, "aboutcm": 4, "whether": [4, 12, 19, 20, 21], "taken": [4, 24], "true": [4, 5, 6, 11, 12, 15, 16, 19, 20, 21, 22], "structuralmass": [4, 5, 6], "demonstr": [5, 7], "enforc": [5, 14, 16, 19, 24], "quadratur": [5, 24], "less": [5, 7], "import": [5, 6, 7, 9, 10, 19, 24], "__future__": [5, 7], "print_funct": [5, 7], "mpi4pi": [5, 7, 9, 11, 12, 14, 15, 16, 19, 20, 21, 22], "ucrm_vonmisesmassmin": 5, "pyparoptproblem": 5, "def": [5, 6, 7, 19], "__init__": 5, "comm": [5, 7, 11, 12, 14, 15, 16, 19, 20, 21, 22], "bdf_name": 5, "meshload": [5, 11, 12, 14, 15, 16, 19, 20, 21, 22], "struct_mesh": 5, "2500": [5, 6], "kg": [5, 6, 7], "70e9": [5, 6], "pa": [5, 6], "350e6": 5, "min_thick": 5, "002": 5, "max_thick": 5, "02": 5, "loop": [5, 7, 21], "num_compon": 5, "descriptor": 5, "index": [5, 7, 8, 11, 12, 14, 15, 16, 19, 20, 21, 22], "design_variable_index": 5, "isofsdt": 5, "cquad": 5, "cquadr": [5, 7, 19], "cquad4": [5, 6, 7, 19], "mitcshel": 5, "component_num": 5, "loader": [5, 19], "50": [5, 7], "force_arrai": 5, "getarrai": 5, "100": [5, 6, 7, 11, 14, 16, 19, 22], "uniform": [5, 12, 20, 21], "re": [5, 20], "dfdu": 5, "pc": 5, "subspac": [5, 12, 15, 20], "restart": [5, 20], "gmre": [5, 20], "o": [5, 7, 24], "mass_scal": 5, "mm": [5, 6], "meter": 5, "thickness_scal": 5, "1000": [5, 12, 15, 20, 21], "nvar": 5, "ncon": 5, "super": 5, "comm_self": 5, "inequ": 5, "dens": 5, "both": [5, 9, 16, 19, 20, 24], "setinequalityopt": 5, "dense_ineq": 5, "use_low": 5, "use_upp": 5, "visual": [5, 6, 7, 11, 22, 24], "extra": [5, 19], "py_shel": 5, "iter_count": 5, "getvarsandbound": 5, "lb": 5, "ub": 5, "xval": 5, "dtype": [5, 11, 12, 14, 15, 16, 19, 20, 21, 22], "xlb": [5, 11, 12, 14, 15, 16, 19, 20, 21, 22], "xub": [5, 11, 12, 14, 15, 16, 19, 20, 21, 22], "evalobjcon": 5, "fail": 5, "varaibl": 5, "fval": 5, "fobj": 5, "von": 5, "mise": 5, "sigma": [5, 12, 15, 19], "evalobjcongradi": 5, "gx": 5, "evaldvsen": 5, "dfdx": 5, "evalsvsen": [5, 12], "out": [5, 6, 7, 11, 12, 14, 15, 16, 19, 20, 21, 22, 24], "solut": [5, 6, 7, 11, 12, 15, 19, 20, 21, 22], "everi": [5, 6, 7, 16, 19, 21], "writetofil": 5, "ucrm_it": 5, "now": [5, 6, 7], "pyparopt": 5, "tacs_comm": 5, "comm_world": 5, "crm_box_2nd": 5, "crm_opt": 5, "max_lbfg": 5, "opt": 5, "bfg": 5, "setoutputfil": 5, "setarmijoparam": 5, "zw": 5, "zl": 5, "zu": 5, "getoptimizedpoint": 5, "script": [6, 7, 9], "show": [6, 7, 19], "advanc": [6, 8], "nomin": 6, "1m": 6, "flat": 6, "perimet": 6, "fix": [6, 12, 20, 21], "compris": 6, "900": 6, "kn": 6, "act": 6, "submodul": 6, "purpos": [6, 11, 12, 14, 15, 19, 20, 21, 22], "To": [6, 7, 9, 20, 24], "bdffile": [6, 7, 20], "feaassembl": [6, 7], "elemcallback": [6, 7], "automat": [6, 19], "itself": [6, 24], "long": 6, "exist": [6, 19], "done": [6, 7, 19], "our": [6, 7], "dvnum": [6, 7, 19], "compid": [6, 7, 11, 12, 14, 15, 16, 19, 20, 21, 22], "compdescript": [6, 7, 19], "elemdescript": [6, 7, 19], "specialdv": 6, "kwarg": [6, 7, 12, 15, 19, 20, 21], "464": 6, "0e6": 6, "tplate": [6, 7], "005": 6, "transform": 6, "naturalshelltransform": 6, "accord": 6, "elemlist": [6, 7], "elem": [6, 7], "els": [6, 7], "catch": 6, "unexpect": 6, "f": [6, 12, 20, 21], "callback": [6, 7], "pretti": 6, "aluminum": [6, 7], "those": [6, 7, 19], "ll": 6, "staticproblem": [6, 17, 19], "createstaticproblem": [6, 19, 20], "name": [6, 7, 9, 11, 12, 14, 15, 16, 19, 20, 21, 22], "staticprob": 6, "point_forc": 6, "ve": [6, 7], "accomplish": 6, "addfunct": [6, 7, 12, 15, 20, 21], "uniniti": [6, 7], "minu": 6, "let": 6, "vonmis": 6, "ks_vmfailur": 6, "addloadtonod": [6, 12, 20, 21], "select": [6, 7, 11, 12, 14, 19, 20, 21, 22, 24], "481": 6, "1e4": 6, "nastranord": [6, 12, 19, 20, 21], "evalfunctionssen": [6, 7, 12, 15, 20, 21], "funcssen": [6, 7, 11, 12, 14, 15, 16, 20, 21, 22], "further": [6, 7], "post": [6, 7], "writesolut": [6, 7, 12, 15, 20, 21], "point_force_000": 6, "runscript": [6, 7], "convert": [6, 7, 9, 11, 12, 14, 15, 16, 20, 21, 22], "vtk": [6, 7, 9], "f5tovtk": [6, 7, 9], "paraview": [6, 7, 9], "plt": [6, 7, 9], "f5totec": [6, 7, 9], "tecplot": [6, 7, 9, 11, 22], "cell": 7, "undergo": 7, "cylindr": 7, "embed": 7, "pattern": 7, "corner": 7, "releas": [7, 9], "larg": [7, 8], "amount": 7, "nearest": 7, "adjac": [7, 11, 19], "prevent": 7, "go": [7, 9], "lead": [7, 19], "cascad": 7, "figur": 7, "label": 7, "featur": [7, 9, 24], "right": [7, 12, 20, 21, 24], "hand": [7, 12, 20, 21], "multipl": [7, 19], "region": [7, 19], "easi": [7, 19], "enabl": [7, 9, 24], "previou": 7, "three": [7, 8], "item": [7, 19], "pprint": 7, "mateteri": 7, "propertiesfor": 7, "path": [7, 9], "join": 7, "dirnam": 7, "__file__": 7, "battery_pack": 7, "instanti": 7, "plate": [7, 8, 19, 24], "065": 7, "battery_rho": 7, "1460": 7, "battery_kappa": 7, "battery_cp": 7, "880": 7, "alum_rho": 7, "2700": 7, "alum_kappa": 7, "204": 7, "alum_cp": 7, "883": 7, "By": [7, 12, 19, 20], "check": [7, 11, 12, 14, 15, 16, 20, 21, 22], "globaldv": [7, 19], "basi": [7, 12, 20, 21], "elif": 7, "ctria3": [7, 19], "ctriar": [7, 19], "recogn": 7, "append": [7, 19], "transientproblem": [7, 17, 19], "declar": 7, "numstep": [7, 19, 21], "createtransientproblem": [7, 19, 21], "flux": 7, "gettimestep": [7, 21], "selectcompid": [7, 12, 19, 20, 21], "addloadtocompon": [7, 12, 20, 21], "just": [7, 9], "specifii": 7, "spread": 7, "sinc": [7, 8, 19, 20, 21, 24], "transfer": 7, "6000": 7, "indic": [7, 12, 15, 19, 20, 21], "watt": 7, "000": 7, "joul": 7, "timestep": [7, 21], "enumer": 7, "00": [7, 19], "face": [7, 12, 19, 20, 21, 22], "want": [7, 9, 11, 12, 14, 15, 16, 19, 20, 21, 22], "well": [7, 19, 20, 21, 24], "closest": 7, "opert": 7, "event": 7, "wa": [7, 8], "withing": 7, "compids_00": 7, "compids_01": 7, "01": [7, 19], "adjec": 7, "compids_04": 7, "04": [7, 19], "With": [7, 24], "ks_temp_corn": 7, "ks_temp_adjac": 7, "ks_temp_diagon": 7, "transient_000_000": 7, "transient_000_050": 7, "050": 7, "transient_000_": 7, "anim": 7, "what": [7, 19], "look": [7, 9, 11, 12, 14, 15, 16, 20, 21, 22], "toolkit": 8, "primarili": 8, "wing": 8, "box": 8, "recent": 8, "extend": [8, 9, 24], "dimension": 8, "develop": [8, 9, 19], "2010": 8, "multidisciplinari": 8, "group": [8, 11, 14, 16, 18, 22], "georgia": 8, "tech": 8, "lab": 8, "univers": 8, "michigan": 8, "instal": 8, "anaconda": 8, "batteri": 8, "pack": 8, "runawai": 8, "director": [8, 9, 25], "core": 8, "modul": [8, 19, 20, 21], "search": 8, "page": 8, "readili": 9, "linux": 9, "maco": 9, "At": [9, 24], "window": 9, "recommend": [9, 12, 15, 19, 20, 21], "try": 9, "altern": [9, 12], "access": [9, 10], "virtual": [9, 24], "machin": 9, "vm": 9, "subsystem": 9, "docker": 9, "mdolab": 9, "public": 9, "imag": 9, "you": 9, "conda": 9, "packag": 9, "platform": 9, "start": [9, 19, 21], "termin": 9, "n": [9, 11, 12, 14, 15, 16, 19, 20, 21, 22, 24], "activ": 9, "forg": 9, "smdogroup": 9, "environ": 9, "bla": 9, "meti": 9, "cython": [9, 10, 11, 12, 14, 15, 16, 20, 21, 22], "suitespars": 9, "amd": 9, "tecio": 9, "fh5": 9, "compat": [9, 19], "clone": 9, "git": 9, "repositori": 9, "copi": [9, 12, 20, 21], "makefil": 9, "info": [9, 19], "edit": 9, "tacs_dir": 9, "root": [9, 11, 12, 14, 15, 16, 19, 20, 21, 22], "cxx": 9, "lapack_lib": 9, "link": 9, "metis_dir": 9, "suitesparse_dir": 9, "tecio_dir": 9, "py": [9, 19], "toolbox": 9, "mind": 9, "softwar": 9, "divid": [9, 12, 19, 20, 21, 24], "categori": 9, "checkout": 9, "http": 9, "github": 9, "com": 9, "sure": 9, "teciosrc": 9, "teciompisrc": 9, "cfg": 9, "intend": [9, 20, 21], "wish": [9, 12, 20, 21], "modifi": [9, 11, 12, 14, 15, 16, 19, 20, 21, 22, 24], "extern": [9, 11, 12, 15, 19, 20, 21, 22], "inde": 9, "alreadi": [9, 12, 19, 20, 21], "simpli": 9, "adjust": 9, "accordingli": 9, "download": 9, "src": 9, "fedoraproject": 9, "org": 9, "lookasid": 9, "pkg": 9, "tar": 9, "gz": 9, "5465e67079419a69e0116de24fce58f": 9, "cmake": 9, "build": 9, "drtimothyaldendavi": 9, "tgz": 9, "www": 9, "boost": 9, "sudo": 9, "apt": 9, "libboost": 9, "dev": 9, "debian": 9, "someth": 9, "No": [9, 12, 15, 19, 21], "rule": [9, 19], "target": 9, "stop": 9, "leav": 9, "somedirectori": 9, "x86_64": 9, "64": 9, "subdirectori": 9, "abov": [9, 19], "bash": 9, "f5convert": 9, "f5clean": 9, "clean": 9, "date": 9, "remov": 9, "h": 9, "line": [9, 19, 24], "bashrc": 9, "sub": [9, 20, 21], "numer": 9, "pip": 9, "command": 9, "shortcut": 9, "older": 9, "miss": [9, 19, 22], "libtac": 9, "tree": 9, "newer": 9, "therefor": [9, 19, 24], "publicli": 10, "member": 10, "wrap": 10, "document": 10, "main": [11, 12, 14, 15, 16, 18, 19, 20, 21, 22], "constrain": [11, 19, 22], "dv_i": [11, 19], "dv_j": [11, 19], "abruptli": [11, 19], "delta_t": [11, 14], "t_i": 11, "t_j": 11, "createadjacencyconstraint": [11, 19], "creation": [11, 12, 15, 19, 20, 21, 22], "setopt": [11, 12, 14, 15, 16, 19, 20, 21, 22], "printopt": [11, 12, 14, 15, 16, 19, 20, 21, 22], "outputdir": [11, 12, 15, 20, 21, 22], "writer": [11, 12, 15, 20, 21, 22], "numbersolut": [11, 12, 15, 20, 21, 22], "counter": [11, 12, 15, 19, 20, 21, 22], "outputview": [11, 12, 14, 15, 16, 20, 21, 22], "directli": [11, 12, 14, 15, 16, 20, 21, 22, 24], "intracomm": [11, 12, 14, 15, 16, 19, 20, 21, 22], "tacstofh5": [11, 12, 14, 15, 16, 20, 21, 22], "postprocess": [11, 12, 14, 15, 16, 20, 21, 22], "pymeshload": [11, 12, 14, 15, 16, 20, 21, 22], "addconstraint": [11, 14, 16, 22], "connam": [11, 14, 16, 22], "dvindex": [11, 16], "meaning": [11, 14, 16, 20, 21, 22], "evalconstraint": [11, 14, 16, 22], "evalcon": [11, 14, 16, 22], "ignoremiss": [11, 12, 14, 15, 16, 20, 21, 22], "supress": [11, 12, 14, 15, 16, 20, 21, 22], "valid": [11, 12, 14, 15, 16, 20, 21, 22], "pleas": [11, 12, 14, 15, 16, 20, 21, 22], "caution": [11, 12, 14, 15, 16, 20, 21, 22, 24], "adjconstraint": [11, 16], "le_spar": [11, 14, 16, 19, 22], "c1_le_spar": [11, 14, 16, 22], "12354": [11, 12, 14, 15, 20, 21, 22], "evalconstraintssen": [11, 14, 16, 22], "derivit": [11, 12, 14, 15, 16, 20, 21, 22], "struct": [11, 12, 14, 15, 16, 20, 21, 22], "50x242": [11, 14, 16, 22], "spars": [11, 14, 16, 20, 22], "float64": [11, 12, 14, 15, 16, 19, 20, 21, 22], "writevisu": [11, 22], "basenam": [11, 12, 15, 20, 21, 22], "filenam": [11, 12, 15, 19, 20, 21, 22], "again": [11, 12, 15, 20, 21, 22, 24], "alia": [11, 12, 14, 15, 16, 19, 20, 21, 22], "getconstraintbound": [11, 14, 16, 22], "tupl": [11, 14, 16, 20, 22], "conbound": [11, 14, 16, 22], "tacsconstraint": [11, 14, 16, 22], "getconstraintkei": [11, 14, 16, 22], "kei": [11, 12, 14, 15, 16, 19, 20, 21, 22, 24], "far": [11, 12, 14, 15, 16, 20, 21, 22], "getconstraints": [11, 14, 16, 22], "consiz": [11, 14, 16, 22], "funconsizesc": [11, 14, 16, 22], "coord": [11, 12, 14, 15, 16, 19, 20, 21, 22], "getnumcoordin": [11, 12, 14, 15, 16, 20, 21, 22], "ncoord": [11, 12, 14, 15, 16, 20, 21, 22], "getnumdesignvar": [11, 12, 14, 15, 16, 19, 20, 21, 22], "ndv": [11, 12, 14, 15, 16, 19, 20, 21, 22], "nnode": [11, 12, 14, 15, 16, 19, 20, 21, 22, 24], "getnumvari": [11, 12, 14, 15, 16, 20, 21, 22], "nstate": [11, 12, 14, 15, 16, 20, 21, 22], "getopt": [11, 12, 14, 15, 16, 19, 20, 21, 22], "vpn": [11, 12, 14, 15, 16, 19, 20, 21, 22], "classmethod": [11, 12, 14, 15, 16, 19, 20, 21, 22], "printdefaultopt": [11, 12, 14, 15, 16, 19, 20, 21, 22], "nice": [11, 12, 14, 15, 16, 19, 20, 21, 22], "stdout": [11, 12, 14, 15, 16, 19, 20, 21, 22], "varnam": [11, 12, 14, 15, 16, 20, 21, 22], "attribut": [11, 12, 14, 15, 16, 20, 21, 22], "xpt": [11, 12, 14, 15, 16, 19, 20, 21, 22, 24], "setvarnam": [11, 12, 14, 15, 16, 20, 21, 22], "pyopt": [11, 12, 14, 15, 16, 20, 21, 22], "addvargroup": [11, 12, 14, 15, 16, 20, 21, 22], "relev": [12, 15, 20, 21], "createbucklingproblem": [12, 19], "l2converg": [12, 15, 20, 21], "converg": [12, 15, 20, 21], "l2": [12, 15, 20, 21], "norm": [12, 15, 20, 21, 24], "l2convergencerel": [12, 15, 20, 21], "rbestiffnessscalefactor": [12, 15, 20, 21], "rbeartificialstiff": [12, 15, 20, 21], "001": [12, 15, 20, 21], "subspaces": [12, 15, 20], "krylov": [12, 15, 20], "nrestart": [12, 15, 20], "reset": [12, 15], "suppress": [12, 15, 20, 21], "printtim": [12, 15, 19, 20, 21], "printlevel": [12, 15, 21], "major": [12, 15, 21], "minor": [12, 15, 21], "numeig": [12, 15, 19], "setvalnam": [12, 15], "valnam": [12, 15], "getnumeig": [12, 15], "request": [12, 15, 20, 21], "funcnam": [12, 15, 20, 21], "funchandl": [12, 15, 20, 21], "NOT": [12, 15, 19], "FOR": [12, 15], "evalfunc": [12, 15, 20, 21], "integ": [12, 15, 19], "eigsm": [12, 15], "c1_eigsm": [12, 15], "234": [12, 15, 20, 21], "89": [12, 15, 20, 21], "59": [12, 15, 20, 21], "averageload": [12, 20, 21], "remain": [12, 20, 21], "throughout": [12, 20, 21, 24], "would": [12, 20, 21], "engin": [12, 20, 21], "1d": [12, 20, 21], "numcompid": [12, 20, 21], "uniformli": [12, 20, 21], "split": [12, 19, 20, 21, 24], "evenli": [12, 19, 20, 21], "unit": [12, 20, 21, 24], "necessarili": [12, 20, 21], "interpret": [12, 19, 20, 21], "being": [12, 20, 21], "qdot": [12, 20, 21], "rate": [12, 20, 21, 24], "fx": [12, 20, 21], "fy": [12, 20, 21], "fz": [12, 20, 21], "mx": [12, 20, 21], "my": [12, 20, 21], "mz": [12, 20, 21], "nodeid": [12, 19, 20, 21], "numnodeid": [12, 20, 21], "signal": [12, 19, 20, 21], "addloadtorh": [12, 20, 21], "fappli": [12, 20, 21], "u": [12, 20, 21, 24], "addtractiontocompon": [12, 20, 21], "faceindex": [12, 20, 21], "certain": [12, 19, 20, 21], "addtractiontoel": [12, 20, 21], "elemid": [12, 20, 21], "addpressuretocompon": [12, 20, 21], "pressur": [12, 20, 21], "fuel": [12, 19, 20, 21, 22], "addpressuretoel": [12, 20, 21], "presur": [12, 20, 21], "scalar": [12, 20, 21, 24], "addinertialload": [12, 20, 21], "inertiavector": [12, 20, 21], "inerti": [12, 20, 21], "due": [12, 20, 21, 24], "acceler": [12, 20, 21], "entir": [12, 19, 20, 21], "commonli": [12, 20, 21], "graviti": [12, 20, 21], "addcentrifugalload": [12, 20, 21], "omegavector": [12, 20, 21], "rotcent": [12, 20, 21], "firstord": [12, 20], "centrifug": [12, 20, 21], "veloc": [12, 20, 21], "rotor": [12, 20, 21], "roll": [12, 20, 21], "aircraft": [12, 20, 21], "rad": [12, 15, 19, 20, 21], "addloadfrombdf": [12, 20, 21], "loadid": [12, 20, 21], "grav": [12, 19, 20, 21], "rforc": [12, 19, 20, 21], "pload2": [12, 19, 20, 21], "pload4": [12, 19, 20, 21], "identif": [12, 20, 21], "zeroload": [12, 20, 21], "fext": [12, 20, 21], "u0": 12, "ex": [12, 19, 20], "aerodynam": [12, 20, 21], "aerostructur": [12, 20], "eigval": [12, 15], "xptsenslist": [12, 20], "partial": [12, 19, 20, 24], "dvsenslist": [12, 20], "svsenslist": [12, 20], "intent": [12, 15, 20, 21], "program": [12, 15, 20, 21], "logic": [12, 15, 19, 20, 21], "getfunctionkei": [12, 15, 20, 21], "writesensfil": [12, 15, 20, 21], "tacsaim": [12, 15, 20, 21], "esp": [12, 15, 20, 21], "cap": [12, 15, 20, 21], "sen": [12, 15, 20, 21], "aim": [12, 15, 20, 21], "tacs_aim": [12, 15, 20, 21], "wrapper": [12, 15, 19, 20, 21], "caps2tac": [12, 15, 20, 21], "adjacencyconstraint": [13, 14, 16, 19], "dvconstraint": [13, 19], "panellengthconstraint": [13, 19], "volumeconstraint": [13, 19], "a_0": [14, 19], "dv_0": [14, 19], "a_1": [14, 19], "dv_1": [14, 19], "a_n": [14, 19], "dv_n": [14, 19], "As": [14, 19], "pf_0": 14, "pf_45": 14, "pf_m45": 14, "pf_90": 14, "Or": 14, "blade": [14, 19], "too": [14, 19], "much": 14, "st": 14, "pt": [14, 24], "createdvconstraint": [14, 19], "dvindic": 14, "dvweight": 14, "One": [14, 19], "match": [14, 19], "modal": [15, 19], "createmodalproblem": [15, 19], "squar": [15, 19], "eigenfrequ": 15, "author": 16, "alasdair": 16, "christison": 16, "grai": 16, "bladestiffenedshel": 16, "createpanellengthconstraint": [16, 19], "proc": [16, 19, 20], "325": 16, "1983645": 16, "1415926": 16, "3x": 16, "modalproblem": [17, 19], "bucklingproblem": [17, 19], "offer": 18, "benefit": 18, "robust": 18, "pars": [18, 19], "fewer": 18, "keep": 18, "track": 18, "detail": 18, "discuss": 18, "layer": 19, "hook": 19, "nearli": 19, "custom": 19, "deal": 19, "dr": 19, "kenwai": 19, "gkk": 19, "brook": 19, "histori": 19, "printdebug": 19, "debug": [19, 20], "infer": 19, "element_non": 19, "scalar_2d_el": 19, "scalar_3d_el": 19, "pcm_element": 19, "writeconnect": 19, "writenod": 19, "writedisplac": 19, "writestrain": 19, "writestress": 19, "writeextra": 19, "writeload": 19, "writecoordinatefram": 19, "familysepar": 19, "famili": 19, "charact": 19, "condens": 19, "runtim": 19, "propid": 19, "comment": 19, "belong": 19, "ctetra": 19, "mani": 19, "conm1": 19, "conm2": 19, "thumb": 19, "equivel": 19, "mat2": 19, "prod": [19, 20], "cquad9": 19, "cbar": 19, "crod": 19, "chexa": 19, "cbush": 19, "desvar": 19, "counterpart": 19, "might": 19, "organ": 19, "space": 19, "wing_spar": 19, "seg": 19, "3600": 19, "3310": 19, "3797": 19, "731": 19, "3798": 19, "732": 19, "3799": 19, "733": 19, "3800": 19, "734": 19, "3801": 19, "735": 19, "3802": 19, "736": 19, "97": 19, "3262": 19, "3882": 19, "782": 19, "3601": 19, "98": 19, "3881": 19, "781": 19, "99": 19, "3875": 19, "3888": 19, "3885": 19, "3874": 19, "3887": 19, "3884": 19, "101": 19, "3892": 19, "3899": 19, "3896": 19, "3891": 19, "102": 19, "3898": 19, "3895": 19, "replac": 19, "referenc": 19, "rod_1": 19, "3320": 19, "rod_2": 19, "6600": 19, "6310": 19, "6320": 19, "hmname": 19, "quot": 19, "hwcolor": 19, "ignor": 19, "rib1": 19, "28": 19, "rib2": 19, "29": 19, "scalelist": 19, "offset": [19, 24], "tripan": 19, "len": 19, "addglobaldv": 19, "affect": 19, "cleanli": 19, "often": [19, 24], "intern": [19, 22], "increment": 19, "worri": 19, "elemcallbackfunct": 19, "unbound": 19, "getglobaldv": 19, "getglobaldvkei": 19, "globaldvkei": 19, "getglobaldvnum": 19, "num": 19, "globaldvnum": 19, "gettotalnumglobaldv": 19, "assignmassdv": 19, "eid": 19, "dvname": 19, "concentr": 19, "exclud": 19, "includebound": 19, "ngroup": 19, "includeop": 19, "excludeop": 19, "projectvector": 19, "basic": 19, "idea": 19, "ncomp": 19, "subgroup": 19, "oper": 19, "boil": 19, "down": 19, "subset": 19, "attempt": 19, "effici": 19, "critic": 19, "simplest": 19, "componentid": 19, "11th": 19, "fifth": 19, "rib": 19, "spar": 19, "probabl": 19, "advis": 19, "similarli": 19, "except": 19, "subtract": 19, "le_rib": 19, "insid": 19, "convex": 19, "hull": 19, "essenti": 19, "concav": 19, "smaller": 19, "accumul": 19, "skin": 19, "trail": 19, "u_skin": 19, "te_spar": 19, "conveni": [19, 24], "sort": 19, "alphabet": 19, "sequenti": 19, "includeopt": 19, "AND": 19, "getbdfinfo": 19, "bdfinfo": 19, "getcompnam": 19, "come": [19, 20, 21], "getglobalnodeidsforcomp": 19, "getlocalnodeidsforcomp": 19, "last": 19, "later": [19, 24], "callabl": 19, "sequenc": 19, "getorigdesignvar": 19, "were": 19, "asbvec": 19, "gettotalnumdesignvar": 19, "getorignod": 19, "getnumownedmultipliernod": 19, "nmultnod": 19, "getlocalmultipliernodeid": 19, "var": [19, 20, 21, 24], "applybcstovec": 19, "relat": 19, "identifi": 19, "expect": 19, "createtacsprobsfrombdf": 19, "skip": 19, "structproblem": 19, "predefin": 19, "tacsproblem": 19, "loadcas": [19, 20], "tload1": 19, "tload2": 19, "dload": 19, "sol": 19, "109": 19, "103": 19, "writebdf": 19, "actual": [19, 20, 21], "createvolumeconstraint": [19, 22], "close": [19, 22], "manifold": [19, 22], "water": [19, 22], "tight": [19, 22], "enough": [19, 22], "wingbox": [19, 22], "vol_w": [19, 22], "vol_fuel": [19, 22], "piec": [20, 21], "ksmsolver": 20, "natural_ord": 20, "rcm_order": 20, "nd_order": 20, "tacs_amd_ord": 20, "multicolor_ord": 20, "pcfilllevel": 20, "pcfillratio": 20, "flexibl": [20, 24], "usemonitor": 20, "monitor": 20, "monitorfrequ": 20, "setloadscal": 20, "reason": [20, 21], "eval": [20, 21], "cl_mass": [20, 21], "c1_mass": [20, 21], "adjointlist": 20, "getresidu": 20, "getjacobian": 20, "scipi": 20, "bsr_matric": 20, "b": 20, "tacsparallelmat": 20, "bsr_matrix": 20, "addtransposejacvecproduct": 20, "phi": 20, "solveadjoint": 20, "bvec": 20, "writeloadtobdf": 20, "loadcaseid": 20, "nastaran": 20, "timeintegr": 21, "integrationord": 21, "march": 21, "jacassemblyfreq": 21, "reassembl": 21, "slice": 21, "getnumtimestag": 21, "stage": 21, "multi": 21, "numstag": 21, "gettimestag": 21, "timestag": 21, "applic": 21, "udotdot": 21, "dvar": 21, "ddvar": 21, "prepiterativesolv": 21, "prepar": 21, "aeroelast": 21, "tightli": 21, "fluid": 21, "outer": 21, "multistag": 21, "numownednod": 21, "numvarspernod": 21, "tighli": 21, "cfd": 21, "externalcfdsolv": 21, "dstate": 21, "ddstate": 21, "volchecktol": 22, "closur": 22, "volconstraint": 22, "c1_wing": 22, "captur": 24, "small": 24, "via": 24, "mathbf": 24, "induc": 24, "exact": 24, "left": 24, "q": 24, "undeform": 24, "tempor": 24, "focu": 24, "dot": 24, "omega": 24, "ddot": 24, "concret": 24, "explan": 24, "_": 24, "m_": 24, "mathbb": 24, "xi": 24, "lagrangian": 24, "l": 24, "dfrac": 24, "dt": 24, "engeri": 24, "sum_": 24, "w_": 24, "t_": 24, "n_": 24, "xi_": 24, "0i": 24, "accur": 24, "predict": 24, "quaternion": 24, "epsilon": 24, "eta": 24, "lambda": 24, "satisifi": 24, "construct": 24, "ref": 24, "perpendicular": 24, "centerlin": 24, "mid": 24, "tangent": 24, "hat": 24, "preserv": 24, "zeta": 24, "bmatrix": 24, "xi_1": 24, "xi_2": 24, "eta_": 24, "ot": 24, "quantiti": 24, "introduc": 24, "systen": 24, "deflect": 24, "never": 24, "approx": 24, "zeroth": 24, "find": 24, "denot": 24, "orthogon": 24, "mathcal": 24, "bend": 24, "twist": 24, "theta": 24, "invari": 24, "transofrm": 24, "theta_": 24, "caus": 24, "epsilon_": 24, "alpha_": 24, "xx": 24, "xy": 24, "yy": 24, "aris": 24, "kappa_": 24, "penal": 24, "q_": 24, "penalti": 24, "cartesian": 24, "deviat": 24, "k_": 24, "v_": 24, "u_": 24, "suffer": 24, "phenomena": 24, "inabl": 24, "pure": 24, "without": 24, "allevi": 24, "higher": 24, "ty": 24, "exhibit": 24, "free": 24, "context": 24, "tild": 24, "green": 24, "longer": 24, "du": 24, "dx": 24, "fg": 24, "dq": 24, "lamb": 24, "xf": 24, "computenodalfram": 24, "const": 24, "tacsscalar": 24, "xd": 24, "interpolatefram": 24, "xdz": 24, "computederiv": 24, "npt": 24, "computedirector": 24, "vars_per_nod": 24, "dir": 24, "computetransform": 24, "curvilinear": 24, "invers": 24, "3x3": 24, "xdinv": 24, "detxd": 24, "inv3x3": 24, "zxdinv": 24, "tmp": 24, "ux0": 24, "ueta": 24, "u0x": 24, "u0d": 24, "matmatmult": 24, "mattransmatmult": 24, "u1x": 24, "u1d": 24, "matmatmultadd": 24}, "objects": {"TACS": [[0, 0, 1, "", "Assembler"], [0, 0, 1, "", "Creator"], [0, 0, 1, "", "Integrator"], [0, 0, 1, "", "MeshLoader"]], "TACS.Assembler": [[0, 1, 1, "", "addAdjointResProducts"], [0, 1, 1, "", "addAdjointResXptSensProducts"], [0, 1, 1, "", "addDVSens"], [0, 1, 1, "", "addJacobianVecProduct"], [0, 1, 1, "", "addMatDVSensInnerProduct"], [0, 1, 1, "", "addSVSens"], [0, 1, 1, "", "addXptSens"], [0, 1, 1, "", "applyBCs"], [0, 1, 1, "", "applyMatBCs"], [0, 1, 1, "", "assembleJacobian"], [0, 1, 1, "", "assembleMatCombo"], [0, 1, 1, "", "assembleMatType"], [0, 1, 1, "", "assembleRes"], [0, 1, 1, "", "computeReordering"], [0, 1, 1, "", "copyVariables"], [0, 1, 1, "", "create"], [0, 1, 1, "", "createDesignVec"], [0, 1, 1, "", "createMat"], [0, 1, 1, "", "createNodeVec"], [0, 1, 1, "", "createSchurMat"], [0, 1, 1, "", "createVec"], [0, 1, 1, "", "evalEnergies"], [0, 1, 1, "", "evalFunctions"], [0, 1, 1, "", "getBcMap"], [0, 1, 1, "", "getDesignVarRange"], [0, 1, 1, "", "getDesignVars"], [0, 1, 1, "", "getElementData"], [0, 1, 1, "", "getElementNodes"], [0, 1, 1, "", "getElements"], [0, 1, 1, "", "getInitConditions"], [0, 1, 1, "", "getMPIComm"], [0, 1, 1, "", "getNodes"], [0, 1, 1, "", "getNumDependentNodes"], [0, 1, 1, "", "getNumElements"], [0, 1, 1, "", "getNumNodes"], [0, 1, 1, "", "getNumOwnedNodes"], [0, 1, 1, "", "getOwnerRange"], [0, 1, 1, "", "getReordering"], [0, 1, 1, "", "getSimulationTime"], [0, 1, 1, "", "getVariables"], [0, 1, 1, "", "getVarsPerNode"], [0, 1, 1, "", "initialize"], [0, 1, 1, "", "reorderVec"], [0, 1, 1, "", "setAuxElements"], [0, 1, 1, "", "setBCValuesFromVec"], [0, 1, 1, "", "setBCs"], [0, 1, 1, "", "setDependentNodes"], [0, 1, 1, "", "setDesignVars"], [0, 1, 1, "", "setElementConnectivity"], [0, 1, 1, "", "setElements"], [0, 1, 1, "", "setInitConditions"], [0, 1, 1, "", "setNodes"], [0, 1, 1, "", "setNumThreads"], [0, 1, 1, "", "setSimulationTime"], [0, 1, 1, "", "setVariables"], [0, 1, 1, "", "testElement"], [0, 1, 1, "", "testFunction"], [0, 1, 1, "", "zeroDDotVariables"], [0, 1, 1, "", "zeroDotVariables"], [0, 1, 1, "", "zeroVariables"]], "TACS.Creator": [[0, 1, 1, "", "getElementPartition"], [0, 1, 1, "", "setBoundaryConditions"], [0, 1, 1, "", "setElements"], [0, 1, 1, "", "setGlobalConnectivity"]], "TACS.Integrator": [[0, 1, 1, "", "checkGradients"], [0, 1, 1, "", "evalFunctions"], [0, 1, 1, "", "getAdjoint"], [0, 1, 1, "", "getGradient"], [0, 1, 1, "", "getNumTimeSteps"], [0, 1, 1, "", "getStates"], [0, 1, 1, "", "getXptGradient"], [0, 1, 1, "", "initAdjoint"], [0, 1, 1, "", "integrate"], [0, 1, 1, "", "integrateAdjoint"], [0, 1, 1, "", "iterate"], [0, 1, 1, "", "iterateAdjoint"], [0, 1, 1, "", "loadStates"], [0, 1, 1, "", "persistStates"], [0, 1, 1, "", "postAdjoint"], [0, 1, 1, "", "setAbsTol"], [0, 1, 1, "", "setFH5"], [0, 1, 1, "", "setFunctions"], [0, 1, 1, "", "setInitNewtonDeltaFraction"], [0, 1, 1, "", "setJacAssemblyFreq"], [0, 1, 1, "", "setKrylovSubspaceMethod"], [0, 1, 1, "", "setMaxNewtonIters"], [0, 1, 1, "", "setOutputFrequency"], [0, 1, 1, "", "setOutputPrefix"], [0, 1, 1, "", "setPrintLevel"], [0, 1, 1, "", "setRelTol"], [0, 1, 1, "", "setTimeInterval"], [0, 1, 1, "", "setUseLapack"], [0, 1, 1, "", "setUseSchurMat"]], "TACS.MeshLoader": [[0, 1, 1, "", "addAuxElement"], [0, 1, 1, "", "addFunctionDomain"], [0, 1, 1, "", "createTACS"], [0, 1, 1, "", "getBCs"], [0, 1, 1, "", "getComponentDescript"], [0, 1, 1, "", "getConnectivity"], [0, 1, 1, "", "getElementDescript"], [0, 1, 1, "", "getNumComponents"], [0, 1, 1, "", "scanBDFFile"], [0, 1, 1, "", "setElement"]], "tacs": [[1, 2, 0, "module-0", "constitutive"], [3, 2, 0, "module-2", "elements"], [4, 2, 0, "-", "functions"], [19, 2, 0, "-", "pytacs"]], "tacs.constitutive": [[1, 0, 1, "", "BasicBeamConstitutive"], [1, 0, 1, "", "BladeStiffenedShellConstitutive"], [1, 0, 1, "", "CompositeShellConstitutive"], [1, 0, 1, "", "DOFSpringConstitutive"], [1, 0, 1, "", "GeneralMassConstitutive"], [1, 0, 1, "", "GeneralSpringConstitutive"], [1, 0, 1, "", "IsoRectangleBeamConstitutive"], [1, 0, 1, "", "IsoShellConstitutive"], [1, 0, 1, "", "IsoTubeBeamConstitutive"], [1, 0, 1, "", "LamParamShellConstitutive"], [1, 0, 1, "", "MaterialProperties"], [1, 0, 1, "", "OrthotropicPly"], [1, 0, 1, "", "PhaseChangeMaterialConstitutive"], [1, 0, 1, "", "PlaneStressConstitutive"], [1, 0, 1, "", "PointMassConstitutive"], [1, 0, 1, "", "ShellConstitutive"], [1, 0, 1, "", "SmearedCompositeShellConstitutive"], [1, 0, 1, "", "SolidConstitutive"]], "tacs.constitutive.BasicBeamConstitutive": [[1, 1, 1, "", "generateBDFCard"]], "tacs.constitutive.BladeStiffenedShellConstitutive": [[1, 1, 1, "", "setKSWeight"], [1, 1, 1, "", "setPanelPlyFractionBounds"], [1, 1, 1, "", "setPanelThicknessBounds"], [1, 1, 1, "", "setStiffenerHeightBounds"], [1, 1, 1, "", "setStiffenerPitchBounds"], [1, 1, 1, "", "setStiffenerPlyFractionBounds"], [1, 1, 1, "", "setStiffenerThicknessBounds"]], "tacs.constitutive.CompositeShellConstitutive": [[1, 1, 1, "", "generateBDFCard"]], "tacs.constitutive.DOFSpringConstitutive": [[1, 1, 1, "", "generateBDFCard"]], "tacs.constitutive.GeneralMassConstitutive": [[1, 1, 1, "", "evalMassMatrix"]], "tacs.constitutive.IsoRectangleBeamConstitutive": [[1, 1, 1, "", "generateBDFCard"]], "tacs.constitutive.IsoShellConstitutive": [[1, 1, 1, "", "generateBDFCard"]], "tacs.constitutive.IsoTubeBeamConstitutive": [[1, 1, 1, "", "generateBDFCard"]], "tacs.constitutive.MaterialProperties": [[1, 1, 1, "", "generateBDFCard"], [1, 1, 1, "", "getMaterialProperties"], [1, 1, 1, "", "getNastranID"], [1, 1, 1, "", "setDensity"], [1, 1, 1, "", "setNastranID"], [1, 1, 1, "", "setSpecificHeat"]], "tacs.constitutive.OrthotropicPly": [[1, 1, 1, "", "getMaterialProperties"]], "tacs.constitutive.ShellConstitutive": [[1, 1, 1, "", "setDrillingRegularization"]], "tacs.constitutive.SmearedCompositeShellConstitutive": [[1, 1, 1, "", "generateBDFCard"]], "tacs.constitutive.SolidConstitutive": [[1, 1, 1, "", "generateBDFCard"]], "tacs.constraints": [[11, 0, 1, "", "AdjacencyConstraint"], [14, 0, 1, "", "DVConstraint"], [16, 0, 1, "", "PanelLengthConstraint"], [22, 0, 1, "", "VolumeConstraint"], [11, 2, 0, "-", "adjacency"], [14, 2, 0, "-", "dv"], [16, 2, 0, "-", "panel_length"], [22, 2, 0, "-", "volume"]], "tacs.constraints.AdjacencyConstraint": [[11, 1, 1, "", "addConstraint"], [11, 3, 1, "", "dtype"], [11, 1, 1, "", "evalConstraints"], [11, 1, 1, "", "evalConstraintsSens"], [11, 1, 1, "", "getConstraintBounds"], [11, 1, 1, "", "getConstraintKeys"], [11, 1, 1, "", "getConstraintSizes"], [11, 1, 1, "", "getDesignVarRange"], [11, 1, 1, "", "getDesignVars"], [11, 1, 1, "", "getNodes"], [11, 1, 1, "", "getNumCoordinates"], [11, 1, 1, "", "getNumDesignVars"], [11, 1, 1, "", "getNumOwnedNodes"], [11, 1, 1, "", "getNumVariables"], [11, 1, 1, "", "getOption"], [11, 1, 1, "", "getVarsPerNode"], [11, 1, 1, "", "printDefaultOptions"], [11, 1, 1, "", "printOptions"], [11, 1, 1, "", "setDesignVars"], [11, 1, 1, "", "setNodes"], [11, 1, 1, "", "setOption"], [11, 1, 1, "", "setVarName"], [11, 1, 1, "", "writeVisualization"]], "tacs.constraints.DVConstraint": [[14, 1, 1, "", "addConstraint"], [14, 3, 1, "", "dtype"], [14, 1, 1, "", "evalConstraints"], [14, 1, 1, "", "evalConstraintsSens"], [14, 1, 1, "", "getConstraintBounds"], [14, 1, 1, "", "getConstraintKeys"], [14, 1, 1, "", "getConstraintSizes"], [14, 1, 1, "", "getDesignVarRange"], [14, 1, 1, "", "getDesignVars"], [14, 1, 1, "", "getNodes"], [14, 1, 1, "", "getNumCoordinates"], [14, 1, 1, "", "getNumDesignVars"], [14, 1, 1, "", "getNumOwnedNodes"], [14, 1, 1, "", "getNumVariables"], [14, 1, 1, "", "getOption"], [14, 1, 1, "", "getVarsPerNode"], [14, 1, 1, "", "printDefaultOptions"], [14, 1, 1, "", "printOptions"], [14, 1, 1, "", "setDesignVars"], [14, 1, 1, "", "setNodes"], [14, 1, 1, "", "setOption"], [14, 1, 1, "", "setVarName"]], "tacs.constraints.PanelLengthConstraint": [[16, 1, 1, "", "addConstraint"], [16, 3, 1, "", "dtype"], [16, 1, 1, "", "evalConstraints"], [16, 1, 1, "", "evalConstraintsSens"], [16, 1, 1, "", "getConstraintBounds"], [16, 1, 1, "", "getConstraintKeys"], [16, 1, 1, "", "getConstraintSizes"], [16, 1, 1, "", "getDesignVarRange"], [16, 1, 1, "", "getDesignVars"], [16, 1, 1, "", "getNodes"], [16, 1, 1, "", "getNumCoordinates"], [16, 1, 1, "", "getNumDesignVars"], [16, 1, 1, "", "getNumOwnedNodes"], [16, 1, 1, "", "getNumVariables"], [16, 1, 1, "", "getOption"], [16, 1, 1, "", "getVarsPerNode"], [16, 1, 1, "", "printDefaultOptions"], [16, 1, 1, "", "printOptions"], [16, 1, 1, "", "setDesignVars"], [16, 1, 1, "", "setNodes"], [16, 1, 1, "", "setOption"], [16, 1, 1, "", "setVarName"]], "tacs.constraints.VolumeConstraint": [[22, 1, 1, "", "addConstraint"], [22, 3, 1, "", "dtype"], [22, 1, 1, "", "evalConstraints"], [22, 1, 1, "", "evalConstraintsSens"], [22, 1, 1, "", "getConstraintBounds"], [22, 1, 1, "", "getConstraintKeys"], [22, 1, 1, "", "getConstraintSizes"], [22, 1, 1, "", "getDesignVarRange"], [22, 1, 1, "", "getDesignVars"], [22, 1, 1, "", "getNodes"], [22, 1, 1, "", "getNumCoordinates"], [22, 1, 1, "", "getNumDesignVars"], [22, 1, 1, "", "getNumOwnedNodes"], [22, 1, 1, "", "getNumVariables"], [22, 1, 1, "", "getOption"], [22, 1, 1, "", "getVarsPerNode"], [22, 1, 1, "", "printDefaultOptions"], [22, 1, 1, "", "printOptions"], [22, 1, 1, "", "setDesignVars"], [22, 1, 1, "", "setNodes"], [22, 1, 1, "", "setOption"], [22, 1, 1, "", "setVarName"], [22, 1, 1, "", "writeVisualization"]], "tacs.elements": [[3, 0, 1, "", "Beam2"], [3, 0, 1, "", "Beam2ModRot"], [3, 0, 1, "", "Beam3"], [3, 0, 1, "", "Beam3ModRot"], [3, 0, 1, "", "BeamRefAxisTransform"], [3, 0, 1, "", "CubicHexaBasis"], [3, 0, 1, "", "CubicQuadBasis"], [3, 0, 1, "", "CubicTetrahedralBasis"], [3, 0, 1, "", "CubicTriangleBasis"], [3, 0, 1, "", "Element2D"], [3, 0, 1, "", "Element3D"], [3, 0, 1, "", "HeatConduction2D"], [3, 0, 1, "", "HeatConduction3D"], [3, 0, 1, "", "LinearElasticity2D"], [3, 0, 1, "", "LinearElasticity3D"], [3, 0, 1, "", "LinearHexaBasis"], [3, 0, 1, "", "LinearQuadBasis"], [3, 0, 1, "", "LinearTetrahedralBasis"], [3, 0, 1, "", "LinearThermoelasticity2D"], [3, 0, 1, "", "LinearThermoelasticity3D"], [3, 0, 1, "", "LinearTriangleBasis"], [3, 0, 1, "", "MassElement"], [3, 0, 1, "", "PCMHeatConduction2D"], [3, 0, 1, "", "Quad16NonlinearShell"], [3, 0, 1, "", "Quad16NonlinearThermalShell"], [3, 0, 1, "", "Quad16Shell"], [3, 0, 1, "", "Quad16ThermalShell"], [3, 0, 1, "", "Quad4NonlinearShell"], [3, 0, 1, "", "Quad4NonlinearThermalShell"], [3, 0, 1, "", "Quad4Shell"], [3, 0, 1, "", "Quad4ThermalShell"], [3, 0, 1, "", "Quad9NonlinearShell"], [3, 0, 1, "", "Quad9NonlinearThermalShell"], [3, 0, 1, "", "Quad9Shell"], [3, 0, 1, "", "Quad9ThermalShell"], [3, 0, 1, "", "QuadraticHexaBasis"], [3, 0, 1, "", "QuadraticQuadBasis"], [3, 0, 1, "", "QuadraticTetrahedralBasis"], [3, 0, 1, "", "QuadraticTriangleBasis"], [3, 0, 1, "", "QuarticQuadBasis"], [3, 0, 1, "", "QuinticQuadBasis"], [3, 0, 1, "", "RBE2"], [3, 0, 1, "", "RBE3"], [3, 0, 1, "", "ShellNaturalTransform"], [3, 0, 1, "", "ShellRefAxisTransform"], [3, 0, 1, "", "SpringElement"], [3, 0, 1, "", "SpringIdentityTransform"], [3, 0, 1, "", "SpringRefAxisTransform"], [3, 0, 1, "", "SpringRefFrameTransform"], [3, 0, 1, "", "Tri3NonlinearShell"], [3, 0, 1, "", "Tri3NonlinearThermalShell"], [3, 0, 1, "", "Tri3Shell"], [3, 0, 1, "", "Tri3ThermalShell"]], "tacs.elements.BeamRefAxisTransform": [[3, 1, 1, "", "getRefAxis"]], "tacs.elements.RBE2": [[3, 1, 1, "", "setScalingParameters"]], "tacs.elements.RBE3": [[3, 1, 1, "", "setScalingParameters"]], "tacs.elements.ShellRefAxisTransform": [[3, 1, 1, "", "getRefAxis"]], "tacs.elements.SpringRefAxisTransform": [[3, 1, 1, "", "getRefAxis"]], "tacs.elements.SpringRefFrameTransform": [[3, 1, 1, "", "getRefAxes"]], "tacs.functions": [[4, 0, 1, "", "AverageTemperature"], [4, 0, 1, "", "CenterOfMass"], [4, 0, 1, "", "Compliance"], [4, 0, 1, "", "EnclosedVolume"], [4, 0, 1, "", "KSDisplacement"], [4, 0, 1, "", "KSFailure"], [4, 0, 1, "", "KSTemperature"], [4, 0, 1, "", "MomentOfInertia"], [4, 0, 1, "", "StructuralMass"]], "tacs.functions.Compliance": [[4, 1, 1, "", "setComplianceType"]], "tacs.problems": [[12, 0, 1, "", "BucklingProblem"], [15, 0, 1, "", "ModalProblem"], [20, 0, 1, "", "StaticProblem"], [21, 0, 1, "", "TransientProblem"], [12, 2, 0, "-", "buckling"], [15, 2, 0, "-", "modal"], [20, 2, 0, "-", "static"], [21, 2, 0, "-", "transient"]], "tacs.problems.BucklingProblem": [[12, 1, 1, "", "addCentrifugalLoad"], [12, 1, 1, "", "addDVSens"], [12, 1, 1, "", "addFunction"], [12, 1, 1, "", "addInertialLoad"], [12, 1, 1, "", "addLoadFromBDF"], [12, 1, 1, "", "addLoadToComponents"], [12, 1, 1, "", "addLoadToNodes"], [12, 1, 1, "", "addLoadToRHS"], [12, 1, 1, "", "addPressureToComponents"], [12, 1, 1, "", "addPressureToElements"], [12, 1, 1, "", "addTractionToComponents"], [12, 1, 1, "", "addTractionToElements"], [12, 1, 1, "", "addXptSens"], [12, 3, 1, "", "dtype"], [12, 1, 1, "", "evalFunctions"], [12, 1, 1, "", "evalFunctionsSens"], [12, 1, 1, "", "evalSVSens"], [12, 1, 1, "", "getDesignVarRange"], [12, 1, 1, "", "getDesignVars"], [12, 1, 1, "", "getFunctionKeys"], [12, 1, 1, "", "getNodes"], [12, 1, 1, "", "getNumCoordinates"], [12, 1, 1, "", "getNumDesignVars"], [12, 1, 1, "", "getNumEigs"], [12, 1, 1, "", "getNumOwnedNodes"], [12, 1, 1, "", "getNumVariables"], [12, 1, 1, "", "getOption"], [12, 1, 1, "", "getVariables"], [12, 1, 1, "", "getVarsPerNode"], [12, 1, 1, "", "printDefaultOptions"], [12, 1, 1, "", "printOptions"], [12, 1, 1, "", "setDesignVars"], [12, 1, 1, "", "setNodes"], [12, 1, 1, "", "setOption"], [12, 1, 1, "", "setValName"], [12, 1, 1, "", "setVarName"], [12, 1, 1, "", "solve"], [12, 1, 1, "", "writeSensFile"], [12, 1, 1, "", "writeSolution"], [12, 1, 1, "", "zeroLoads"]], "tacs.problems.ModalProblem": [[15, 1, 1, "", "addFunction"], [15, 3, 1, "", "dtype"], [15, 1, 1, "", "evalFunctions"], [15, 1, 1, "", "evalFunctionsSens"], [15, 1, 1, "", "getDesignVarRange"], [15, 1, 1, "", "getDesignVars"], [15, 1, 1, "", "getFunctionKeys"], [15, 1, 1, "", "getNodes"], [15, 1, 1, "", "getNumCoordinates"], [15, 1, 1, "", "getNumDesignVars"], [15, 1, 1, "", "getNumEigs"], [15, 1, 1, "", "getNumOwnedNodes"], [15, 1, 1, "", "getNumVariables"], [15, 1, 1, "", "getOption"], [15, 1, 1, "", "getVariables"], [15, 1, 1, "", "getVarsPerNode"], [15, 1, 1, "", "printDefaultOptions"], [15, 1, 1, "", "printOptions"], [15, 1, 1, "", "setDesignVars"], [15, 1, 1, "", "setNodes"], [15, 1, 1, "", "setOption"], [15, 1, 1, "", "setValName"], [15, 1, 1, "", "setVarName"], [15, 1, 1, "", "solve"], [15, 1, 1, "", "writeSensFile"], [15, 1, 1, "", "writeSolution"]], "tacs.problems.StaticProblem": [[20, 1, 1, "", "addAdjointResProducts"], [20, 1, 1, "", "addAdjointResXptSensProducts"], [20, 1, 1, "", "addCentrifugalLoad"], [20, 1, 1, "", "addDVSens"], [20, 1, 1, "", "addFunction"], [20, 1, 1, "", "addInertialLoad"], [20, 1, 1, "", "addLoadFromBDF"], [20, 1, 1, "", "addLoadToComponents"], [20, 1, 1, "", "addLoadToNodes"], [20, 1, 1, "", "addLoadToRHS"], [20, 1, 1, "", "addPressureToComponents"], [20, 1, 1, "", "addPressureToElements"], [20, 1, 1, "", "addSVSens"], [20, 1, 1, "", "addTractionToComponents"], [20, 1, 1, "", "addTractionToElements"], [20, 1, 1, "", "addTransposeJacVecProduct"], [20, 1, 1, "", "addXptSens"], [20, 3, 1, "", "dtype"], [20, 1, 1, "", "evalFunctions"], [20, 1, 1, "", "evalFunctionsSens"], [20, 1, 1, "", "getDesignVarRange"], [20, 1, 1, "", "getDesignVars"], [20, 1, 1, "", "getFunctionKeys"], [20, 1, 1, "", "getJacobian"], [20, 1, 1, "", "getNodes"], [20, 1, 1, "", "getNumCoordinates"], [20, 1, 1, "", "getNumDesignVars"], [20, 1, 1, "", "getNumOwnedNodes"], [20, 1, 1, "", "getNumVariables"], [20, 1, 1, "", "getOption"], [20, 1, 1, "", "getResidual"], [20, 1, 1, "", "getVariables"], [20, 1, 1, "", "getVarsPerNode"], [20, 4, 1, "", "loadScale"], [20, 1, 1, "", "printDefaultOptions"], [20, 1, 1, "", "printOptions"], [20, 1, 1, "", "setDesignVars"], [20, 1, 1, "", "setLoadScale"], [20, 1, 1, "", "setNodes"], [20, 1, 1, "", "setOption"], [20, 1, 1, "", "setVarName"], [20, 1, 1, "", "setVariables"], [20, 1, 1, "", "solve"], [20, 1, 1, "", "solveAdjoint"], [20, 1, 1, "", "writeLoadToBDF"], [20, 1, 1, "", "writeSensFile"], [20, 1, 1, "", "writeSolution"], [20, 1, 1, "", "zeroLoads"], [20, 1, 1, "", "zeroVariables"]], "tacs.problems.TransientProblem": [[21, 1, 1, "", "addCentrifugalLoad"], [21, 1, 1, "", "addFunction"], [21, 1, 1, "", "addInertialLoad"], [21, 1, 1, "", "addLoadFromBDF"], [21, 1, 1, "", "addLoadToComponents"], [21, 1, 1, "", "addLoadToNodes"], [21, 1, 1, "", "addLoadToRHS"], [21, 1, 1, "", "addPressureToComponents"], [21, 1, 1, "", "addPressureToElements"], [21, 1, 1, "", "addTractionToComponents"], [21, 1, 1, "", "addTractionToElements"], [21, 3, 1, "", "dtype"], [21, 1, 1, "", "evalFunctions"], [21, 1, 1, "", "evalFunctionsSens"], [21, 1, 1, "", "getDesignVarRange"], [21, 1, 1, "", "getDesignVars"], [21, 1, 1, "", "getFunctionKeys"], [21, 1, 1, "", "getNodes"], [21, 1, 1, "", "getNumCoordinates"], [21, 1, 1, "", "getNumDesignVars"], [21, 1, 1, "", "getNumOwnedNodes"], [21, 1, 1, "", "getNumTimeStages"], [21, 1, 1, "", "getNumTimeSteps"], [21, 1, 1, "", "getNumVariables"], [21, 1, 1, "", "getOption"], [21, 1, 1, "", "getTimeStages"], [21, 1, 1, "", "getTimeSteps"], [21, 1, 1, "", "getVariables"], [21, 1, 1, "", "getVarsPerNode"], [21, 1, 1, "", "iterate"], [21, 1, 1, "", "prepIterativeSolve"], [21, 1, 1, "", "printDefaultOptions"], [21, 1, 1, "", "printOptions"], [21, 1, 1, "", "setDesignVars"], [21, 1, 1, "", "setInitConditions"], [21, 1, 1, "", "setNodes"], [21, 1, 1, "", "setOption"], [21, 1, 1, "", "setVarName"], [21, 1, 1, "", "solve"], [21, 1, 1, "", "writeSensFile"], [21, 1, 1, "", "writeSolution"], [21, 1, 1, "", "zeroLoads"]], "tacs.pytacs": [[19, 5, 1, "", "elemCallBack"], [19, 0, 1, "", "pyTACS"]], "tacs.pytacs.pyTACS": [[19, 1, 1, "", "addGlobalDV"], [19, 1, 1, "", "applyBCsToVec"], [19, 1, 1, "", "assignMassDV"], [19, 1, 1, "", "createAdjacencyConstraint"], [19, 1, 1, "", "createBucklingProblem"], [19, 1, 1, "", "createDVConstraint"], [19, 1, 1, "", "createDesignVec"], [19, 1, 1, "", "createModalProblem"], [19, 1, 1, "", "createNodeVec"], [19, 1, 1, "", "createPanelLengthConstraint"], [19, 1, 1, "", "createStaticProblem"], [19, 1, 1, "", "createTACSProbsFromBDF"], [19, 1, 1, "", "createTransientProblem"], [19, 1, 1, "", "createVec"], [19, 1, 1, "", "createVolumeConstraint"], [19, 3, 1, "", "dtype"], [19, 1, 1, "", "getBDFInfo"], [19, 1, 1, "", "getCompNames"], [19, 1, 1, "", "getDesignVarRange"], [19, 1, 1, "", "getGlobalDVKeys"], [19, 1, 1, "", "getGlobalDVNums"], [19, 1, 1, "", "getGlobalDVs"], [19, 1, 1, "", "getGlobalNodeIDsForComps"], [19, 1, 1, "", "getLocalMultiplierNodeIDs"], [19, 1, 1, "", "getLocalNodeIDsForComps"], [19, 1, 1, "", "getNumComponents"], [19, 1, 1, "", "getNumDesignVars"], [19, 1, 1, "", "getNumOwnedMultiplierNodes"], [19, 1, 1, "", "getNumOwnedNodes"], [19, 1, 1, "", "getOption"], [19, 1, 1, "", "getOrigDesignVars"], [19, 1, 1, "", "getOrigNodes"], [19, 1, 1, "", "getTotalNumDesignVars"], [19, 1, 1, "", "getTotalNumGlobalDVs"], [19, 1, 1, "", "getVarsPerNode"], [19, 1, 1, "", "initialize"], [19, 1, 1, "", "printDefaultOptions"], [19, 1, 1, "", "printOptions"], [19, 1, 1, "", "selectCompIDs"], [19, 1, 1, "", "setOption"], [19, 1, 1, "", "writeBDF"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:module", "3": "py:attribute", "4": "py:property", "5": "py:function"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "module", "Python module"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "property", "Python property"], "5": ["py", "function", "Python function"]}, "titleterms": {"direct": 0, "workflow": [0, 18], "assembl": 0, "meshload": 0, "creator": 0, "frequencyanalysi": 0, "integr": 0, "constitut": [1, 24], "modul": [1, 2, 3, 4], "materi": 1, "class": [1, 3, 13, 17, 19], "core": 2, "element": [3, 24], "basi": [3, 24], "model": 3, "transform": [3, 24], "function": 4, "crm": 5, "optim": 5, "plate": 6, "under": 6, "static": 6, "load": 6, "batteri": 7, "pack": 7, "dure": 7, "thermal": [7, 24], "runawai": 7, "tac": [8, 9, 24], "overview": 8, "get": 8, "start": 8, "exampl": 8, "refer": [8, 11, 12, 14, 15, 16, 19, 20, 21, 22, 24], "indic": 8, "tabl": 8, "instal": 9, "from": 9, "anaconda": 9, "sourc": 9, "prerequisit": 9, "basic": 9, "step": 9, "compil": 9, "detail": 9, "instruct": 9, "check": 9, "out": 9, "code": 9, "depend": 9, "make": 9, "c": 9, "librari": 9, "postprocess": 9, "tool": 9, "python": 9, "interfac": [9, 10], "adjacencyconstraint": 11, "option": [11, 12, 15, 19, 20, 21, 22], "api": [11, 12, 14, 15, 16, 19, 20, 21, 22], "bucklingproblem": 12, "constraint": 13, "dvconstraint": 14, "modalproblem": 15, "panellengthconstraint": 16, "problem": 17, "pytac": [18, 19], "initi": 19, "elemcallback": 19, "without": 19, "tag": 19, "compon": [19, 24], "group": 19, "bdf": 19, "icem": 19, "label": 19, "format": 19, "femap": 19, "patran": 19, "hypermesh": 19, "staticproblem": 20, "transientproblem": 21, "volumeconstraint": 22, "beam": 24, "shell": 24, "director": 24, "parametr": 24, "volum": 24, "displac": 24, "local": 24, "attach": 24, "frame": 24, "axi": 24, "project": 24, "natur": 24, "strain": 24, "express": 24, "formul": 24, "drill": 24, "rotat": 24, "mix": 24, "interpol": 24, "tensori": 24, "relationship": 24, "equat": 24, "motion": 24, "implement": 24, "field": 24, "comput": 24, "theori": 25}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 58}, "alltitles": {"Direct": [[0, "direct"]], "Workflow": [[0, "workflow"], [18, "workflow"]], "Assembler": [[0, "assembler"]], "MeshLoader": [[0, "meshloader"]], "Creator": [[0, "creator"]], "FrequencyAnalysis": [[0, "frequencyanalysis"]], "Integrator": [[0, "integrator"]], "constitutive module": [[1, "constitutive-module"]], "Material classes": [[1, "material-classes"]], "Constitutive classes": [[1, "constitutive-classes"]], "Core modules": [[2, "core-modules"]], "elements module": [[3, "elements-module"]], "Basis classes": [[3, "basis-classes"]], "Model classes": [[3, "model-classes"]], "Transform classes": [[3, "transform-classes"]], "Element classes": [[3, "element-classes"]], "functions module": [[4, "functions-module"]], "CRM Optimization": [[5, "crm-optimization"]], "Plate under static load": [[6, "plate-under-static-load"]], "Battery pack during thermal runaway": [[7, "battery-pack-during-thermal-runaway"]], "TACS Overview": [[8, "tacs-overview"]], "Getting Started": [[8, "getting-started"]], "Examples": [[8, "examples"]], "References": [[8, "references"]], "Indices and tables": [[8, "indices-and-tables"]], "Install": [[9, "install"]], "From Anaconda": [[9, "from-anaconda"]], "From source": [[9, "from-source"]], "Prerequisites": [[9, "prerequisites"]], "Basic steps to compile TACS": [[9, "basic-steps-to-compile-tacs"]], "Detailed installation instructions": [[9, "detailed-installation-instructions"]], "Checking out the code": [[9, "checking-out-the-code"]], "Install dependencies": [[9, "install-dependencies"]], "Make the C++ TACS library": [[9, "make-the-c-tacs-library"]], "Install postprocessing tools": [[9, "install-postprocessing-tools"]], "Installing the python interface": [[9, "installing-the-python-interface"]], "Interfaces": [[10, "interfaces"]], "AdjacencyConstraint": [[11, "module-tacs.constraints.adjacency"]], "Options": [[11, "options"], [12, "options"], [15, "options"], [19, "options"], [20, "options"], [21, "options"], [22, "options"]], "API Reference": [[11, "api-reference"], [12, "api-reference"], [14, "api-reference"], [15, "api-reference"], [16, "api-reference"], [19, "api-reference"], [20, "api-reference"], [21, "api-reference"], [22, "api-reference"]], "BucklingProblem": [[12, "module-tacs.problems.buckling"]], "Constraint classes": [[13, "constraint-classes"]], "DVConstraint": [[14, "module-tacs.constraints.dv"]], "ModalProblem": [[15, "module-tacs.problems.modal"]], "PanelLengthConstraint": [[16, "module-tacs.constraints.panel_length"]], "Problem classes": [[17, "problem-classes"]], "pyTACS": [[18, "pytacs"]], "pyTACS class": [[19, "module-tacs.pytacs"]], "Initializing": [[19, "initializing"]], "Initializing with elemCallBack": [[19, "initializing-with-elemcallback"]], "Initializing without elemCallBack": [[19, "initializing-without-elemcallback"]], "Tagging component groups in BDF": [[19, "tagging-component-groups-in-bdf"]], "ICEM component label format": [[19, "icem-component-label-format"]], "FEMAP component label format": [[19, "femap-component-label-format"]], "Patran component label format": [[19, "patran-component-label-format"]], "HyperMesh component label format": [[19, "hypermesh-component-label-format"]], "StaticProblem": [[20, "module-tacs.problems.static"]], "TransientProblem": [[21, "module-tacs.problems.transient"]], "VolumeConstraint": [[22, "module-tacs.constraints.volume"]], "Beam and shell elements in TACS": [[24, "beam-and-shell-elements-in-tacs"]], "Director parametrization": [[24, "director-parametrization"]], "Beam volume parametrization": [[24, "beam-volume-parametrization"]], "Shell volume parametrization": [[24, "shell-volume-parametrization"]], "Displacement parametrization": [[24, "displacement-parametrization"]], "Transformation to local shell-attached frame": [[24, "transformation-to-local-shell-attached-frame"]], "Reference axis projection transform": [[24, "reference-axis-projection-transform"]], "Natural transform": [[24, "natural-transform"]], "Strain expressions": [[24, "strain-expressions"]], "Thermal strain formulation": [[24, "thermal-strain-formulation"]], "Drilling rotation": [[24, "drilling-rotation"]], "Mixed Interpolation of Tensorial Components": [[24, "mixed-interpolation-of-tensorial-components"]], "Constitutive relationships for the shell element": [[24, "constitutive-relationships-for-the-shell-element"]], "Equations of motion": [[24, "equations-of-motion"]], "Director implementation": [[24, "director-implementation"]], "Beam element implementation": [[24, "beam-element-implementation"]], "Shell element implementation": [[24, "shell-element-implementation"]], "Shell element basis": [[24, "shell-element-basis"]], "Director field parametrization": [[24, "director-field-parametrization"]], "Transformation": [[24, "transformation"]], "Strain computation": [[24, "strain-computation"]], "Theory": [[25, "theory"]]}, "indexentries": {"assembler (class in tacs)": [[0, "TACS.Assembler"]], "creator (class in tacs)": [[0, "TACS.Creator"]], "integrator (class in tacs)": [[0, "TACS.Integrator"]], "meshloader (class in tacs)": [[0, "TACS.MeshLoader"]], "addadjointresproducts() (tacs.assembler method)": [[0, "TACS.Assembler.addAdjointResProducts"]], "addadjointresxptsensproducts() (tacs.assembler method)": [[0, "TACS.Assembler.addAdjointResXptSensProducts"]], "addauxelement() (tacs.meshloader method)": [[0, "TACS.MeshLoader.addAuxElement"]], "adddvsens() (tacs.assembler method)": [[0, "TACS.Assembler.addDVSens"]], "addfunctiondomain() (tacs.meshloader method)": [[0, "TACS.MeshLoader.addFunctionDomain"]], "addjacobianvecproduct() (tacs.assembler method)": [[0, "TACS.Assembler.addJacobianVecProduct"]], "addmatdvsensinnerproduct() (tacs.assembler method)": [[0, "TACS.Assembler.addMatDVSensInnerProduct"]], "addsvsens() (tacs.assembler method)": [[0, "TACS.Assembler.addSVSens"]], "addxptsens() (tacs.assembler method)": [[0, "TACS.Assembler.addXptSens"]], "applybcs() (tacs.assembler method)": [[0, "TACS.Assembler.applyBCs"]], "applymatbcs() (tacs.assembler method)": [[0, "TACS.Assembler.applyMatBCs"]], "assemblejacobian() (tacs.assembler method)": [[0, "TACS.Assembler.assembleJacobian"]], "assemblematcombo() (tacs.assembler method)": [[0, "TACS.Assembler.assembleMatCombo"]], "assemblemattype() (tacs.assembler method)": [[0, "TACS.Assembler.assembleMatType"]], "assembleres() (tacs.assembler method)": [[0, "TACS.Assembler.assembleRes"]], "checkgradients() (tacs.integrator method)": [[0, "TACS.Integrator.checkGradients"]], "computereordering() (tacs.assembler method)": [[0, "TACS.Assembler.computeReordering"]], "copyvariables() (tacs.assembler method)": [[0, "TACS.Assembler.copyVariables"]], "create() (tacs.assembler static method)": [[0, "TACS.Assembler.create"]], "createdesignvec() (tacs.assembler method)": [[0, "TACS.Assembler.createDesignVec"]], "createmat() (tacs.assembler method)": [[0, "TACS.Assembler.createMat"]], "createnodevec() (tacs.assembler method)": [[0, "TACS.Assembler.createNodeVec"]], "createschurmat() (tacs.assembler method)": [[0, "TACS.Assembler.createSchurMat"]], "createtacs() (tacs.meshloader method)": [[0, "TACS.MeshLoader.createTACS"]], "createvec() (tacs.assembler method)": [[0, "TACS.Assembler.createVec"]], "evalenergies() (tacs.assembler method)": [[0, "TACS.Assembler.evalEnergies"]], "evalfunctions() (tacs.assembler method)": [[0, "TACS.Assembler.evalFunctions"]], "evalfunctions() (tacs.integrator method)": [[0, "TACS.Integrator.evalFunctions"]], "getadjoint() (tacs.integrator method)": [[0, "TACS.Integrator.getAdjoint"]], "getbcs() (tacs.meshloader method)": [[0, "TACS.MeshLoader.getBCs"]], "getbcmap() (tacs.assembler method)": [[0, "TACS.Assembler.getBcMap"]], "getcomponentdescript() (tacs.meshloader method)": [[0, "TACS.MeshLoader.getComponentDescript"]], "getconnectivity() (tacs.meshloader method)": [[0, "TACS.MeshLoader.getConnectivity"]], "getdesignvarrange() (tacs.assembler method)": [[0, "TACS.Assembler.getDesignVarRange"]], "getdesignvars() (tacs.assembler method)": [[0, "TACS.Assembler.getDesignVars"]], "getelementdata() (tacs.assembler method)": [[0, "TACS.Assembler.getElementData"]], "getelementdescript() (tacs.meshloader method)": [[0, "TACS.MeshLoader.getElementDescript"]], "getelementnodes() (tacs.assembler method)": [[0, "TACS.Assembler.getElementNodes"]], "getelementpartition() (tacs.creator method)": [[0, "TACS.Creator.getElementPartition"]], "getelements() (tacs.assembler method)": [[0, "TACS.Assembler.getElements"]], "getgradient() (tacs.integrator method)": [[0, "TACS.Integrator.getGradient"]], "getinitconditions() (tacs.assembler method)": [[0, "TACS.Assembler.getInitConditions"]], "getmpicomm() (tacs.assembler method)": [[0, "TACS.Assembler.getMPIComm"]], "getnodes() (tacs.assembler method)": [[0, "TACS.Assembler.getNodes"]], "getnumcomponents() (tacs.meshloader method)": [[0, "TACS.MeshLoader.getNumComponents"]], "getnumdependentnodes() (tacs.assembler method)": [[0, "TACS.Assembler.getNumDependentNodes"]], "getnumelements() (tacs.assembler method)": [[0, "TACS.Assembler.getNumElements"]], "getnumnodes() (tacs.assembler method)": [[0, "TACS.Assembler.getNumNodes"]], "getnumownednodes() (tacs.assembler method)": [[0, "TACS.Assembler.getNumOwnedNodes"]], "getnumtimesteps() (tacs.integrator method)": [[0, "TACS.Integrator.getNumTimeSteps"]], "getownerrange() (tacs.assembler method)": [[0, "TACS.Assembler.getOwnerRange"]], "getreordering() (tacs.assembler method)": [[0, "TACS.Assembler.getReordering"]], "getsimulationtime() (tacs.assembler method)": [[0, "TACS.Assembler.getSimulationTime"]], "getstates() (tacs.integrator method)": [[0, "TACS.Integrator.getStates"]], "getvariables() (tacs.assembler method)": [[0, "TACS.Assembler.getVariables"]], "getvarspernode() (tacs.assembler method)": [[0, "TACS.Assembler.getVarsPerNode"]], "getxptgradient() (tacs.integrator method)": [[0, "TACS.Integrator.getXptGradient"]], "initadjoint() (tacs.integrator method)": [[0, "TACS.Integrator.initAdjoint"]], "initialize() (tacs.assembler method)": [[0, "TACS.Assembler.initialize"]], "integrate() (tacs.integrator method)": [[0, "TACS.Integrator.integrate"]], "integrateadjoint() (tacs.integrator method)": [[0, "TACS.Integrator.integrateAdjoint"]], "iterate() (tacs.integrator method)": [[0, "TACS.Integrator.iterate"]], "iterateadjoint() (tacs.integrator method)": [[0, "TACS.Integrator.iterateAdjoint"]], "loadstates() (tacs.integrator method)": [[0, "TACS.Integrator.loadStates"]], "persiststates() (tacs.integrator method)": [[0, "TACS.Integrator.persistStates"]], "postadjoint() (tacs.integrator method)": [[0, "TACS.Integrator.postAdjoint"]], "reordervec() (tacs.assembler method)": [[0, "TACS.Assembler.reorderVec"]], "scanbdffile() (tacs.meshloader method)": [[0, "TACS.MeshLoader.scanBDFFile"]], "setabstol() (tacs.integrator method)": [[0, "TACS.Integrator.setAbsTol"]], "setauxelements() (tacs.assembler method)": [[0, "TACS.Assembler.setAuxElements"]], "setbcvaluesfromvec() (tacs.assembler method)": [[0, "TACS.Assembler.setBCValuesFromVec"]], "setbcs() (tacs.assembler method)": [[0, "TACS.Assembler.setBCs"]], "setboundaryconditions() (tacs.creator method)": [[0, "TACS.Creator.setBoundaryConditions"]], "setdependentnodes() (tacs.assembler method)": [[0, "TACS.Assembler.setDependentNodes"]], "setdesignvars() (tacs.assembler method)": [[0, "TACS.Assembler.setDesignVars"]], "setelement() (tacs.meshloader method)": [[0, "TACS.MeshLoader.setElement"]], "setelementconnectivity() (tacs.assembler method)": [[0, "TACS.Assembler.setElementConnectivity"]], "setelements() (tacs.assembler method)": [[0, "TACS.Assembler.setElements"]], "setelements() (tacs.creator method)": [[0, "TACS.Creator.setElements"]], "setfh5() (tacs.integrator method)": [[0, "TACS.Integrator.setFH5"]], "setfunctions() (tacs.integrator method)": [[0, "TACS.Integrator.setFunctions"]], "setglobalconnectivity() (tacs.creator method)": [[0, "TACS.Creator.setGlobalConnectivity"]], "setinitconditions() (tacs.assembler method)": [[0, "TACS.Assembler.setInitConditions"]], "setinitnewtondeltafraction() (tacs.integrator method)": [[0, "TACS.Integrator.setInitNewtonDeltaFraction"]], "setjacassemblyfreq() (tacs.integrator method)": [[0, "TACS.Integrator.setJacAssemblyFreq"]], "setkrylovsubspacemethod() (tacs.integrator method)": [[0, "TACS.Integrator.setKrylovSubspaceMethod"]], "setmaxnewtoniters() (tacs.integrator method)": [[0, "TACS.Integrator.setMaxNewtonIters"]], "setnodes() (tacs.assembler method)": [[0, "TACS.Assembler.setNodes"]], "setnumthreads() (tacs.assembler method)": [[0, "TACS.Assembler.setNumThreads"]], "setoutputfrequency() (tacs.integrator method)": [[0, "TACS.Integrator.setOutputFrequency"]], "setoutputprefix() (tacs.integrator method)": [[0, "TACS.Integrator.setOutputPrefix"]], "setprintlevel() (tacs.integrator method)": [[0, "TACS.Integrator.setPrintLevel"]], "setreltol() (tacs.integrator method)": [[0, "TACS.Integrator.setRelTol"]], "setsimulationtime() (tacs.assembler method)": [[0, "TACS.Assembler.setSimulationTime"]], "settimeinterval() (tacs.integrator method)": [[0, "TACS.Integrator.setTimeInterval"]], "setuselapack() (tacs.integrator method)": [[0, "TACS.Integrator.setUseLapack"]], "setuseschurmat() (tacs.integrator method)": [[0, "TACS.Integrator.setUseSchurMat"]], "setvariables() (tacs.assembler method)": [[0, "TACS.Assembler.setVariables"]], "testelement() (tacs.assembler method)": [[0, "TACS.Assembler.testElement"]], "testfunction() (tacs.assembler method)": [[0, "TACS.Assembler.testFunction"]], "zeroddotvariables() (tacs.assembler method)": [[0, "TACS.Assembler.zeroDDotVariables"]], "zerodotvariables() (tacs.assembler method)": [[0, "TACS.Assembler.zeroDotVariables"]], "zerovariables() (tacs.assembler method)": [[0, "TACS.Assembler.zeroVariables"]], "basicbeamconstitutive (class in tacs.constitutive)": [[1, "tacs.constitutive.BasicBeamConstitutive"]], "bladestiffenedshellconstitutive (class in tacs.constitutive)": [[1, "tacs.constitutive.BladeStiffenedShellConstitutive"]], "compositeshellconstitutive (class in tacs.constitutive)": [[1, "tacs.constitutive.CompositeShellConstitutive"]], "dofspringconstitutive (class in tacs.constitutive)": [[1, "tacs.constitutive.DOFSpringConstitutive"]], "generalmassconstitutive (class in tacs.constitutive)": [[1, "tacs.constitutive.GeneralMassConstitutive"]], "generalspringconstitutive (class in tacs.constitutive)": [[1, "tacs.constitutive.GeneralSpringConstitutive"]], "isorectanglebeamconstitutive (class in tacs.constitutive)": [[1, "tacs.constitutive.IsoRectangleBeamConstitutive"]], "isoshellconstitutive (class in tacs.constitutive)": [[1, "tacs.constitutive.IsoShellConstitutive"]], "isotubebeamconstitutive (class in tacs.constitutive)": [[1, "tacs.constitutive.IsoTubeBeamConstitutive"]], "lamparamshellconstitutive (class in tacs.constitutive)": [[1, "tacs.constitutive.LamParamShellConstitutive"]], "materialproperties (class in tacs.constitutive)": [[1, "tacs.constitutive.MaterialProperties"]], "orthotropicply (class in tacs.constitutive)": [[1, "tacs.constitutive.OrthotropicPly"]], "phasechangematerialconstitutive (class in tacs.constitutive)": [[1, "tacs.constitutive.PhaseChangeMaterialConstitutive"]], "planestressconstitutive (class in tacs.constitutive)": [[1, "tacs.constitutive.PlaneStressConstitutive"]], "pointmassconstitutive (class in tacs.constitutive)": [[1, "tacs.constitutive.PointMassConstitutive"]], "shellconstitutive (class in tacs.constitutive)": [[1, "tacs.constitutive.ShellConstitutive"]], "smearedcompositeshellconstitutive (class in tacs.constitutive)": [[1, "tacs.constitutive.SmearedCompositeShellConstitutive"]], "solidconstitutive (class in tacs.constitutive)": [[1, "tacs.constitutive.SolidConstitutive"]], "evalmassmatrix() (tacs.constitutive.generalmassconstitutive method)": [[1, "tacs.constitutive.GeneralMassConstitutive.evalMassMatrix"]], "generatebdfcard() (tacs.constitutive.basicbeamconstitutive method)": [[1, "tacs.constitutive.BasicBeamConstitutive.generateBDFCard"]], "generatebdfcard() (tacs.constitutive.compositeshellconstitutive method)": [[1, "tacs.constitutive.CompositeShellConstitutive.generateBDFCard"]], "generatebdfcard() (tacs.constitutive.dofspringconstitutive method)": [[1, "tacs.constitutive.DOFSpringConstitutive.generateBDFCard"]], "generatebdfcard() (tacs.constitutive.isorectanglebeamconstitutive method)": [[1, "tacs.constitutive.IsoRectangleBeamConstitutive.generateBDFCard"]], "generatebdfcard() (tacs.constitutive.isoshellconstitutive method)": [[1, "tacs.constitutive.IsoShellConstitutive.generateBDFCard"]], "generatebdfcard() (tacs.constitutive.isotubebeamconstitutive method)": [[1, "tacs.constitutive.IsoTubeBeamConstitutive.generateBDFCard"]], "generatebdfcard() (tacs.constitutive.materialproperties method)": [[1, "tacs.constitutive.MaterialProperties.generateBDFCard"]], "generatebdfcard() (tacs.constitutive.smearedcompositeshellconstitutive method)": [[1, "tacs.constitutive.SmearedCompositeShellConstitutive.generateBDFCard"]], "generatebdfcard() (tacs.constitutive.solidconstitutive method)": [[1, "tacs.constitutive.SolidConstitutive.generateBDFCard"]], "getmaterialproperties() (tacs.constitutive.materialproperties method)": [[1, "tacs.constitutive.MaterialProperties.getMaterialProperties"]], "getmaterialproperties() (tacs.constitutive.orthotropicply method)": [[1, "tacs.constitutive.OrthotropicPly.getMaterialProperties"]], "getnastranid() (tacs.constitutive.materialproperties method)": [[1, "tacs.constitutive.MaterialProperties.getNastranID"]], "module": [[1, "module-0"], [1, "module-tacs.constitutive"], [3, "module-0"], [3, "module-1"], [3, "module-2"], [3, "module-tacs.elements"], [4, "module-tacs.functions"], [11, "module-tacs.constraints.adjacency"], [12, "module-tacs.problems.buckling"], [14, "module-tacs.constraints.dv"], [15, "module-tacs.problems.modal"], [16, "module-tacs.constraints.panel_length"], [19, "module-tacs.pytacs"], [20, "module-tacs.problems.static"], [21, "module-tacs.problems.transient"], [22, "module-tacs.constraints.volume"]], "setdensity() (tacs.constitutive.materialproperties method)": [[1, "tacs.constitutive.MaterialProperties.setDensity"]], "setdrillingregularization() (tacs.constitutive.shellconstitutive method)": [[1, "tacs.constitutive.ShellConstitutive.setDrillingRegularization"]], "setksweight() (tacs.constitutive.bladestiffenedshellconstitutive method)": [[1, "tacs.constitutive.BladeStiffenedShellConstitutive.setKSWeight"]], "setnastranid() (tacs.constitutive.materialproperties method)": [[1, "tacs.constitutive.MaterialProperties.setNastranID"]], "setpanelplyfractionbounds() (tacs.constitutive.bladestiffenedshellconstitutive method)": [[1, "tacs.constitutive.BladeStiffenedShellConstitutive.setPanelPlyFractionBounds"]], "setpanelthicknessbounds() (tacs.constitutive.bladestiffenedshellconstitutive method)": [[1, "tacs.constitutive.BladeStiffenedShellConstitutive.setPanelThicknessBounds"]], "setspecificheat() (tacs.constitutive.materialproperties method)": [[1, "tacs.constitutive.MaterialProperties.setSpecificHeat"]], "setstiffenerheightbounds() (tacs.constitutive.bladestiffenedshellconstitutive method)": [[1, "tacs.constitutive.BladeStiffenedShellConstitutive.setStiffenerHeightBounds"]], "setstiffenerpitchbounds() (tacs.constitutive.bladestiffenedshellconstitutive method)": [[1, "tacs.constitutive.BladeStiffenedShellConstitutive.setStiffenerPitchBounds"]], "setstiffenerplyfractionbounds() (tacs.constitutive.bladestiffenedshellconstitutive method)": [[1, "tacs.constitutive.BladeStiffenedShellConstitutive.setStiffenerPlyFractionBounds"]], "setstiffenerthicknessbounds() (tacs.constitutive.bladestiffenedshellconstitutive method)": [[1, "tacs.constitutive.BladeStiffenedShellConstitutive.setStiffenerThicknessBounds"]], "tacs.constitutive": [[1, "module-0"], [1, "module-tacs.constitutive"]], "beam2 (class in tacs.elements)": [[3, "tacs.elements.Beam2"]], "beam2modrot (class in tacs.elements)": [[3, "tacs.elements.Beam2ModRot"]], "beam3 (class in tacs.elements)": [[3, "tacs.elements.Beam3"]], "beam3modrot (class in tacs.elements)": [[3, "tacs.elements.Beam3ModRot"]], "beamrefaxistransform (class in tacs.elements)": [[3, "tacs.elements.BeamRefAxisTransform"]], "cubichexabasis (class in tacs.elements)": [[3, "tacs.elements.CubicHexaBasis"]], "cubicquadbasis (class in tacs.elements)": [[3, "tacs.elements.CubicQuadBasis"]], "cubictetrahedralbasis (class in tacs.elements)": [[3, "tacs.elements.CubicTetrahedralBasis"]], "cubictrianglebasis (class in tacs.elements)": [[3, "tacs.elements.CubicTriangleBasis"]], "element2d (class in tacs.elements)": [[3, "tacs.elements.Element2D"]], "element3d (class in tacs.elements)": [[3, "tacs.elements.Element3D"]], "heatconduction2d (class in tacs.elements)": [[3, "tacs.elements.HeatConduction2D"]], "heatconduction3d (class in tacs.elements)": [[3, "tacs.elements.HeatConduction3D"]], "linearelasticity2d (class in tacs.elements)": [[3, "tacs.elements.LinearElasticity2D"]], "linearelasticity3d (class in tacs.elements)": [[3, "tacs.elements.LinearElasticity3D"]], "linearhexabasis (class in tacs.elements)": [[3, "tacs.elements.LinearHexaBasis"]], "linearquadbasis (class in tacs.elements)": [[3, "tacs.elements.LinearQuadBasis"]], "lineartetrahedralbasis (class in tacs.elements)": [[3, "tacs.elements.LinearTetrahedralBasis"]], "linearthermoelasticity2d (class in tacs.elements)": [[3, "tacs.elements.LinearThermoelasticity2D"]], "linearthermoelasticity3d (class in tacs.elements)": [[3, "tacs.elements.LinearThermoelasticity3D"]], "lineartrianglebasis (class in tacs.elements)": [[3, "tacs.elements.LinearTriangleBasis"]], "masselement (class in tacs.elements)": [[3, "tacs.elements.MassElement"]], "pcmheatconduction2d (class in tacs.elements)": [[3, "tacs.elements.PCMHeatConduction2D"]], "quad16nonlinearshell (class in tacs.elements)": [[3, "tacs.elements.Quad16NonlinearShell"]], "quad16nonlinearthermalshell (class in tacs.elements)": [[3, "tacs.elements.Quad16NonlinearThermalShell"]], "quad16shell (class in tacs.elements)": [[3, "tacs.elements.Quad16Shell"]], "quad16thermalshell (class in tacs.elements)": [[3, "tacs.elements.Quad16ThermalShell"]], "quad4nonlinearshell (class in tacs.elements)": [[3, "tacs.elements.Quad4NonlinearShell"]], "quad4nonlinearthermalshell (class in tacs.elements)": [[3, "tacs.elements.Quad4NonlinearThermalShell"]], "quad4shell (class in tacs.elements)": [[3, "tacs.elements.Quad4Shell"]], "quad4thermalshell (class in tacs.elements)": [[3, "tacs.elements.Quad4ThermalShell"]], "quad9nonlinearshell (class in tacs.elements)": [[3, "tacs.elements.Quad9NonlinearShell"]], "quad9nonlinearthermalshell (class in tacs.elements)": [[3, "tacs.elements.Quad9NonlinearThermalShell"]], "quad9shell (class in tacs.elements)": [[3, "tacs.elements.Quad9Shell"]], "quad9thermalshell (class in tacs.elements)": [[3, "tacs.elements.Quad9ThermalShell"]], "quadratichexabasis (class in tacs.elements)": [[3, "tacs.elements.QuadraticHexaBasis"]], "quadraticquadbasis (class in tacs.elements)": [[3, "tacs.elements.QuadraticQuadBasis"]], "quadratictetrahedralbasis (class in tacs.elements)": [[3, "tacs.elements.QuadraticTetrahedralBasis"]], "quadratictrianglebasis (class in tacs.elements)": [[3, "tacs.elements.QuadraticTriangleBasis"]], "quarticquadbasis (class in tacs.elements)": [[3, "tacs.elements.QuarticQuadBasis"]], "quinticquadbasis (class in tacs.elements)": [[3, "tacs.elements.QuinticQuadBasis"]], "rbe2 (class in tacs.elements)": [[3, "tacs.elements.RBE2"]], "rbe3 (class in tacs.elements)": [[3, "tacs.elements.RBE3"]], "shellnaturaltransform (class in tacs.elements)": [[3, "tacs.elements.ShellNaturalTransform"]], "shellrefaxistransform (class in tacs.elements)": [[3, "tacs.elements.ShellRefAxisTransform"]], "springelement (class in tacs.elements)": [[3, "tacs.elements.SpringElement"]], "springidentitytransform (class in tacs.elements)": [[3, "tacs.elements.SpringIdentityTransform"]], "springrefaxistransform (class in tacs.elements)": [[3, "tacs.elements.SpringRefAxisTransform"]], "springrefframetransform (class in tacs.elements)": [[3, "tacs.elements.SpringRefFrameTransform"]], "tri3nonlinearshell (class in tacs.elements)": [[3, "tacs.elements.Tri3NonlinearShell"]], "tri3nonlinearthermalshell (class in tacs.elements)": [[3, "tacs.elements.Tri3NonlinearThermalShell"]], "tri3shell (class in tacs.elements)": [[3, "tacs.elements.Tri3Shell"]], "tri3thermalshell (class in tacs.elements)": [[3, "tacs.elements.Tri3ThermalShell"]], "getrefaxes() (tacs.elements.springrefframetransform method)": [[3, "tacs.elements.SpringRefFrameTransform.getRefAxes"]], "getrefaxis() (tacs.elements.beamrefaxistransform method)": [[3, "tacs.elements.BeamRefAxisTransform.getRefAxis"]], "getrefaxis() (tacs.elements.shellrefaxistransform method)": [[3, "tacs.elements.ShellRefAxisTransform.getRefAxis"]], "getrefaxis() (tacs.elements.springrefaxistransform method)": [[3, "tacs.elements.SpringRefAxisTransform.getRefAxis"]], "setscalingparameters() (tacs.elements.rbe2 method)": [[3, "tacs.elements.RBE2.setScalingParameters"]], "setscalingparameters() (tacs.elements.rbe3 method)": [[3, "tacs.elements.RBE3.setScalingParameters"]], "tacs.elements": [[3, "module-0"], [3, "module-1"], [3, "module-2"], [3, "module-tacs.elements"]], "averagetemperature (class in tacs.functions)": [[4, "tacs.functions.AverageTemperature"]], "centerofmass (class in tacs.functions)": [[4, "tacs.functions.CenterOfMass"]], "compliance (class in tacs.functions)": [[4, "tacs.functions.Compliance"]], "enclosedvolume (class in tacs.functions)": [[4, "tacs.functions.EnclosedVolume"]], "ksdisplacement (class in tacs.functions)": [[4, "tacs.functions.KSDisplacement"]], "ksfailure (class in tacs.functions)": [[4, "tacs.functions.KSFailure"]], "kstemperature (class in tacs.functions)": [[4, "tacs.functions.KSTemperature"]], "momentofinertia (class in tacs.functions)": [[4, "tacs.functions.MomentOfInertia"]], "structuralmass (class in tacs.functions)": [[4, "tacs.functions.StructuralMass"]], "setcompliancetype() (tacs.functions.compliance method)": [[4, "tacs.functions.Compliance.setComplianceType"]], "tacs.functions": [[4, "module-tacs.functions"]], "adjacencyconstraint (class in tacs.constraints)": [[11, "tacs.constraints.AdjacencyConstraint"]], "addconstraint() (tacs.constraints.adjacencyconstraint method)": [[11, "tacs.constraints.AdjacencyConstraint.addConstraint"]], "dtype (tacs.constraints.adjacencyconstraint attribute)": [[11, "tacs.constraints.AdjacencyConstraint.dtype"]], "evalconstraints() (tacs.constraints.adjacencyconstraint method)": [[11, "tacs.constraints.AdjacencyConstraint.evalConstraints"]], "evalconstraintssens() (tacs.constraints.adjacencyconstraint method)": [[11, "tacs.constraints.AdjacencyConstraint.evalConstraintsSens"]], "getconstraintbounds() (tacs.constraints.adjacencyconstraint method)": [[11, "tacs.constraints.AdjacencyConstraint.getConstraintBounds"]], "getconstraintkeys() (tacs.constraints.adjacencyconstraint method)": [[11, "tacs.constraints.AdjacencyConstraint.getConstraintKeys"]], "getconstraintsizes() (tacs.constraints.adjacencyconstraint method)": [[11, "tacs.constraints.AdjacencyConstraint.getConstraintSizes"]], "getdesignvarrange() (tacs.constraints.adjacencyconstraint method)": [[11, "tacs.constraints.AdjacencyConstraint.getDesignVarRange"]], "getdesignvars() (tacs.constraints.adjacencyconstraint method)": [[11, "tacs.constraints.AdjacencyConstraint.getDesignVars"]], "getnodes() (tacs.constraints.adjacencyconstraint method)": [[11, "tacs.constraints.AdjacencyConstraint.getNodes"]], "getnumcoordinates() (tacs.constraints.adjacencyconstraint method)": [[11, "tacs.constraints.AdjacencyConstraint.getNumCoordinates"]], "getnumdesignvars() (tacs.constraints.adjacencyconstraint method)": [[11, "tacs.constraints.AdjacencyConstraint.getNumDesignVars"]], "getnumownednodes() (tacs.constraints.adjacencyconstraint method)": [[11, "tacs.constraints.AdjacencyConstraint.getNumOwnedNodes"]], "getnumvariables() (tacs.constraints.adjacencyconstraint method)": [[11, "tacs.constraints.AdjacencyConstraint.getNumVariables"]], "getoption() (tacs.constraints.adjacencyconstraint method)": [[11, "tacs.constraints.AdjacencyConstraint.getOption"]], "getvarspernode() (tacs.constraints.adjacencyconstraint method)": [[11, "tacs.constraints.AdjacencyConstraint.getVarsPerNode"]], "printdefaultoptions() (tacs.constraints.adjacencyconstraint class method)": [[11, "tacs.constraints.AdjacencyConstraint.printDefaultOptions"]], "printoptions() (tacs.constraints.adjacencyconstraint method)": [[11, "tacs.constraints.AdjacencyConstraint.printOptions"]], "setdesignvars() (tacs.constraints.adjacencyconstraint method)": [[11, "tacs.constraints.AdjacencyConstraint.setDesignVars"]], "setnodes() (tacs.constraints.adjacencyconstraint method)": [[11, "tacs.constraints.AdjacencyConstraint.setNodes"]], "setoption() (tacs.constraints.adjacencyconstraint method)": [[11, "tacs.constraints.AdjacencyConstraint.setOption"]], "setvarname() (tacs.constraints.adjacencyconstraint method)": [[11, "tacs.constraints.AdjacencyConstraint.setVarName"]], "tacs.constraints.adjacency": [[11, "module-tacs.constraints.adjacency"]], "writevisualization() (tacs.constraints.adjacencyconstraint method)": [[11, "tacs.constraints.AdjacencyConstraint.writeVisualization"]], "bucklingproblem (class in tacs.problems)": [[12, "tacs.problems.BucklingProblem"]], "addcentrifugalload() (tacs.problems.bucklingproblem method)": [[12, "tacs.problems.BucklingProblem.addCentrifugalLoad"]], "adddvsens() (tacs.problems.bucklingproblem method)": [[12, "tacs.problems.BucklingProblem.addDVSens"]], "addfunction() (tacs.problems.bucklingproblem method)": [[12, "tacs.problems.BucklingProblem.addFunction"]], "addinertialload() (tacs.problems.bucklingproblem method)": [[12, "tacs.problems.BucklingProblem.addInertialLoad"]], "addloadfrombdf() (tacs.problems.bucklingproblem method)": [[12, "tacs.problems.BucklingProblem.addLoadFromBDF"]], "addloadtocomponents() (tacs.problems.bucklingproblem method)": [[12, "tacs.problems.BucklingProblem.addLoadToComponents"]], "addloadtonodes() (tacs.problems.bucklingproblem method)": [[12, "tacs.problems.BucklingProblem.addLoadToNodes"]], "addloadtorhs() (tacs.problems.bucklingproblem method)": [[12, "tacs.problems.BucklingProblem.addLoadToRHS"]], "addpressuretocomponents() (tacs.problems.bucklingproblem method)": [[12, "tacs.problems.BucklingProblem.addPressureToComponents"]], "addpressuretoelements() (tacs.problems.bucklingproblem method)": [[12, "tacs.problems.BucklingProblem.addPressureToElements"]], "addtractiontocomponents() (tacs.problems.bucklingproblem method)": [[12, "tacs.problems.BucklingProblem.addTractionToComponents"]], "addtractiontoelements() (tacs.problems.bucklingproblem method)": [[12, "tacs.problems.BucklingProblem.addTractionToElements"]], "addxptsens() (tacs.problems.bucklingproblem method)": [[12, "tacs.problems.BucklingProblem.addXptSens"]], "dtype (tacs.problems.bucklingproblem attribute)": [[12, "tacs.problems.BucklingProblem.dtype"]], "evalfunctions() (tacs.problems.bucklingproblem method)": [[12, "tacs.problems.BucklingProblem.evalFunctions"]], "evalfunctionssens() (tacs.problems.bucklingproblem method)": [[12, "tacs.problems.BucklingProblem.evalFunctionsSens"]], "evalsvsens() (tacs.problems.bucklingproblem method)": [[12, "tacs.problems.BucklingProblem.evalSVSens"]], "getdesignvarrange() (tacs.problems.bucklingproblem method)": [[12, "tacs.problems.BucklingProblem.getDesignVarRange"]], "getdesignvars() (tacs.problems.bucklingproblem method)": [[12, "tacs.problems.BucklingProblem.getDesignVars"]], "getfunctionkeys() (tacs.problems.bucklingproblem method)": [[12, "tacs.problems.BucklingProblem.getFunctionKeys"]], "getnodes() (tacs.problems.bucklingproblem method)": [[12, "tacs.problems.BucklingProblem.getNodes"]], "getnumcoordinates() (tacs.problems.bucklingproblem method)": [[12, "tacs.problems.BucklingProblem.getNumCoordinates"]], "getnumdesignvars() (tacs.problems.bucklingproblem method)": [[12, "tacs.problems.BucklingProblem.getNumDesignVars"]], "getnumeigs() (tacs.problems.bucklingproblem method)": [[12, "tacs.problems.BucklingProblem.getNumEigs"]], "getnumownednodes() (tacs.problems.bucklingproblem method)": [[12, "tacs.problems.BucklingProblem.getNumOwnedNodes"]], "getnumvariables() (tacs.problems.bucklingproblem method)": [[12, "tacs.problems.BucklingProblem.getNumVariables"]], "getoption() (tacs.problems.bucklingproblem method)": [[12, "tacs.problems.BucklingProblem.getOption"]], "getvariables() (tacs.problems.bucklingproblem method)": [[12, "tacs.problems.BucklingProblem.getVariables"]], "getvarspernode() (tacs.problems.bucklingproblem method)": [[12, "tacs.problems.BucklingProblem.getVarsPerNode"]], "printdefaultoptions() (tacs.problems.bucklingproblem class method)": [[12, "tacs.problems.BucklingProblem.printDefaultOptions"]], "printoptions() (tacs.problems.bucklingproblem method)": [[12, "tacs.problems.BucklingProblem.printOptions"]], "setdesignvars() (tacs.problems.bucklingproblem method)": [[12, "tacs.problems.BucklingProblem.setDesignVars"]], "setnodes() (tacs.problems.bucklingproblem method)": [[12, "tacs.problems.BucklingProblem.setNodes"]], "setoption() (tacs.problems.bucklingproblem method)": [[12, "tacs.problems.BucklingProblem.setOption"]], "setvalname() (tacs.problems.bucklingproblem method)": [[12, "tacs.problems.BucklingProblem.setValName"]], "setvarname() (tacs.problems.bucklingproblem method)": [[12, "tacs.problems.BucklingProblem.setVarName"]], "solve() (tacs.problems.bucklingproblem method)": [[12, "tacs.problems.BucklingProblem.solve"]], "tacs.problems.buckling": [[12, "module-tacs.problems.buckling"]], "writesensfile() (tacs.problems.bucklingproblem method)": [[12, "tacs.problems.BucklingProblem.writeSensFile"]], "writesolution() (tacs.problems.bucklingproblem method)": [[12, "tacs.problems.BucklingProblem.writeSolution"]], "zeroloads() (tacs.problems.bucklingproblem method)": [[12, "tacs.problems.BucklingProblem.zeroLoads"]], "dvconstraint (class in tacs.constraints)": [[14, "tacs.constraints.DVConstraint"]], "addconstraint() (tacs.constraints.dvconstraint method)": [[14, "tacs.constraints.DVConstraint.addConstraint"]], "dtype (tacs.constraints.dvconstraint attribute)": [[14, "tacs.constraints.DVConstraint.dtype"]], "evalconstraints() (tacs.constraints.dvconstraint method)": [[14, "tacs.constraints.DVConstraint.evalConstraints"]], "evalconstraintssens() (tacs.constraints.dvconstraint method)": [[14, "tacs.constraints.DVConstraint.evalConstraintsSens"]], "getconstraintbounds() (tacs.constraints.dvconstraint method)": [[14, "tacs.constraints.DVConstraint.getConstraintBounds"]], "getconstraintkeys() (tacs.constraints.dvconstraint method)": [[14, "tacs.constraints.DVConstraint.getConstraintKeys"]], "getconstraintsizes() (tacs.constraints.dvconstraint method)": [[14, "tacs.constraints.DVConstraint.getConstraintSizes"]], "getdesignvarrange() (tacs.constraints.dvconstraint method)": [[14, "tacs.constraints.DVConstraint.getDesignVarRange"]], "getdesignvars() (tacs.constraints.dvconstraint method)": [[14, "tacs.constraints.DVConstraint.getDesignVars"]], "getnodes() (tacs.constraints.dvconstraint method)": [[14, "tacs.constraints.DVConstraint.getNodes"]], "getnumcoordinates() (tacs.constraints.dvconstraint method)": [[14, "tacs.constraints.DVConstraint.getNumCoordinates"]], "getnumdesignvars() (tacs.constraints.dvconstraint method)": [[14, "tacs.constraints.DVConstraint.getNumDesignVars"]], "getnumownednodes() (tacs.constraints.dvconstraint method)": [[14, "tacs.constraints.DVConstraint.getNumOwnedNodes"]], "getnumvariables() (tacs.constraints.dvconstraint method)": [[14, "tacs.constraints.DVConstraint.getNumVariables"]], "getoption() (tacs.constraints.dvconstraint method)": [[14, "tacs.constraints.DVConstraint.getOption"]], "getvarspernode() (tacs.constraints.dvconstraint method)": [[14, "tacs.constraints.DVConstraint.getVarsPerNode"]], "printdefaultoptions() (tacs.constraints.dvconstraint class method)": [[14, "tacs.constraints.DVConstraint.printDefaultOptions"]], "printoptions() (tacs.constraints.dvconstraint method)": [[14, "tacs.constraints.DVConstraint.printOptions"]], "setdesignvars() (tacs.constraints.dvconstraint method)": [[14, "tacs.constraints.DVConstraint.setDesignVars"]], "setnodes() (tacs.constraints.dvconstraint method)": [[14, "tacs.constraints.DVConstraint.setNodes"]], "setoption() (tacs.constraints.dvconstraint method)": [[14, "tacs.constraints.DVConstraint.setOption"]], "setvarname() (tacs.constraints.dvconstraint method)": [[14, "tacs.constraints.DVConstraint.setVarName"]], "tacs.constraints.dv": [[14, "module-tacs.constraints.dv"]], "modalproblem (class in tacs.problems)": [[15, "tacs.problems.ModalProblem"]], "addfunction() (tacs.problems.modalproblem method)": [[15, "tacs.problems.ModalProblem.addFunction"]], "dtype (tacs.problems.modalproblem attribute)": [[15, "tacs.problems.ModalProblem.dtype"]], "evalfunctions() (tacs.problems.modalproblem method)": [[15, "tacs.problems.ModalProblem.evalFunctions"]], "evalfunctionssens() (tacs.problems.modalproblem method)": [[15, "tacs.problems.ModalProblem.evalFunctionsSens"]], "getdesignvarrange() (tacs.problems.modalproblem method)": [[15, "tacs.problems.ModalProblem.getDesignVarRange"]], "getdesignvars() (tacs.problems.modalproblem method)": [[15, "tacs.problems.ModalProblem.getDesignVars"]], "getfunctionkeys() (tacs.problems.modalproblem method)": [[15, "tacs.problems.ModalProblem.getFunctionKeys"]], "getnodes() (tacs.problems.modalproblem method)": [[15, "tacs.problems.ModalProblem.getNodes"]], "getnumcoordinates() (tacs.problems.modalproblem method)": [[15, "tacs.problems.ModalProblem.getNumCoordinates"]], "getnumdesignvars() (tacs.problems.modalproblem method)": [[15, "tacs.problems.ModalProblem.getNumDesignVars"]], "getnumeigs() (tacs.problems.modalproblem method)": [[15, "tacs.problems.ModalProblem.getNumEigs"]], "getnumownednodes() (tacs.problems.modalproblem method)": [[15, "tacs.problems.ModalProblem.getNumOwnedNodes"]], "getnumvariables() (tacs.problems.modalproblem method)": [[15, "tacs.problems.ModalProblem.getNumVariables"]], "getoption() (tacs.problems.modalproblem method)": [[15, "tacs.problems.ModalProblem.getOption"]], "getvariables() (tacs.problems.modalproblem method)": [[15, "tacs.problems.ModalProblem.getVariables"]], "getvarspernode() (tacs.problems.modalproblem method)": [[15, "tacs.problems.ModalProblem.getVarsPerNode"]], "printdefaultoptions() (tacs.problems.modalproblem class method)": [[15, "tacs.problems.ModalProblem.printDefaultOptions"]], "printoptions() (tacs.problems.modalproblem method)": [[15, "tacs.problems.ModalProblem.printOptions"]], "setdesignvars() (tacs.problems.modalproblem method)": [[15, "tacs.problems.ModalProblem.setDesignVars"]], "setnodes() (tacs.problems.modalproblem method)": [[15, "tacs.problems.ModalProblem.setNodes"]], "setoption() (tacs.problems.modalproblem method)": [[15, "tacs.problems.ModalProblem.setOption"]], "setvalname() (tacs.problems.modalproblem method)": [[15, "tacs.problems.ModalProblem.setValName"]], "setvarname() (tacs.problems.modalproblem method)": [[15, "tacs.problems.ModalProblem.setVarName"]], "solve() (tacs.problems.modalproblem method)": [[15, "tacs.problems.ModalProblem.solve"]], "tacs.problems.modal": [[15, "module-tacs.problems.modal"]], "writesensfile() (tacs.problems.modalproblem method)": [[15, "tacs.problems.ModalProblem.writeSensFile"]], "writesolution() (tacs.problems.modalproblem method)": [[15, "tacs.problems.ModalProblem.writeSolution"]], "panellengthconstraint (class in tacs.constraints)": [[16, "tacs.constraints.PanelLengthConstraint"]], "addconstraint() (tacs.constraints.panellengthconstraint method)": [[16, "tacs.constraints.PanelLengthConstraint.addConstraint"]], "dtype (tacs.constraints.panellengthconstraint attribute)": [[16, "tacs.constraints.PanelLengthConstraint.dtype"]], "evalconstraints() (tacs.constraints.panellengthconstraint method)": [[16, "tacs.constraints.PanelLengthConstraint.evalConstraints"]], "evalconstraintssens() (tacs.constraints.panellengthconstraint method)": [[16, "tacs.constraints.PanelLengthConstraint.evalConstraintsSens"]], "getconstraintbounds() (tacs.constraints.panellengthconstraint method)": [[16, "tacs.constraints.PanelLengthConstraint.getConstraintBounds"]], "getconstraintkeys() (tacs.constraints.panellengthconstraint method)": [[16, "tacs.constraints.PanelLengthConstraint.getConstraintKeys"]], "getconstraintsizes() (tacs.constraints.panellengthconstraint method)": [[16, "tacs.constraints.PanelLengthConstraint.getConstraintSizes"]], "getdesignvarrange() (tacs.constraints.panellengthconstraint method)": [[16, "tacs.constraints.PanelLengthConstraint.getDesignVarRange"]], "getdesignvars() (tacs.constraints.panellengthconstraint method)": [[16, "tacs.constraints.PanelLengthConstraint.getDesignVars"]], "getnodes() (tacs.constraints.panellengthconstraint method)": [[16, "tacs.constraints.PanelLengthConstraint.getNodes"]], "getnumcoordinates() (tacs.constraints.panellengthconstraint method)": [[16, "tacs.constraints.PanelLengthConstraint.getNumCoordinates"]], "getnumdesignvars() (tacs.constraints.panellengthconstraint method)": [[16, "tacs.constraints.PanelLengthConstraint.getNumDesignVars"]], "getnumownednodes() (tacs.constraints.panellengthconstraint method)": [[16, "tacs.constraints.PanelLengthConstraint.getNumOwnedNodes"]], "getnumvariables() (tacs.constraints.panellengthconstraint method)": [[16, "tacs.constraints.PanelLengthConstraint.getNumVariables"]], "getoption() (tacs.constraints.panellengthconstraint method)": [[16, "tacs.constraints.PanelLengthConstraint.getOption"]], "getvarspernode() (tacs.constraints.panellengthconstraint method)": [[16, "tacs.constraints.PanelLengthConstraint.getVarsPerNode"]], "printdefaultoptions() (tacs.constraints.panellengthconstraint class method)": [[16, "tacs.constraints.PanelLengthConstraint.printDefaultOptions"]], "printoptions() (tacs.constraints.panellengthconstraint method)": [[16, "tacs.constraints.PanelLengthConstraint.printOptions"]], "setdesignvars() (tacs.constraints.panellengthconstraint method)": [[16, "tacs.constraints.PanelLengthConstraint.setDesignVars"]], "setnodes() (tacs.constraints.panellengthconstraint method)": [[16, "tacs.constraints.PanelLengthConstraint.setNodes"]], "setoption() (tacs.constraints.panellengthconstraint method)": [[16, "tacs.constraints.PanelLengthConstraint.setOption"]], "setvarname() (tacs.constraints.panellengthconstraint method)": [[16, "tacs.constraints.PanelLengthConstraint.setVarName"]], "tacs.constraints.panel_length": [[16, "module-tacs.constraints.panel_length"]], "addglobaldv() (tacs.pytacs.pytacs method)": [[19, "tacs.pytacs.pyTACS.addGlobalDV"]], "applybcstovec() (tacs.pytacs.pytacs method)": [[19, "tacs.pytacs.pyTACS.applyBCsToVec"]], "assignmassdv() (tacs.pytacs.pytacs method)": [[19, "tacs.pytacs.pyTACS.assignMassDV"]], "createadjacencyconstraint() (tacs.pytacs.pytacs method)": [[19, "tacs.pytacs.pyTACS.createAdjacencyConstraint"]], "createbucklingproblem() (tacs.pytacs.pytacs method)": [[19, "tacs.pytacs.pyTACS.createBucklingProblem"]], "createdvconstraint() (tacs.pytacs.pytacs method)": [[19, "tacs.pytacs.pyTACS.createDVConstraint"]], "createdesignvec() (tacs.pytacs.pytacs method)": [[19, "tacs.pytacs.pyTACS.createDesignVec"]], "createmodalproblem() (tacs.pytacs.pytacs method)": [[19, "tacs.pytacs.pyTACS.createModalProblem"]], "createnodevec() (tacs.pytacs.pytacs method)": [[19, "tacs.pytacs.pyTACS.createNodeVec"]], "createpanellengthconstraint() (tacs.pytacs.pytacs method)": [[19, "tacs.pytacs.pyTACS.createPanelLengthConstraint"]], "createstaticproblem() (tacs.pytacs.pytacs method)": [[19, "tacs.pytacs.pyTACS.createStaticProblem"]], "createtacsprobsfrombdf() (tacs.pytacs.pytacs method)": [[19, "tacs.pytacs.pyTACS.createTACSProbsFromBDF"]], "createtransientproblem() (tacs.pytacs.pytacs method)": [[19, "tacs.pytacs.pyTACS.createTransientProblem"]], "createvec() (tacs.pytacs.pytacs method)": [[19, "tacs.pytacs.pyTACS.createVec"]], "createvolumeconstraint() (tacs.pytacs.pytacs method)": [[19, "tacs.pytacs.pyTACS.createVolumeConstraint"]], "dtype (tacs.pytacs.pytacs attribute)": [[19, "tacs.pytacs.pyTACS.dtype"]], "elemcallback() (in module tacs.pytacs)": [[19, "tacs.pytacs.elemCallBack"]], "getbdfinfo() (tacs.pytacs.pytacs method)": [[19, "tacs.pytacs.pyTACS.getBDFInfo"]], "getcompnames() (tacs.pytacs.pytacs method)": [[19, "tacs.pytacs.pyTACS.getCompNames"]], "getdesignvarrange() (tacs.pytacs.pytacs method)": [[19, "tacs.pytacs.pyTACS.getDesignVarRange"]], "getglobaldvkeys() (tacs.pytacs.pytacs method)": [[19, "tacs.pytacs.pyTACS.getGlobalDVKeys"]], "getglobaldvnums() (tacs.pytacs.pytacs method)": [[19, "tacs.pytacs.pyTACS.getGlobalDVNums"]], "getglobaldvs() (tacs.pytacs.pytacs method)": [[19, "tacs.pytacs.pyTACS.getGlobalDVs"]], "getglobalnodeidsforcomps() (tacs.pytacs.pytacs method)": [[19, "tacs.pytacs.pyTACS.getGlobalNodeIDsForComps"]], "getlocalmultipliernodeids() (tacs.pytacs.pytacs method)": [[19, "tacs.pytacs.pyTACS.getLocalMultiplierNodeIDs"]], "getlocalnodeidsforcomps() (tacs.pytacs.pytacs method)": [[19, "tacs.pytacs.pyTACS.getLocalNodeIDsForComps"]], "getnumcomponents() (tacs.pytacs.pytacs method)": [[19, "tacs.pytacs.pyTACS.getNumComponents"]], "getnumdesignvars() (tacs.pytacs.pytacs method)": [[19, "tacs.pytacs.pyTACS.getNumDesignVars"]], "getnumownedmultipliernodes() (tacs.pytacs.pytacs method)": [[19, "tacs.pytacs.pyTACS.getNumOwnedMultiplierNodes"]], "getnumownednodes() (tacs.pytacs.pytacs method)": [[19, "tacs.pytacs.pyTACS.getNumOwnedNodes"]], "getoption() (tacs.pytacs.pytacs method)": [[19, "tacs.pytacs.pyTACS.getOption"]], "getorigdesignvars() (tacs.pytacs.pytacs method)": [[19, "tacs.pytacs.pyTACS.getOrigDesignVars"]], "getorignodes() (tacs.pytacs.pytacs method)": [[19, "tacs.pytacs.pyTACS.getOrigNodes"]], "gettotalnumdesignvars() (tacs.pytacs.pytacs method)": [[19, "tacs.pytacs.pyTACS.getTotalNumDesignVars"]], "gettotalnumglobaldvs() (tacs.pytacs.pytacs method)": [[19, "tacs.pytacs.pyTACS.getTotalNumGlobalDVs"]], "getvarspernode() (tacs.pytacs.pytacs method)": [[19, "tacs.pytacs.pyTACS.getVarsPerNode"]], "initialize() (tacs.pytacs.pytacs method)": [[19, "tacs.pytacs.pyTACS.initialize"]], "printdefaultoptions() (tacs.pytacs.pytacs class method)": [[19, "tacs.pytacs.pyTACS.printDefaultOptions"]], "printoptions() (tacs.pytacs.pytacs method)": [[19, "tacs.pytacs.pyTACS.printOptions"]], "pytacs (class in tacs.pytacs)": [[19, "tacs.pytacs.pyTACS"]], "selectcompids() (tacs.pytacs.pytacs method)": [[19, "tacs.pytacs.pyTACS.selectCompIDs"]], "setoption() (tacs.pytacs.pytacs method)": [[19, "tacs.pytacs.pyTACS.setOption"]], "tacs.pytacs": [[19, "module-tacs.pytacs"]], "writebdf() (tacs.pytacs.pytacs method)": [[19, "tacs.pytacs.pyTACS.writeBDF"]], "staticproblem (class in tacs.problems)": [[20, "tacs.problems.StaticProblem"]], "addadjointresproducts() (tacs.problems.staticproblem method)": [[20, "tacs.problems.StaticProblem.addAdjointResProducts"]], "addadjointresxptsensproducts() (tacs.problems.staticproblem method)": [[20, "tacs.problems.StaticProblem.addAdjointResXptSensProducts"]], "addcentrifugalload() (tacs.problems.staticproblem method)": [[20, "tacs.problems.StaticProblem.addCentrifugalLoad"]], "adddvsens() (tacs.problems.staticproblem method)": [[20, "tacs.problems.StaticProblem.addDVSens"]], "addfunction() (tacs.problems.staticproblem method)": [[20, "tacs.problems.StaticProblem.addFunction"]], "addinertialload() (tacs.problems.staticproblem method)": [[20, "tacs.problems.StaticProblem.addInertialLoad"]], "addloadfrombdf() (tacs.problems.staticproblem method)": [[20, "tacs.problems.StaticProblem.addLoadFromBDF"]], "addloadtocomponents() (tacs.problems.staticproblem method)": [[20, "tacs.problems.StaticProblem.addLoadToComponents"]], "addloadtonodes() (tacs.problems.staticproblem method)": [[20, "tacs.problems.StaticProblem.addLoadToNodes"]], "addloadtorhs() (tacs.problems.staticproblem method)": [[20, "tacs.problems.StaticProblem.addLoadToRHS"]], "addpressuretocomponents() (tacs.problems.staticproblem method)": [[20, "tacs.problems.StaticProblem.addPressureToComponents"]], "addpressuretoelements() (tacs.problems.staticproblem method)": [[20, "tacs.problems.StaticProblem.addPressureToElements"]], "addsvsens() (tacs.problems.staticproblem method)": [[20, "tacs.problems.StaticProblem.addSVSens"]], "addtractiontocomponents() (tacs.problems.staticproblem method)": [[20, "tacs.problems.StaticProblem.addTractionToComponents"]], "addtractiontoelements() (tacs.problems.staticproblem method)": [[20, "tacs.problems.StaticProblem.addTractionToElements"]], "addtransposejacvecproduct() (tacs.problems.staticproblem method)": [[20, "tacs.problems.StaticProblem.addTransposeJacVecProduct"]], "addxptsens() (tacs.problems.staticproblem method)": [[20, "tacs.problems.StaticProblem.addXptSens"]], "dtype (tacs.problems.staticproblem attribute)": [[20, "tacs.problems.StaticProblem.dtype"]], "evalfunctions() (tacs.problems.staticproblem method)": [[20, "tacs.problems.StaticProblem.evalFunctions"]], "evalfunctionssens() (tacs.problems.staticproblem method)": [[20, "tacs.problems.StaticProblem.evalFunctionsSens"]], "getdesignvarrange() (tacs.problems.staticproblem method)": [[20, "tacs.problems.StaticProblem.getDesignVarRange"]], "getdesignvars() (tacs.problems.staticproblem method)": [[20, "tacs.problems.StaticProblem.getDesignVars"]], "getfunctionkeys() (tacs.problems.staticproblem method)": [[20, "tacs.problems.StaticProblem.getFunctionKeys"]], "getjacobian() (tacs.problems.staticproblem method)": [[20, "tacs.problems.StaticProblem.getJacobian"]], "getnodes() (tacs.problems.staticproblem method)": [[20, "tacs.problems.StaticProblem.getNodes"]], "getnumcoordinates() (tacs.problems.staticproblem method)": [[20, "tacs.problems.StaticProblem.getNumCoordinates"]], "getnumdesignvars() (tacs.problems.staticproblem method)": [[20, "tacs.problems.StaticProblem.getNumDesignVars"]], "getnumownednodes() (tacs.problems.staticproblem method)": [[20, "tacs.problems.StaticProblem.getNumOwnedNodes"]], "getnumvariables() (tacs.problems.staticproblem method)": [[20, "tacs.problems.StaticProblem.getNumVariables"]], "getoption() (tacs.problems.staticproblem method)": [[20, "tacs.problems.StaticProblem.getOption"]], "getresidual() (tacs.problems.staticproblem method)": [[20, "tacs.problems.StaticProblem.getResidual"]], "getvariables() (tacs.problems.staticproblem method)": [[20, "tacs.problems.StaticProblem.getVariables"]], "getvarspernode() (tacs.problems.staticproblem method)": [[20, "tacs.problems.StaticProblem.getVarsPerNode"]], "loadscale (tacs.problems.staticproblem property)": [[20, "tacs.problems.StaticProblem.loadScale"]], "printdefaultoptions() (tacs.problems.staticproblem class method)": [[20, "tacs.problems.StaticProblem.printDefaultOptions"]], "printoptions() (tacs.problems.staticproblem method)": [[20, "tacs.problems.StaticProblem.printOptions"]], "setdesignvars() (tacs.problems.staticproblem method)": [[20, "tacs.problems.StaticProblem.setDesignVars"]], "setloadscale() (tacs.problems.staticproblem method)": [[20, "tacs.problems.StaticProblem.setLoadScale"]], "setnodes() (tacs.problems.staticproblem method)": [[20, "tacs.problems.StaticProblem.setNodes"]], "setoption() (tacs.problems.staticproblem method)": [[20, "tacs.problems.StaticProblem.setOption"]], "setvarname() (tacs.problems.staticproblem method)": [[20, "tacs.problems.StaticProblem.setVarName"]], "setvariables() (tacs.problems.staticproblem method)": [[20, "tacs.problems.StaticProblem.setVariables"]], "solve() (tacs.problems.staticproblem method)": [[20, "tacs.problems.StaticProblem.solve"]], "solveadjoint() (tacs.problems.staticproblem method)": [[20, "tacs.problems.StaticProblem.solveAdjoint"]], "tacs.problems.static": [[20, "module-tacs.problems.static"]], "writeloadtobdf() (tacs.problems.staticproblem method)": [[20, "tacs.problems.StaticProblem.writeLoadToBDF"]], "writesensfile() (tacs.problems.staticproblem method)": [[20, "tacs.problems.StaticProblem.writeSensFile"]], "writesolution() (tacs.problems.staticproblem method)": [[20, "tacs.problems.StaticProblem.writeSolution"]], "zeroloads() (tacs.problems.staticproblem method)": [[20, "tacs.problems.StaticProblem.zeroLoads"]], "zerovariables() (tacs.problems.staticproblem method)": [[20, "tacs.problems.StaticProblem.zeroVariables"]], "transientproblem (class in tacs.problems)": [[21, "tacs.problems.TransientProblem"]], "addcentrifugalload() (tacs.problems.transientproblem method)": [[21, "tacs.problems.TransientProblem.addCentrifugalLoad"]], "addfunction() (tacs.problems.transientproblem method)": [[21, "tacs.problems.TransientProblem.addFunction"]], "addinertialload() (tacs.problems.transientproblem method)": [[21, "tacs.problems.TransientProblem.addInertialLoad"]], "addloadfrombdf() (tacs.problems.transientproblem method)": [[21, "tacs.problems.TransientProblem.addLoadFromBDF"]], "addloadtocomponents() (tacs.problems.transientproblem method)": [[21, "tacs.problems.TransientProblem.addLoadToComponents"]], "addloadtonodes() (tacs.problems.transientproblem method)": [[21, "tacs.problems.TransientProblem.addLoadToNodes"]], "addloadtorhs() (tacs.problems.transientproblem method)": [[21, "tacs.problems.TransientProblem.addLoadToRHS"]], "addpressuretocomponents() (tacs.problems.transientproblem method)": [[21, "tacs.problems.TransientProblem.addPressureToComponents"]], "addpressuretoelements() (tacs.problems.transientproblem method)": [[21, "tacs.problems.TransientProblem.addPressureToElements"]], "addtractiontocomponents() (tacs.problems.transientproblem method)": [[21, "tacs.problems.TransientProblem.addTractionToComponents"]], "addtractiontoelements() (tacs.problems.transientproblem method)": [[21, "tacs.problems.TransientProblem.addTractionToElements"]], "dtype (tacs.problems.transientproblem attribute)": [[21, "tacs.problems.TransientProblem.dtype"]], "evalfunctions() (tacs.problems.transientproblem method)": [[21, "tacs.problems.TransientProblem.evalFunctions"]], "evalfunctionssens() (tacs.problems.transientproblem method)": [[21, "tacs.problems.TransientProblem.evalFunctionsSens"]], "getdesignvarrange() (tacs.problems.transientproblem method)": [[21, "tacs.problems.TransientProblem.getDesignVarRange"]], "getdesignvars() (tacs.problems.transientproblem method)": [[21, "tacs.problems.TransientProblem.getDesignVars"]], "getfunctionkeys() (tacs.problems.transientproblem method)": [[21, "tacs.problems.TransientProblem.getFunctionKeys"]], "getnodes() (tacs.problems.transientproblem method)": [[21, "tacs.problems.TransientProblem.getNodes"]], "getnumcoordinates() (tacs.problems.transientproblem method)": [[21, "tacs.problems.TransientProblem.getNumCoordinates"]], "getnumdesignvars() (tacs.problems.transientproblem method)": [[21, "tacs.problems.TransientProblem.getNumDesignVars"]], "getnumownednodes() (tacs.problems.transientproblem method)": [[21, "tacs.problems.TransientProblem.getNumOwnedNodes"]], "getnumtimestages() (tacs.problems.transientproblem method)": [[21, "tacs.problems.TransientProblem.getNumTimeStages"]], "getnumtimesteps() (tacs.problems.transientproblem method)": [[21, "tacs.problems.TransientProblem.getNumTimeSteps"]], "getnumvariables() (tacs.problems.transientproblem method)": [[21, "tacs.problems.TransientProblem.getNumVariables"]], "getoption() (tacs.problems.transientproblem method)": [[21, "tacs.problems.TransientProblem.getOption"]], "gettimestages() (tacs.problems.transientproblem method)": [[21, "tacs.problems.TransientProblem.getTimeStages"]], "gettimesteps() (tacs.problems.transientproblem method)": [[21, "tacs.problems.TransientProblem.getTimeSteps"]], "getvariables() (tacs.problems.transientproblem method)": [[21, "tacs.problems.TransientProblem.getVariables"]], "getvarspernode() (tacs.problems.transientproblem method)": [[21, "tacs.problems.TransientProblem.getVarsPerNode"]], "iterate() (tacs.problems.transientproblem method)": [[21, "tacs.problems.TransientProblem.iterate"]], "prepiterativesolve() (tacs.problems.transientproblem method)": [[21, "tacs.problems.TransientProblem.prepIterativeSolve"]], "printdefaultoptions() (tacs.problems.transientproblem class method)": [[21, "tacs.problems.TransientProblem.printDefaultOptions"]], "printoptions() (tacs.problems.transientproblem method)": [[21, "tacs.problems.TransientProblem.printOptions"]], "setdesignvars() (tacs.problems.transientproblem method)": [[21, "tacs.problems.TransientProblem.setDesignVars"]], "setinitconditions() (tacs.problems.transientproblem method)": [[21, "tacs.problems.TransientProblem.setInitConditions"]], "setnodes() (tacs.problems.transientproblem method)": [[21, "tacs.problems.TransientProblem.setNodes"]], "setoption() (tacs.problems.transientproblem method)": [[21, "tacs.problems.TransientProblem.setOption"]], "setvarname() (tacs.problems.transientproblem method)": [[21, "tacs.problems.TransientProblem.setVarName"]], "solve() (tacs.problems.transientproblem method)": [[21, "tacs.problems.TransientProblem.solve"]], "tacs.problems.transient": [[21, "module-tacs.problems.transient"]], "writesensfile() (tacs.problems.transientproblem method)": [[21, "tacs.problems.TransientProblem.writeSensFile"]], "writesolution() (tacs.problems.transientproblem method)": [[21, "tacs.problems.TransientProblem.writeSolution"]], "zeroloads() (tacs.problems.transientproblem method)": [[21, "tacs.problems.TransientProblem.zeroLoads"]], "volumeconstraint (class in tacs.constraints)": [[22, "tacs.constraints.VolumeConstraint"]], "addconstraint() (tacs.constraints.volumeconstraint method)": [[22, "tacs.constraints.VolumeConstraint.addConstraint"]], "dtype (tacs.constraints.volumeconstraint attribute)": [[22, "tacs.constraints.VolumeConstraint.dtype"]], "evalconstraints() (tacs.constraints.volumeconstraint method)": [[22, "tacs.constraints.VolumeConstraint.evalConstraints"]], "evalconstraintssens() (tacs.constraints.volumeconstraint method)": [[22, "tacs.constraints.VolumeConstraint.evalConstraintsSens"]], "getconstraintbounds() (tacs.constraints.volumeconstraint method)": [[22, "tacs.constraints.VolumeConstraint.getConstraintBounds"]], "getconstraintkeys() (tacs.constraints.volumeconstraint method)": [[22, "tacs.constraints.VolumeConstraint.getConstraintKeys"]], "getconstraintsizes() (tacs.constraints.volumeconstraint method)": [[22, "tacs.constraints.VolumeConstraint.getConstraintSizes"]], "getdesignvarrange() (tacs.constraints.volumeconstraint method)": [[22, "tacs.constraints.VolumeConstraint.getDesignVarRange"]], "getdesignvars() (tacs.constraints.volumeconstraint method)": [[22, "tacs.constraints.VolumeConstraint.getDesignVars"]], "getnodes() (tacs.constraints.volumeconstraint method)": [[22, "tacs.constraints.VolumeConstraint.getNodes"]], "getnumcoordinates() (tacs.constraints.volumeconstraint method)": [[22, "tacs.constraints.VolumeConstraint.getNumCoordinates"]], "getnumdesignvars() (tacs.constraints.volumeconstraint method)": [[22, "tacs.constraints.VolumeConstraint.getNumDesignVars"]], "getnumownednodes() (tacs.constraints.volumeconstraint method)": [[22, "tacs.constraints.VolumeConstraint.getNumOwnedNodes"]], "getnumvariables() (tacs.constraints.volumeconstraint method)": [[22, "tacs.constraints.VolumeConstraint.getNumVariables"]], "getoption() (tacs.constraints.volumeconstraint method)": [[22, "tacs.constraints.VolumeConstraint.getOption"]], "getvarspernode() (tacs.constraints.volumeconstraint method)": [[22, "tacs.constraints.VolumeConstraint.getVarsPerNode"]], "printdefaultoptions() (tacs.constraints.volumeconstraint class method)": [[22, "tacs.constraints.VolumeConstraint.printDefaultOptions"]], "printoptions() (tacs.constraints.volumeconstraint method)": [[22, "tacs.constraints.VolumeConstraint.printOptions"]], "setdesignvars() (tacs.constraints.volumeconstraint method)": [[22, "tacs.constraints.VolumeConstraint.setDesignVars"]], "setnodes() (tacs.constraints.volumeconstraint method)": [[22, "tacs.constraints.VolumeConstraint.setNodes"]], "setoption() (tacs.constraints.volumeconstraint method)": [[22, "tacs.constraints.VolumeConstraint.setOption"]], "setvarname() (tacs.constraints.volumeconstraint method)": [[22, "tacs.constraints.VolumeConstraint.setVarName"]], "tacs.constraints.volume": [[22, "module-tacs.constraints.volume"]], "writevisualization() (tacs.constraints.volumeconstraint method)": [[22, "tacs.constraints.VolumeConstraint.writeVisualization"]]}})