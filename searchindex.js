Search.setIndex({"docnames": ["caps2tacs/caps2tacs", "caps2tacs/main", "core/TACS", "core/constitutive", "core/core", "core/elements", "core/functions", "examples/Example-Beam_Optimization", "examples/Example-CRM_Optimization", "examples/Example-Plate", "examples/Example-Transient_Battery", "index", "install", "interfaces", "mphys/builder", "mphys/mphys", "pytacs/adjacency", "pytacs/base_solver", "pytacs/buckling", "pytacs/constraints", "pytacs/continuation_solver", "pytacs/dvcon", "pytacs/modal", "pytacs/newton_solver", "pytacs/panel_length", "pytacs/problems", "pytacs/pytacs", "pytacs/pytacs_module", "pytacs/solvers", "pytacs/static", "pytacs/transient", "pytacs/volume", "theory/elements_theory", "theory/shell_element", "theory/theory"], "filenames": ["caps2tacs/caps2tacs.rst", "caps2tacs/main.rst", "core/TACS.rst", "core/constitutive.rst", "core/core.rst", "core/elements.rst", "core/functions.rst", "examples/Example-Beam_Optimization.rst", "examples/Example-CRM_Optimization.rst", "examples/Example-Plate.rst", "examples/Example-Transient_Battery.rst", "index.rst", "install.rst", "interfaces.rst", "mphys/builder.rst", "mphys/mphys.rst", "pytacs/adjacency.rst", "pytacs/base_solver.rst", "pytacs/buckling.rst", "pytacs/constraints.rst", "pytacs/continuation_solver.rst", "pytacs/dvcon.rst", "pytacs/modal.rst", "pytacs/newton_solver.rst", "pytacs/panel_length.rst", "pytacs/problems.rst", "pytacs/pytacs.rst", "pytacs/pytacs_module.rst", "pytacs/solvers.rst", "pytacs/static.rst", "pytacs/transient.rst", "pytacs/volume.rst", "theory/elements_theory.rst", "theory/shell_element.rst", "theory/theory.rst"], "titles": ["caps2tacs", "Installation of ESP/CAPS", "Direct", "constitutive module", "Core modules", "elements module", "functions module", "Beam optimization with MPhys", "CRM Optimization", "Plate under static load", "Battery pack during thermal runaway", "TACS Overview", "Install", "Interfaces", "TacsBuilder class", "MPhys", "AdjacencyConstraint", "BaseSolver", "BucklingProblem", "Constraint classes", "ContinuationSolver", "DVConstraint", "ModalProblem", "NewtonSolver", "PanelLengthConstraint", "Problem classes", "pyTACS", "pyTACS class", "Solver classes", "StaticProblem", "TransientProblem", "VolumeConstraint", "&lt;no title&gt;", "Beam and shell elements in TACS", "Theory"], "terms": {"The": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 26, 27, 29, 30, 31, 33], "modul": [0, 1, 7, 11, 27, 29, 30], "i": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 26, 27, 29, 30, 31, 33], "python": [0, 1, 2, 13, 26, 27], "interfac": [0, 2, 11, 14, 15, 18, 22, 26, 27, 29, 30], "run": [0, 1, 5, 7, 8, 12, 14, 26], "tac": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 18, 21, 22, 24, 26, 27, 29, 30, 31, 34], "analysi": [0, 1, 2, 3, 5, 7, 9, 10, 11, 12, 14, 15, 18, 22, 26, 27, 29, 30, 33], "geometri": [0, 1, 5, 9, 14, 33], "built": [0, 1, 6, 12], "esp": [0, 18, 22, 29, 30], "cap": [0, 18, 22, 29, 30], "engin": [0, 1, 18, 29, 30], "sketch": [0, 1], "pad": [0, 1], "top": [0, 3], "pytac": [0, 2, 9, 10, 11, 13, 14, 16, 17, 18, 20, 21, 22, 23, 24, 29, 30, 31], "tacsaim": [0, 1, 18, 22, 29, 30], "from": [0, 1, 2, 5, 6, 7, 8, 9, 10, 11, 14, 16, 17, 18, 20, 21, 22, 23, 24, 27, 29, 30, 31, 33], "us": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 20, 21, 22, 23, 24, 26, 27, 29, 30, 31, 33], "funtofem": [0, 1], "size": [0, 1, 2, 16, 18, 20, 21, 22, 23, 24, 27, 29, 30, 31], "shape": [0, 1, 2, 3, 18, 22, 27, 29, 30, 33], "optim": [0, 1, 2, 3, 10, 11, 12, 14, 15, 16, 18, 21, 22, 24, 26, 29, 30, 31], "an": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 12, 14, 16, 17, 18, 20, 21, 22, 23, 24, 26, 27, 29, 30, 31, 33], "aerodynmam": 0, "structur": [0, 1, 2, 3, 5, 6, 7, 8, 11, 12, 14, 16, 18, 21, 22, 24, 26, 27, 29, 30, 31], "under": [0, 3, 5, 7, 10, 11, 33], "onewai": 0, "coupl": [0, 1, 2, 3, 7, 14, 15, 18, 29, 30, 33], "fulli": [0, 3], "aerostructur": [0, 14, 18, 29], "also": [0, 2, 7, 12, 23, 27, 29, 33], "provid": [0, 1, 2, 5, 15, 16, 17, 18, 20, 21, 22, 23, 24, 27, 29, 30, 31, 33], "thermoelast": [0, 1, 3, 5, 18, 27, 29, 30, 33], "properti": [0, 1, 2, 3, 5, 7, 8, 9, 10, 12, 14, 17, 18, 20, 22, 23, 27, 29, 30], "through": [0, 1, 2, 3, 10, 12, 13, 17, 20, 23, 27, 33], "For": [0, 1, 2, 6, 8, 9, 10, 12, 15, 21, 27, 30, 31, 33], "each": [0, 2, 3, 5, 6, 7, 8, 9, 10, 12, 14, 16, 17, 18, 20, 21, 23, 24, 27, 29, 30, 31, 33], "design": [0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 14, 16, 18, 21, 22, 24, 26, 27, 29, 30, 31, 33], "build": [0, 1, 12], "nastran": [0, 2, 3, 9, 14, 18, 26, 27, 29, 30], "file": [0, 1, 2, 7, 8, 9, 10, 12, 14, 16, 18, 21, 22, 24, 26, 27, 29, 30, 31], "mesh": [0, 1, 2, 7, 8, 9, 10, 14, 16, 18, 21, 22, 24, 26, 27, 29, 30, 31, 33], "bdf": [0, 2, 3, 7, 8, 9, 10, 14, 18, 26, 29, 30], "dat": 0, "which": [0, 1, 2, 5, 6, 7, 9, 10, 12, 14, 16, 17, 18, 20, 21, 22, 23, 24, 27, 29, 30, 31, 33], "ar": [0, 1, 2, 3, 5, 6, 8, 9, 10, 12, 13, 14, 16, 17, 18, 20, 21, 22, 23, 24, 26, 27, 29, 30, 31, 33], "locat": [0, 1, 2, 3, 9, 10, 12, 14, 16, 18, 21, 22, 24, 29, 30, 31, 33], "work": [0, 1, 2, 12, 27, 33], "directori": [0, 1, 2, 7, 9, 10, 12, 14, 16, 18, 22, 29, 30, 31], "usual": [0, 1, 2, 3, 6, 23], "capsstruct": 0, "scratch": 0, "output": [0, 1, 2, 7, 12, 14, 16, 18, 22, 23, 29, 30, 31], "can": [0, 1, 2, 3, 6, 7, 9, 10, 12, 14, 16, 17, 18, 20, 21, 22, 23, 24, 26, 27, 29, 30, 31, 33], "store": [0, 2, 3, 16, 17, 20, 21, 23, 24, 29, 31, 33], "well": [0, 10, 27, 29, 30, 33], "f5": [0, 2, 7, 8, 9, 10, 12, 14, 16, 18, 21, 22, 24, 27, 29, 30, 31], "develop": [0, 11, 12, 27], "sean": 0, "engelstad": 0, "more": [0, 1, 2, 9, 11, 12, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 26, 29, 30, 31, 33], "exampl": [0, 2, 3, 6, 7, 9, 10, 14, 16, 18, 21, 22, 24, 27, 29, 30, 31, 33], "involv": [0, 1, 2, 9, 33], "cfd": [0, 1, 30], "pleas": [0, 1, 16, 18, 21, 22, 24, 29, 30, 31], "see": [0, 1, 2, 7, 9, 14, 15, 21, 29, 30], "github": [0, 1, 12], "instal": [0, 11], "intro": 0, "test": [0, 2, 3], "link": [1, 12], "main": [1, 15, 16, 18, 21, 22, 24, 26, 27, 29, 30, 31], "webist": 1, "follow": [1, 2, 3, 5, 6, 7, 12, 14, 16, 17, 18, 20, 22, 23, 26, 27, 29, 30, 31, 33], "A": [1, 2, 3, 5, 8, 13, 16, 18, 20, 23, 27, 29, 30, 31, 33], "prebuilt": 1, "distribut": [1, 2, 5, 7, 18, 27, 29, 30, 33], "found": [1, 6, 7, 9, 10, 27], "folder": 1, "environ": [1, 12], "variabl": [1, 2, 3, 6, 7, 8, 9, 10, 12, 14, 16, 17, 18, 20, 21, 22, 23, 24, 26, 27, 29, 30, 31, 33], "must": [1, 2, 9, 12, 14, 17, 18, 27, 29, 30, 31, 33], "setup": [1, 2, 3, 5, 7, 9, 12, 14, 26, 27, 29, 30], "bashrc": [1, 12], "servecsm": 1, "command": [1, 12], "view": 1, "csm": 1, "alia": [1, 16, 17, 18, 20, 21, 22, 23, 24, 27, 29, 30, 31], "one": [1, 2, 3, 6, 7, 9, 10, 12, 14, 15, 18, 22, 23, 27, 29, 30, 33], "repeatedli": 1, "option": [1, 3, 5, 6, 7, 8, 12, 14, 17, 21, 24], "note": [1, 2, 12, 16, 17, 18, 20, 21, 22, 23, 24, 27, 29, 30, 31, 33], "sourc": [1, 2, 11, 14, 16, 17, 18, 20, 21, 22, 23, 24, 27, 29, 30, 31], "won": 1, "t": [1, 2, 3, 5, 6, 7, 8, 9, 10, 12, 14, 24, 27, 29, 33], "until": [1, 2, 26], "after": [1, 2, 7, 9, 10, 12, 14, 23, 33], "full": [1, 2, 5, 17, 20, 23, 29, 33], "so": [1, 2, 7, 8, 9, 12, 13, 16, 17, 18, 20, 21, 22, 23, 24, 27, 29, 30, 31], "you": [1, 12, 29], "ignor": [1, 3, 27], "immedi": [1, 2], "export": [1, 2, 12], "esp_root": 1, "packag": [1, 12, 15], "esp123": 1, "engsketchpad": 1, "pythonpath": 1, "pyesp": 1, "espenv": 1, "shell": [1, 3, 5, 9, 11, 14, 18, 22, 27, 29, 30, 31, 34], "bin": 1, "linux": [1, 12], "machin": [1, 12], "proce": [1, 2, 26], "opencascad": 1, "version": [1, 2, 12], "chang": [1, 3, 5, 16, 17, 18, 20, 21, 22, 23, 24, 27, 29, 30, 31, 33], "past": 1, "accordingli": [1, 12], "basic": [1, 27], "step": [1, 2, 9, 10, 16, 20, 23, 26, 27, 29, 30], "download": [1, 12], "tar": [1, 12], "unpack": 1, "inform": [1, 2, 3, 9, 12, 14, 15, 16, 18, 21, 22, 23, 24, 27, 29, 30, 31], "come": [1, 27, 29, 30], "Then": [1, 2, 10, 12], "we": [1, 2, 7, 9, 10, 27, 33], "onli": [1, 2, 6, 9, 10, 14, 16, 17, 18, 20, 21, 22, 23, 24, 27, 29, 30, 31, 33], "need": [1, 2, 6, 12, 14, 16, 18, 21, 22, 24, 27, 29, 30, 31], "make": [1, 2, 20, 23], "auto": 1, "don": [1, 5, 12, 27], "rest": 1, "mkdir": 1, "cd": 1, "wget": 1, "http": [1, 12], "acdl": 1, "mit": 1, "edu": 1, "aarch64": 1, "tgz": [1, 12], "xvf": 1, "config": 1, "makeenv": 1, "7": [1, 3, 5, 18, 22, 27, 29, 30], "0": [1, 2, 3, 5, 6, 7, 8, 9, 10, 12, 14, 16, 17, 18, 20, 21, 22, 23, 24, 27, 29, 30, 31, 33], "src": [1, 12], "aim": [1, 18, 20, 22, 29, 30], "caps2tac": [1, 11, 13, 18, 22, 29, 30], "import": [1, 7, 8, 9, 10, 12, 13, 27, 33], "unless": [1, 2], "properli": 1, "your": [1, 5, 12], "differenti": [1, 6], "cad": 1, "defin": [1, 2, 3, 5, 7, 8, 9, 10, 14, 16, 17, 18, 21, 22, 24, 27, 29, 30, 31, 33], "comput": [1, 2, 3, 5, 6, 8, 9, 10, 14, 16, 17, 18, 20, 21, 22, 23, 24, 26, 27, 29, 30, 31], "solid": [1, 3, 27, 31], "model": [1, 2, 3, 6, 7, 8, 9, 10, 14, 16, 18, 21, 22, 24, 26, 27, 29, 30, 31, 33], "user": [1, 2, 5, 7, 9, 10, 12, 14, 15, 16, 18, 21, 22, 24, 27, 29, 30, 31], "write": [1, 2, 7, 8, 9, 10, 14, 16, 18, 21, 22, 24, 27, 29, 30, 31], "own": [1, 2, 14, 16, 17, 18, 20, 21, 22, 23, 24, 27, 29, 30, 31, 33], "tutori": 1, "websit": 1, "thing": 1, "includ": [1, 2, 10, 12, 14, 18, 21, 23, 27, 29, 30], "below": [1, 3, 6, 7, 8, 9, 10, 12, 13, 15, 16, 18, 20, 22, 23, 26, 27, 29, 30, 31, 33], "refer": [1, 3, 5], "caps_w": 1, "simple_naca_w": 1, "configur": [1, 2, 7, 33], "paramet": [1, 2, 3, 5, 6, 7, 8, 14, 16, 17, 18, 20, 21, 22, 23, 24, 27, 29, 30, 31, 33], "cfgpmtr": 1, "nrib": 1, "10": [1, 3, 5, 8, 9, 16, 18, 21, 22, 24, 27, 29, 30, 31], "integ": [1, 18, 22, 27], "fix": [1, 7, 9, 14, 18, 29, 30], "dure": [1, 3, 9, 11, 14, 23, 27, 29, 30, 33], "despmtr": 1, "span": [1, 7], "real": [1, 2], "number": [1, 2, 3, 5, 7, 8, 10, 14, 16, 17, 18, 20, 21, 22, 23, 24, 26, 27, 29, 30, 31], "ti": [1, 2], "capsgroup": 1, "attribut": [1, 16, 17, 18, 20, 21, 22, 23, 24, 27, 29, 30, 31], "region": [1, 10, 27], "same": [1, 2, 8, 10, 12, 17, 20, 21, 23, 24, 27], "car": 1, "denot": [1, 14, 33], "rib1": [1, 27], "etc": [1, 2, 5, 12, 14, 18, 21, 27, 29, 30], "often": [1, 23, 27, 33], "pattern": [1, 10], "statement": 1, "sometim": 1, "primit": 1, "udprim": 1, "editattr": 1, "capsconstraint": 1, "intend": [1, 12, 29, 30], "have": [1, 2, 3, 12, 14, 16, 17, 18, 20, 21, 22, 23, 24, 27, 29, 30, 31, 33], "constraint": [1, 2, 5, 7, 8, 14, 16, 18, 21, 22, 24, 26, 27, 29, 30, 31, 33], "e": [1, 2, 3, 5, 7, 8, 9, 12, 14, 18, 20, 27, 29, 30, 33], "g": [1, 2, 3, 8, 14, 20, 27, 29], "These": [1, 2, 3, 5, 6, 8, 10, 12, 13, 26, 27, 33], "temperatur": [1, 3, 6, 10, 33], "elast": [1, 3, 5, 8, 18, 27, 29, 30], "right": [1, 10, 18, 29, 30, 33], "now": [1, 8, 9, 10], "capsload": 1, "load": [1, 2, 3, 5, 6, 7, 8, 10, 11, 14, 18, 20, 23, 26, 27, 29, 30], "thi": [1, 2, 3, 5, 6, 7, 8, 9, 10, 12, 13, 14, 16, 17, 18, 20, 21, 22, 23, 24, 26, 27, 29, 30, 31, 33], "simpl": [1, 2, 8, 9], "analys": [1, 6, 9, 14, 26], "aerodynam": [1, 18, 29, 30], "cannot": [1, 2, 5, 17, 27, 33], "wai": [1, 3, 9, 27], "how": [1, 2, 9, 23, 27, 30], "do": [1, 3, 7, 9, 10, 21, 27], "capsaim": 1, "specifi": [1, 2, 3, 6, 7, 8, 10, 17, 18, 20, 23, 26, 27, 29, 30], "bodi": [1, 2, 5, 14, 33], "tool": [1, 5, 11], "add": [1, 2, 5, 7, 9, 10, 12, 14, 18, 26, 27, 29, 30, 33], "egadstessaim": 1, "here": [1, 2, 7, 9, 10, 29, 33], "occasion": 1, "capsmesh": 1, "set": [1, 2, 3, 5, 6, 7, 8, 9, 10, 12, 14, 16, 17, 18, 20, 21, 22, 23, 24, 26, 27, 29, 30, 31], "altern": [1, 12, 18], "differ": [1, 2, 3, 5, 10, 21, 27], "section": [1, 2, 3, 7, 15, 26, 33], "tacsmodel": 1, "object": [1, 2, 3, 5, 6, 7, 8, 9, 10, 12, 14, 16, 17, 18, 20, 21, 22, 23, 24, 26, 27, 29, 30, 31, 33], "supervis": 1, "process": [1, 2, 6, 7, 9, 10, 12, 27, 29, 30], "updat": [1, 3, 16, 17, 18, 20, 21, 22, 23, 24, 27, 29, 30, 31], "support": [1, 5, 12, 13, 14, 18, 22, 27, 29, 30, 31], "mpi": [1, 2, 8, 10, 12, 14, 16, 17, 18, 20, 21, 22, 23, 24, 27, 29, 30, 31], "parallel": [1, 2, 5, 11, 12], "featur": [1, 10, 12, 33], "directli": [1, 16, 17, 18, 21, 22, 24, 29, 30, 31, 33], "avail": [1, 3, 5, 6, 12, 14, 33], "comm": [1, 2, 7, 8, 10, 14, 16, 17, 18, 20, 21, 22, 23, 24, 27, 29, 30, 31], "comm_world": [1, 8, 17, 20, 23], "tacs_model": 1, "csm_file": 1, "next": [1, 2, 7, 9, 10, 23], "gener": [1, 2, 3, 5, 6, 8, 9, 12, 15, 16, 18, 21, 22, 24, 27, 29, 30, 31, 33], "global": [1, 2, 5, 6, 8, 14, 18, 27, 29, 30, 33], "depend": [1, 2, 5, 16, 17, 18, 20, 21, 22, 23, 24, 27, 29, 30, 31, 33], "scale": [1, 2, 5, 8, 14, 18, 20, 21, 22, 27, 29, 30], "ll": [1, 9], "want": [1, 10, 12, 16, 18, 21, 22, 24, 27, 29, 30, 31], "tune": 1, "hyperparamet": 1, "small": [1, 5, 23, 33], "egadsaim": 1, "routin": [1, 2, 12, 14, 16, 18, 21, 22, 24, 29, 30, 31], "get": [1, 2, 3, 5, 7, 8, 9, 10, 12, 14, 16, 17, 18, 20, 21, 22, 23, 24, 27, 29, 30, 31], "qualiti": 1, "mesh_aim": 1, "set_mesh": 1, "edge_pt_min": 1, "15": [1, 3, 18, 22, 29], "edge_pt_max": 1, "20": [1, 3, 8, 14, 16, 21, 29, 31], "global_mesh_s": 1, "25": [1, 5, 23], "max_surf_offset": 1, "01": [1, 10, 23, 27], "max_dihedral_angl": 1, "register_to": 1, "There": [1, 3, 6, 9, 12, 13, 27, 33], "certain": [1, 18, 23, 27, 29, 30], "regist": 1, "befor": [1, 2, 3, 6, 9, 14, 17, 18, 20, 23, 27, 29, 30], "If": [1, 2, 3, 6, 10, 12, 16, 18, 20, 21, 22, 23, 24, 27, 29, 30, 31], "correctli": 1, "throw": 1, "error": [1, 3, 12, 14], "check": [1, 10, 14, 16, 18, 21, 22, 24, 27, 29, 30, 31], "phase": [1, 3, 5], "materi": [1, 5, 7, 8, 9, 10, 14, 27, 33], "element": [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 14, 16, 18, 21, 24, 26, 27, 29, 30, 31, 34], "definit": [1, 3, 6, 21, 27, 33], "type": [1, 2, 3, 5, 6, 9, 10, 12, 14, 16, 17, 18, 20, 21, 22, 23, 24, 27, 29, 30, 31], "isotrop": [1, 3, 5, 7], "orthotrop": [1, 3, 5, 33], "anisotrop": [1, 3, 5], "ad": [1, 2, 5, 7, 14, 16, 17, 18, 20, 21, 22, 23, 24, 27, 29, 30, 31, 33], "underli": [1, 14], "sever": [1, 2, 3, 6, 10, 12, 13, 27, 33], "common": [1, 2, 16, 18, 26, 27, 29, 30, 31], "save": [1, 2, 16, 17, 18, 21, 22, 23, 24, 29, 30, 31], "class": [1, 2, 6, 7, 8, 9, 10, 13, 15, 16, 18, 20, 21, 22, 23, 24, 26, 29, 30, 31], "method": [1, 2, 5, 6, 9, 10, 11, 12, 13, 14, 16, 17, 18, 20, 21, 22, 23, 24, 26, 27, 29, 30, 31, 33], "aluminum": [1, 9, 10], "steel": 1, "titanium": 1, "carbon": 1, "fiber": 1, "current": [1, 2, 3, 6, 7, 13, 14, 16, 17, 18, 20, 21, 22, 23, 24, 27, 29, 30, 31], "shellproperti": 1, "indirectli": 1, "thicknessvari": 1, "name": [1, 9, 10, 12, 14, 16, 17, 18, 20, 21, 22, 23, 24, 27, 29, 30, 31], "thick": [1, 2, 3, 7, 8, 9, 10, 16, 21, 33], "thermal": [1, 3, 11, 14], "instanc": [1, 2, 6, 10, 14, 16, 17, 18, 20, 22, 23, 26, 27, 29, 30, 31], "pinconstraint": 1, "temperatureconstraint": 1, "input": [1, 2, 6, 7, 9, 10, 14, 27, 29], "match": [1, 21, 27], "static": [1, 2, 6, 7, 11, 18, 27, 29, 33], "problem": [1, 2, 5, 6, 7, 8, 9, 10, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 26, 27, 29, 30, 31], "gridforc": 1, "pressur": [1, 18, 29, 30], "whose": 1, "softwar": [1, 7, 12], "repo": 1, "function": [1, 2, 4, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 20, 22, 23, 26, 27, 29, 30, 31, 33], "ksfailur": [1, 2, 6, 7, 8, 9, 14], "mass": [1, 2, 3, 5, 6, 7, 8, 9, 14, 27, 29, 30, 33], "complianc": [1, 6], "onc": [1, 2, 7, 12, 16, 17, 18, 20, 21, 22, 23, 24, 27, 29, 30, 31], "all": [1, 2, 3, 6, 8, 9, 10, 12, 13, 14, 16, 17, 18, 20, 21, 22, 23, 24, 27, 29, 30, 31], "abov": [1, 7, 12, 27], "readi": 1, "complet": [1, 2, 7, 12, 27, 33], "pre_analysi": 1, "run_analysi": 1, "solut": [1, 7, 8, 9, 10, 14, 16, 17, 18, 20, 22, 23, 27, 29, 30, 31], "final": [1, 2, 7, 8, 9, 10, 20, 27], "post_analysi": 1, "valu": [1, 2, 3, 6, 7, 8, 10, 14, 16, 17, 18, 20, 21, 22, 23, 24, 26, 27, 29, 30, 31, 33], "deriv": [1, 2, 8, 12, 14, 16, 17, 18, 21, 22, 24, 29, 30, 31, 33], "adjoint": [1, 2, 8, 29], "include_aim": 1, "true": [1, 6, 7, 8, 9, 14, 16, 18, 22, 23, 24, 27, 29, 30, 31], "five": 1, "coars": 1, "symmetr": [1, 3], "naca": 1, "0012": 1, "wing": [1, 11], "1": [1, 2, 3, 5, 6, 7, 8, 10, 12, 14, 16, 18, 20, 21, 22, 23, 24, 27, 29, 30, 31, 33], "steadi": [1, 5], "egad": 1, "vertic": 1, "2": [1, 2, 3, 5, 6, 8, 10, 12, 14, 20, 22, 23, 24, 27, 29, 30, 33], "unsteadi": 1, "vari": [1, 2, 10, 14, 16, 33], "sinusoid": 1, "time": [1, 2, 7, 10, 14, 16, 18, 22, 23, 27, 29, 30, 31, 33], "3": [1, 3, 5, 7, 8, 9, 10, 12, 14, 16, 18, 21, 22, 24, 27, 29, 30, 31, 33], "find": [1, 23, 33], "panel": [1, 3, 16, 21, 24, 27], "hold": [1, 3, 14, 16, 17, 18, 20, 21, 22, 23, 24, 27, 29, 30, 31, 33], "aero": 1, "4": [1, 2, 3, 5, 18, 26, 27, 29, 30], "rib": [1, 27], "spar": [1, 27], "insid": [1, 27], "5": [1, 3, 8, 9, 10, 12, 14, 20, 23, 27, 29, 33], "aflr": 1, "shown": [1, 3, 7, 10, 29], "result": [1, 2, 6, 7, 16, 17, 18, 20, 21, 22, 23, 24, 29, 30, 31, 33], "about": [1, 3, 6, 14, 27, 33], "40": [1, 23], "drop": 1, "weight": [1, 2, 3, 5, 6, 21, 27], "equal": [1, 3, 8, 10, 24], "notic": 1, "ha": [1, 2, 6, 9, 10, 11, 12, 14, 16, 17, 18, 20, 21, 22, 23, 24, 26, 27, 29, 30, 31], "largest": 1, "root": [1, 12, 16, 17, 18, 20, 21, 22, 23, 24, 27, 29, 30, 31], "relat": [1, 17, 23, 27], "beam": [1, 2, 3, 5, 11, 34], "bend": [1, 33], "clamp": 1, "27": [1, 5], "suggest": 1, "placement": 1, "veri": [1, 2, 23], "good": [1, 3, 20], "In": [1, 2, 9, 10, 12, 18, 23, 27, 29, 30, 33], "case": [1, 2, 6, 9, 10, 16, 17, 18, 20, 21, 22, 23, 24, 27, 29, 30, 31, 33], "move": 1, "toward": 1, "lead": [1, 10, 27], "edg": [1, 5, 27], "higher": [1, 23, 33], "curvatur": 1, "two": [1, 2, 5, 6, 9, 10, 12, 16, 20, 26, 27, 33], "unittest": 1, "verifi": 1, "integration_test": 1, "test_caps_shape_deriv": 1, "py": [1, 12, 27], "test_caps_thick_deriv": 1, "respons": [2, 3, 9, 14, 16, 18, 21, 22, 24, 27, 29, 30, 31, 33], "up": [2, 7, 8, 9, 10, 12, 14, 20, 27], "bookkeep": 2, "most": [2, 3, 6, 13, 18, 26, 27, 29, 30], "like": [2, 3, 5, 6, 7, 10, 12, 16, 18, 21, 22, 24, 29, 30, 31], "state": [2, 5, 8, 16, 17, 18, 20, 21, 22, 23, 24, 27, 29, 30, 31, 33], "vector": [2, 5, 6, 14, 16, 17, 18, 20, 21, 22, 23, 24, 27, 29, 30, 31, 33], "fe": [2, 18, 29, 30], "matric": 2, "approach": [2, 9, 13, 26, 27, 33], "allow": [2, 9, 14, 17, 20, 23, 27], "visibl": 2, "c": [2, 3, 8, 13, 16, 21, 27, 29, 33], "code": [2, 11], "daunt": 2, "new": [2, 7, 8, 12, 14, 16, 17, 18, 20, 21, 22, 23, 24, 27, 29, 30, 31], "simplifi": [2, 33], "where": [2, 3, 6, 9, 10, 16, 17, 18, 20, 21, 22, 23, 24, 27, 29, 30, 31, 33], "been": [2, 9, 10, 11, 12, 14, 16, 17, 18, 20, 21, 22, 23, 24, 27, 29, 30, 31, 33], "autom": [2, 26], "usag": [2, 26], "evalu": [2, 3, 6, 7, 8, 9, 10, 12, 14, 16, 17, 18, 20, 21, 22, 23, 24, 26, 29, 30, 31, 33], "gradient": [2, 3, 6, 7, 8, 9, 11, 12, 23, 26, 27, 33], "desir": [2, 8, 18, 22, 26, 27, 29, 30], "respect": [2, 6, 7, 8, 9, 10, 12, 16, 18, 21, 22, 24, 26, 29, 30, 31, 33], "finit": [2, 6, 11, 12, 26, 33], "form": [2, 14, 16, 20, 21, 26, 27, 33], "style": [2, 26], "compon": [2, 5, 6, 7, 8, 10, 14, 16, 18, 21, 29, 30], "constitut": [2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 24, 27, 29], "creat": [2, 7, 8, 9, 10, 12, 13, 14, 16, 17, 18, 20, 21, 22, 23, 24, 26, 27, 29, 30, 31, 33], "appli": [2, 5, 6, 7, 8, 9, 10, 18, 21, 24, 26, 27, 29, 30], "boundari": [2, 9, 14, 16, 27], "condit": [2, 9, 14, 27, 29, 30], "solv": [2, 8, 9, 10, 16, 17, 18, 20, 21, 22, 23, 24, 26, 27, 29, 30, 31], "system": [2, 5, 8, 12, 29, 33], "pass": [2, 3, 6, 7, 9, 10, 14, 17, 23, 24, 26, 27, 29, 30], "paropt": [2, 8, 26], "order": [2, 3, 12, 17, 18, 23, 26, 27, 29, 30, 33], "minim": [2, 7, 8, 26], "particular": [2, 6, 26, 27], "subject": [2, 7, 8, 26], "some": [2, 5, 6, 9, 26, 27, 33], "improv": [2, 23, 26], "iter": [2, 7, 8, 14, 16, 17, 18, 20, 21, 22, 23, 24, 26, 29, 30, 31], "repeat": [2, 26], "criteria": [2, 6, 9, 20, 23, 26], "satisfi": [2, 23, 26, 33], "It": [2, 5, 9, 16, 17, 18, 21, 22, 24, 27, 29, 30, 31, 33], "contain": [2, 3, 5, 7, 8, 12, 13, 14, 16, 18, 21, 22, 24, 27, 29, 30, 31, 33], "its": [2, 6, 9, 10, 14, 33], "typic": [2, 3, 16, 18, 21, 22, 24, 26, 27, 29, 30, 31, 33], "applybc": [2, 8], "solver": [2, 8, 14, 15, 16, 18, 21, 22, 24, 26, 27, 30, 31], "createvec": [2, 8, 27], "createfemat": [2, 8], "setdesignvar": [2, 8, 16, 18, 21, 22, 24, 29, 30, 31], "vale": 2, "evalfunct": [2, 8, 9, 10, 18, 22, 27, 29, 30], "call": [2, 3, 7, 8, 9, 10, 12, 14, 15, 17, 18, 20, 22, 23, 26, 27, 29, 30, 33], "adddvsen": [2, 18, 29], "addsvsen": [2, 29], "addadjointresproduct": [2, 29], "adjlist": 2, "dfdxlist": 2, "alpha": [2, 3, 8, 23], "loadscal": [2, 29], "collect": [2, 14, 27, 33], "tacsassembl": 2, "product": [2, 3, 5, 6, 8, 12, 29], "residu": [2, 8, 17, 18, 20, 22, 23, 27, 29, 30], "w": [2, 3, 7, 8, 10, 12, 24, 27], "r": [2, 8, 17, 20, 23, 24, 27, 29, 33], "simultan": 2, "reus": 2, "perform": [2, 3, 7, 11, 17, 20, 23, 27], "task": 2, "evaladjointresproduct": [2, 8], "memori": 2, "than": [2, 8, 10, 16, 17, 18, 20, 21, 22, 23, 24, 29, 30, 31], "arrai": [2, 3, 5, 6, 7, 9, 10, 14, 16, 18, 21, 22, 24, 27, 29, 30, 31], "dvsen": 2, "num_dv": 2, "factor": [2, 3, 5, 6, 8, 14, 18, 20, 21, 22, 27, 29, 30], "aux": [2, 29], "contribut": [2, 3, 18, 29, 33], "default": [2, 3, 5, 6, 9, 12, 14, 16, 17, 18, 20, 21, 22, 23, 24, 27, 29, 30, 31], "addadjointresxptsensproduct": [2, 29], "node": [2, 3, 5, 8, 9, 10, 14, 16, 18, 21, 22, 24, 27, 29, 30, 31, 33], "funclist": 2, "list": [2, 3, 8, 14, 16, 18, 20, 21, 22, 23, 24, 27, 29, 30, 31], "addjacobianvecproduct": 2, "beta": [2, 8], "gamma": [2, 8, 23], "x": [2, 3, 5, 6, 7, 8, 9, 16, 18, 21, 22, 24, 27, 29, 30, 31, 33], "y": [2, 3, 5, 6, 7, 8, 9, 14, 33], "mator": 2, "jacobian": [2, 8, 20, 23, 29, 30, 33], "addmatdvsensinnerproduct": 2, "mattyp": 2, "psi": 2, "phi": [2, 29], "dfdx": [2, 8], "inner": [2, 3, 20], "matrix": [2, 3, 5, 8, 16, 18, 20, 21, 22, 23, 24, 29, 30, 31, 33], "sensit": [2, 9, 10, 16, 17, 18, 20, 21, 22, 23, 24, 27, 29, 30, 31], "dfdulist": 2, "pointer": 2, "vec": [2, 16, 17, 18, 20, 21, 22, 23, 24, 27, 29, 30, 31], "addxptsen": [2, 18, 29], "applymatbc": 2, "mat": [2, 3, 8], "assemblejacobian": [2, 8], "dirichlet": [2, 27], "zero": [2, 3, 8, 17, 18, 20, 23, 24, 27, 29, 30], "row": [2, 16, 21, 24, 31], "associ": [2, 3, 5, 18, 22, 27, 29, 30], "diagon": [2, 5, 10, 18, 22, 29, 30], "uniti": [2, 6], "assembli": 2, "ani": [2, 7, 8, 9, 12, 14, 17, 20, 23, 27, 29, 30], "commun": [2, 14], "requir": [2, 3, 5, 6, 7, 8, 9, 10, 12, 17, 18, 20, 23, 29, 30, 33], "coeffici": [2, 3, 33], "term": [2, 29, 33], "second": [2, 5, 6, 9, 10, 27, 30, 33], "govern": [2, 33], "equat": [2, 16, 17, 18, 20, 21, 23, 24, 29, 30, 31], "orient": [2, 5, 12, 33], "normal": [2, 5, 6, 33], "transpos": [2, 29], "assemblematcombo": 2, "mattype1": 2, "scale1": 2, "mattype2": 2, "scale2": 2, "combin": [2, 3, 27, 33], "assemblemattyp": 2, "assembler": 2, "traction": [2, 18, 29, 30], "tacssurfacetract": 2, "point": [2, 3, 5, 7, 8, 9, 14, 18, 23, 27, 29, 30, 33], "entri": [2, 3, 9, 14, 18, 29, 30], "first": [2, 3, 5, 6, 7, 8, 9, 10, 18, 23, 27, 29, 30, 33], "rh": [2, 18, 29, 30], "computereord": 2, "order_typ": 2, "mat_typ": 2, "reorder": 2, "unknown": 2, "initi": [2, 3, 7, 8, 9, 10, 14, 16, 17, 18, 20, 21, 22, 23, 24, 26, 29, 30, 31, 33], "copyvari": 2, "none": [2, 5, 8, 9, 14, 16, 17, 18, 20, 21, 22, 23, 24, 27, 29, 30, 31], "dvec": 2, "ddvec": 2, "varspernod": [2, 5, 18, 29, 30], "numownednod": [2, 30], "numel": 2, "numdependentnod": 2, "factori": 2, "createdesignvec": [2, 27], "createmat": 2, "createnodevec": [2, 27], "createschurmat": 2, "special": [2, 27], "suit": 2, "On": 2, "scheme": [2, 14, 20, 30], "subsequ": 2, "": [2, 3, 5, 7, 8, 9, 10, 12, 14, 17, 18, 20, 21, 22, 23, 24, 27, 29, 30, 33], "femat": 2, "non": [2, 27], "togeth": 2, "easier": [2, 27], "eigenvalu": [2, 18, 22, 27], "determin": [2, 3, 5, 6, 14, 18, 22, 27, 29, 30, 33], "serial": 2, "other": [2, 5, 7, 10, 12, 15, 17, 27, 29, 30], "separ": [2, 6, 14, 27], "end": [2, 12, 14, 27, 30, 33], "block": [2, 10], "while": [2, 6, 27], "local": [2, 3, 5, 7, 27], "impos": [2, 33], "kludg": 2, "within": [2, 3, 6, 10, 12, 21, 27, 33], "hopefulli": 2, "reduc": [2, 20, 33], "fill": [2, 29], "ins": 2, "although": 2, "firm": 2, "proof": 2, "back": [2, 7, 9, 10], "place": [2, 3, 8, 12, 18, 21, 22, 29, 30], "fematbindic": 2, "fematcindic": 2, "map": 2, "mathemat": 2, "written": [2, 12, 27, 33], "a1": 2, "p": 2, "permut": 2, "column": 2, "thei": [2, 7, 8, 12, 24, 27, 33], "share": [2, 27], "exactli": 2, "layout": 2, "evalenergi": 2, "kinet": [2, 33], "potenti": [2, 33], "energi": [2, 6, 10, 23, 33], "getbcmap": 2, "getdesignvarrang": [2, 8, 16, 18, 21, 22, 24, 27, 29, 30, 31], "lb": [2, 8], "ub": [2, 8], "retriev": [2, 27], "rang": [2, 8, 30], "individu": [2, 18, 29, 30], "mai": [2, 5, 6, 12, 14, 17, 20, 23, 27], "consist": [2, 3, 15, 20, 24, 26, 33], "someon": 2, "incorrect": 2, "data": [2, 8, 17, 20, 23, 27, 33], "could": [2, 10], "best": [2, 12], "guess": [2, 17, 18, 20, 22, 23, 27], "take": [2, 9, 10, 16, 18, 20, 23, 27, 29, 30, 33], "minimum": [2, 3, 9, 12, 20, 23], "upper": [2, 3, 7, 8, 14, 16, 18, 21, 22, 23, 24, 27, 29, 30, 31], "bound": [2, 3, 8, 14, 16, 18, 21, 22, 23, 24, 27, 29, 30, 31], "maximum": [2, 6, 8, 9, 10, 20, 23], "lower": [2, 3, 7, 8, 14, 16, 18, 21, 22, 23, 24, 27, 29, 30, 31], "lowerbound": [2, 3], "upperbound": [2, 3], "numdv": 2, "getdesignvar": [2, 8, 16, 18, 21, 22, 24, 29, 30, 31], "assign": [2, 3, 7, 8, 9, 14, 27, 29], "doe": [2, 27], "ensur": [2, 12, 16, 27, 31], "between": [2, 3, 23, 27, 33], "inconsist": [2, 6], "begin": [2, 33], "return": [2, 3, 5, 6, 7, 8, 9, 10, 12, 14, 16, 17, 18, 20, 21, 22, 23, 24, 27, 29, 30, 31], "them": [2, 3, 6, 8, 10], "maintain": 2, "multipli": [2, 5, 14, 18, 22, 27, 29, 30, 33], "correspond": [2, 3, 10, 12, 14, 16, 18, 21, 22, 24, 27, 29, 30, 31], "undefin": 2, "behaviour": [2, 27], "getelementdata": 2, "num": [2, 27], "getelementnod": 2, "given": [2, 5, 6, 10, 14, 18, 27, 29, 30, 33], "getel": 2, "getinitcondit": 2, "getmpicomm": 2, "getnod": [2, 16, 18, 21, 22, 24, 29, 30, 31], "getnumdependentnod": 2, "getnumel": 2, "getnumnod": 2, "getnumownednod": [2, 16, 18, 21, 22, 24, 27, 29, 30, 31], "getownerrang": 2, "processor": [2, 8, 14, 16, 17, 18, 20, 21, 22, 23, 24, 27, 29, 30, 31], "getreord": 2, "getsimulationtim": 2, "simul": [2, 10], "getvari": [2, 18, 22, 29, 30], "getvarspernod": [2, 16, 18, 21, 22, 24, 27, 29, 30, 31], "per": [2, 16, 18, 21, 22, 24, 27, 29, 30, 31], "when": [2, 10, 12, 14, 20, 23, 26, 27, 29, 33], "tacscreat": 2, "reordervec": 2, "base": [2, 3, 5, 6, 8, 9, 11, 12, 14, 16, 18, 20, 22, 23, 27, 29, 30, 31, 33], "setauxel": 2, "elem": [2, 7, 9, 10, 14], "auxiliari": 2, "setbcvaluesfromvec": 2, "bc": 2, "setbc": 2, "setdependentnod": 2, "ptr": 2, "conn": 2, "connect": [2, 5, 7, 15, 27], "howev": [2, 27, 33], "setelementconnect": 2, "setel": [2, 8], "setinitcondit": [2, 30], "setnod": [2, 16, 18, 21, 22, 24, 29, 30, 31], "setnumthread": 2, "thread": 2, "setsimulationtim": 2, "setvari": [2, 8, 29], "testel": 2, "elemnum": 2, "print_level": 2, "dh": 2, "1e": [2, 3, 8, 14, 16, 18, 20, 21, 22, 23, 27, 29, 30, 31], "06": 2, "rtol": 2, "08": [2, 20, 23], "atol": 2, "implement": [2, 6, 11, 12, 13, 17, 18, 20, 22, 23, 24, 27, 29, 30, 34], "stiff": [2, 3, 5, 8, 9, 18, 22, 29, 30, 33], "variou": [2, 29, 30], "part": [2, 18, 24, 27, 29, 30, 33], "strain": [2, 3, 5, 6, 8, 27], "nodal": [2, 18, 27, 29, 31, 33], "coordin": [2, 5, 14, 16, 18, 21, 22, 24, 27, 29, 30, 31, 33], "print": [2, 7, 10, 16, 17, 18, 20, 21, 22, 23, 24, 27, 29, 30, 31], "level": [2, 13, 18, 22, 29, 30], "testfunct": 2, "func": [2, 8, 9, 10, 16, 18, 21, 22, 24, 29, 30, 31], "interest": [2, 9, 10, 12, 26], "random": 2, "perturb": 2, "should": [2, 3, 5, 6, 7, 9, 12, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 27, 29, 30, 31, 33], "randomli": 2, "otherwis": [2, 10, 29], "produc": [2, 9, 10, 33], "unrealist": 2, "central": 2, "compil": 2, "complex": [2, 3, 16, 21, 24, 29, 31], "approxim": [2, 6, 8, 10, 12, 18, 29, 33], "zeroddotvari": 2, "2nd": 2, "zerodotvari": 2, "zerovari": [2, 8, 29], "read": [2, 8, 9, 14, 17, 18, 20, 22, 23, 27, 29, 30], "fem": [2, 7], "scanbdffil": [2, 8], "getnumcompon": [2, 8, 27], "addauxel": 2, "comp_num": 2, "addfunctiondomain": 2, "comp_list": 2, "domain": [2, 6, 10, 14, 27], "createtac": [2, 8], "distribtu": 2, "getbc": 2, "getcomponentdescript": 2, "descript": [2, 9, 14, 16, 18, 20, 22, 23, 27, 29, 30, 31], "getconnect": 2, "getelementdescript": [2, 8], "fname": 2, "scan": 2, "bulk": 2, "elem_typ": 2, "grid": [2, 5, 10, 14, 18, 27, 29, 30], "similar": 2, "manual": [2, 12], "rather": [2, 8, 17, 20, 23], "setboundarycondit": 2, "getelementpartit": 2, "partit": [2, 27, 29], "bcptr": 2, "bcvar": 2, "bcval": 2, "setglobalconnect": 2, "num_nod": [2, 5, 33], "node_ptr": 2, "node_conn": 2, "id_num": 2, "id": [2, 3, 9, 10, 14, 18, 27, 29, 30], "natur": [2, 5, 27], "frequenc": [2, 22, 27, 29], "eigenproblem": 2, "extract": 2, "eigenvector": [2, 18, 22], "mode": [2, 3, 7, 14, 18, 22, 27], "lowest": [2, 18, 22, 27], "forward": [2, 14], "dirk": [2, 30], "abm": 2, "nbg": 2, "inherit": [2, 6, 33], "checkgradi": [2, 8], "self": [2, 7, 8, 16, 18, 21, 22, 24, 29, 30, 31], "doubl": [2, 5, 6, 27, 33], "fd": 2, "csd": 2, "verif": 2, "getadjoint": 2, "int": [2, 3, 5, 6, 14, 16, 17, 18, 20, 21, 22, 23, 24, 27, 29, 30, 31, 33], "step_num": 2, "func_num": 2, "getgradi": 2, "getnumtimestep": [2, 30], "getstat": 2, "time_step": 2, "getxptgradi": 2, "initadjoint": 2, "integrateadjoint": 2, "backward": 2, "forc": [2, 5, 7, 8, 9, 18, 20, 23, 27, 29, 30], "nonlinear": [2, 5, 27, 31, 33], "iterateadjoint": 2, "revers": [2, 14], "loadstat": 2, "prefix": 2, "disk": 2, "string": [2, 16, 18, 21, 22, 24, 27, 29, 30, 31], "argument": [2, 3, 6, 9, 10, 12, 27, 29, 30], "put": 2, "binari": 2, "persistst": 2, "postadjoint": 2, "finish": 2, "calcul": [2, 6, 27], "setabstol": 2, "absolut": [2, 17, 18, 20, 22, 23, 29, 30], "toler": [2, 17, 18, 20, 22, 23, 27, 29, 30, 31], "newton": [2, 20, 29], "setfh5": 2, "tofh5": [2, 8], "rigid": [2, 5, 33], "setfunct": 2, "start_plan": 2, "end_plan": 2, "obtain": 2, "setinitnewtondeltafract": 2, "frac": [2, 7, 33], "setjacassemblyfreq": 2, "freq": 2, "frequent": [2, 30], "setkrylovsubspacemethod": 2, "ksm": [2, 8, 20, 23], "linear": [2, 5, 6, 8, 16, 18, 20, 21, 23, 27, 29, 33], "setmaxnewtonit": 2, "max_newton_it": 2, "setoutputfrequ": 2, "write_freq": 2, "setoutputprefix": 2, "_prefix": 2, "setprintlevel": 2, "tacsintegr": 2, "off": 2, "summari": 2, "setreltol": 2, "rel": [2, 3, 17, 18, 20, 22, 23, 29, 30, 31], "settimeinterv": 2, "tinit": [2, 10, 27, 30], "tfinal": [2, 10, 27, 30], "interv": [2, 30], "setuselapack": 2, "use_lapack": 2, "lapack": [2, 12], "slow": [2, 23], "setuseschurmat": 2, "use_schur_mat": 2, "orderingtyp": [2, 29], "tacsschurmat": [2, 29], "execut": [2, 12], "behavior": [3, 33], "materialproperti": [3, 7, 9, 10, 14, 27], "mechan": [3, 33], "goal": [3, 33], "queri": 3, "plane": [3, 33], "stress": [3, 5, 6, 7, 8, 9, 14, 27, 33], "expans": [3, 33], "describ": [3, 12, 23, 27, 33], "possibl": [3, 27], "appropri": [3, 5, 6, 7, 9, 10, 12, 33], "situat": [3, 23], "rho": [3, 7, 8, 9, 10, 14], "specific_heat": [3, 10], "kappa": [3, 10, 33], "densiti": [3, 7, 8, 9, 10, 14], "specif": [3, 10, 16, 17, 18, 20, 21, 22, 23, 24, 27, 29, 30, 31], "heat": [3, 5, 10, 18, 29, 30], "conduct": [3, 5, 9, 10, 14, 18, 29, 30], "2d": [3, 5, 18, 27, 29, 30], "3d": [3, 5, 6], "kappa1": 3, "kappa2": 3, "kappa3": 3, "nu": [3, 7, 8, 9, 14], "young": [3, 7, 9, 14], "modulu": [3, 7, 8, 9, 14], "poisson": [3, 7, 8, 9, 14], "ratio": [3, 7, 8, 9, 14, 29], "yield": [3, 7, 8, 9, 14], "strength": [3, 6], "e1": 3, "e2": 3, "nu12": 3, "g12": 3, "t1": 3, "t2": 3, "c1": [3, 5, 16, 18, 21, 22, 24, 29, 30, 31], "c2": [3, 5], "s12": 3, "moduli": 3, "e3": 3, "nu13": 3, "nu23": 3, "g13": 3, "g23": 3, "t3": 3, "c3": 3, "s13": 3, "s23": 3, "alpha1": 3, "alpha2": 3, "alpha3": 3, "keyword": [3, 6, 9, 10, 29, 30], "arg": [3, 14, 18, 22, 29, 30], "format": [3, 9, 10, 12, 14, 16, 17, 18, 20, 21, 22, 23, 24, 29, 30, 31], "float": [3, 5, 6, 16, 17, 18, 20, 21, 22, 23, 24, 27, 29, 30, 31], "direct": [3, 5, 6, 7, 8, 11, 12, 13, 26, 27, 33], "coeefici": 3, "shear": [3, 5, 7, 8, 33], "tension": 3, "compress": [3, 16, 21, 24, 31], "generatebdfcard": 3, "pynastran": [3, 14, 27, 29], "card": [3, 9, 27], "mat1": [3, 27], "mat8": [3, 27], "getmaterialproperti": 3, "dictionari": [3, 14, 16, 17, 18, 20, 21, 22, 23, 24, 27, 29, 30, 31], "dict": [3, 14, 16, 17, 18, 20, 21, 22, 23, 24, 27, 29, 30, 31], "getnastranid": 3, "setdens": 3, "setnastranid": 3, "setspecificheat": 3, "orthotropicpli": 3, "ply": [3, 21], "interact": [3, 27], "tsai": 3, "wu": 3, "failur": [3, 6, 7, 9, 10, 17, 20, 23], "criterion": [3, 23], "suppli": [3, 5, 16, 18, 21, 22, 24, 27, 29, 30, 31], "Be": 3, "care": 3, "easili": [3, 12], "fall": 3, "outsid": 3, "accept": [3, 6, 12, 18, 22, 27, 29, 30], "ply_thick": 3, "prop": [3, 7, 9, 10, 14, 27], "max_strain_criterion": 3, "bool": [3, 5, 6, 14, 16, 17, 18, 20, 21, 22, 23, 24, 27, 29, 30, 31], "flag": [3, 5, 6, 8, 12, 14, 16, 17, 18, 20, 21, 22, 23, 24, 27, 29, 30, 31], "max": [3, 7, 8, 18, 22, 23, 29], "fals": [3, 5, 6, 7, 14, 16, 18, 20, 21, 22, 23, 24, 27, 29, 30, 31], "procedur": [3, 5, 9, 10, 18, 22, 27, 29, 30], "buckl": [3, 14, 18, 27], "basicbeamconstitut": [3, 27], "beamconstitut": [3, 5], "timoshenko": [3, 5], "theori": [3, 7, 11, 33], "neg": [3, 6, 27], "sign": [3, 6], "convent": [3, 6], "inertia": [3, 6, 27, 33], "iyz": [3, 6], "z": [3, 5, 6, 8, 33], "da": 3, "moment": [3, 5, 6, 7, 18, 27, 29, 30], "area": 3, "alwai": [3, 5, 6, 9, 14, 33], "posit": [3, 6, 18, 29, 33], "iyi": [3, 6], "cross": [3, 5, 7], "j": [3, 10, 29, 33], "polar": 3, "axi": [3, 5, 6], "ii": 3, "iz": 3, "yz": 3, "ky": 3, "correct": [3, 8, 27, 29], "6": [3, 5, 7, 8, 9, 18, 27, 29, 30], "kz": 3, "bar": 3, "pbar": [3, 27], "bladestiffenedshellconstitut": 3, "shellconstitut": [3, 5], "stiffen": [3, 5, 21, 27], "explicitli": 3, "instead": [3, 16, 17, 18, 21, 22, 24, 27, 29, 30, 31], "smear": 3, "across": [3, 14, 16, 18, 21, 27, 29, 30, 33], "panelpli": 3, "stiffenerpli": 3, "kcorr": [3, 8], "panellength": 3, "length": [3, 7, 10, 18, 21, 24, 27, 29, 30, 33], "dv": [3, 7, 14, 16, 21, 24, 27], "panellengthnum": 3, "lenth": 3, "tell": [3, 9], "treat": [3, 27, 33], "stiffenerpitch": 3, "pitch": [3, 27], "stiffenerpitchnum": 3, "panelthick": 3, "panelthicknum": 3, "numpanelpli": 3, "distinct": 3, "angl": 3, "panelplyangl": 3, "numpi": [3, 5, 7, 8, 9, 10, 12, 16, 18, 21, 22, 24, 27, 29, 30, 31], "ndarrai": [3, 5, 14, 16, 18, 21, 22, 24, 27, 29, 30, 31], "panelplyfrac": 3, "fraction": [3, 21, 23], "panelplyfracnum": 3, "np": [3, 7, 8, 9, 10, 14], "intc": 3, "stiffenerheight": 3, "height": 3, "stiffenerheightnum": 3, "stiffenerthick": 3, "stiffenerthicknum": 3, "numstiffenerpli": 3, "stiffenerplyangl": 3, "stiffenerplyfrac": 3, "stiffenerplyfracnum": 3, "flangefract": 3, "width": [3, 7], "rais": [3, 9, 14], "valueerror": [3, 9, 14], "setksweight": 3, "ksweight": [3, 6, 7, 8, 9, 10, 14], "k": [3, 6, 8, 10, 18, 27, 29, 30, 33], "aggreg": [3, 6, 7, 8, 10], "setpanelplyfractionbound": 3, "pli": 3, "setpanelthicknessbound": 3, "1e20": [3, 16, 21, 24, 31], "setstiffenerheightbound": 3, "setstiffenerpitchbound": 3, "setstiffenerplyfractionbound": 3, "setstiffenerthicknessbound": 3, "compositeshellconstitut": [3, 27], "composit": [3, 11, 12, 21], "lamin": [3, 33], "deform": [3, 33], "fsdt": 3, "ply_list": 3, "layup": 3, "ply_angl": 3, "radian": 3, "toffset": 3, "offset": [3, 27, 33], "distanc": 3, "mid": [3, 33], "measur": [3, 8, 17, 20, 23], "plate": [3, 10, 11, 14, 27, 33], "bottom": 3, "pcomp": [3, 27], "dofspringconstitut": [3, 27], "generalspringconstitut": [3, 5], "tradit": 3, "spring": [3, 5], "dof": [3, 5, 18, 27, 29, 30], "assum": [3, 27, 30, 33], "bush": 3, "pbush": [3, 27], "generalmassconstitut": [3, 5], "translat": 3, "rotat": [3, 5, 18, 29, 30], "m": [3, 7, 8, 9, 10, 14, 24, 27, 30, 33], "8": [3, 5, 12, 20, 27], "9": [3, 5, 10, 14, 23, 27, 33], "11": [3, 12], "12": [3, 10, 18, 22, 23, 29, 30, 31], "13": [3, 12], "14": [3, 18, 22, 27, 29, 30], "16": [3, 5], "17": 3, "18": 3, "19": 3, "flatten": [3, 30], "side": [3, 10, 18, 29, 30], "evalmassmatrix": 3, "6x6": 3, "21": [3, 12], "repres": [3, 10, 14, 18, 22, 29, 30, 33], "uniqu": [3, 18, 27, 29, 30], "isorectanglebeamconstitut": [3, 7], "rectangular": [3, 7], "dimens": 3, "along": [3, 6, 7, 18, 22, 29, 30], "perpindicular": 3, "wnum": 3, "wlb": 3, "wub": 3, "diamet": 3, "tnum": [3, 7, 9, 10, 14], "tlb": 3, "tub": 3, "woffset": 3, "pbarl": 3, "isoshellconstitut": [3, 9, 14, 27], "pshell": [3, 27], "isotubebeamconstitut": 3, "hollow": 3, "circular": 3, "d": [3, 8, 29, 33], "tube": 3, "dnum": 3, "dlb": 3, "dub": 3, "wall": 3, "lamparamshellconstitut": 3, "phasechangematerialconstitut": [3, 5], "solid_prop": 3, "liquid_prop": 3, "liquid": 3, "lh": 3, "latent": 3, "mt": 3, "melt": 3, "planestressconstitut": [3, 5, 10], "util": [3, 26, 33], "pointmassconstitut": 3, "i12": [3, 27], "x1": 3, "x2": 3, "dm": [3, 6], "i11": [3, 27], "x3": 3, "i22": [3, 27], "i33": 3, "i13": 3, "i23": 3, "mnum": 3, "mlb": 3, "mub": 3, "i11num": 3, "i11lb": 3, "i11ub": 3, "i22num": 3, "i22lb": 3, "i22ub": 3, "i33num": 3, "i33lb": 3, "i33ub": 3, "i12num": 3, "i12lb": 3, "i12ub": 3, "i13num": 3, "i13lb": 3, "i13ub": 3, "i23num": 3, "i23lb": 3, "i23ub": 3, "setdrillingregular": 3, "kpenalti": 3, "regular": 3, "drill": 3, "smearedcompositeshellconstitut": 3, "homogen": 3, "continu": [3, 6, 11, 29], "parametr": [3, 5], "stack": 3, "sequenc": [3, 14, 27], "effect": [3, 5, 23], "total": [3, 5, 8, 10, 14, 18, 27, 29, 30, 33], "ply_fract": 3, "thickness_dv_num": 3, "ply_fraction_dv_num": 3, "thickness_lb": 3, "thickness_ub": 3, "ply_fraction_lb": 3, "ply_fraction_ub": 3, "t_offset": 3, "solidconstitut": [3, 5, 27], "topologi": [3, 11], "void": [3, 33], "present": [3, 12], "intermedi": [3, 20, 30], "psolid": [3, 27], "librari": [5, 7, 8, 9, 10], "capabl": [5, 7, 26, 33], "parameter": [5, 33], "elementbasi": 5, "lineartetrahedralbasi": [5, 27], "tetrahedr": 5, "numnod": 5, "quadratictetrahedralbasi": 5, "quadrat": [5, 33], "linearhexabasi": [5, 27], "hexahedr": 5, "quadratichexabasi": 5, "cubichexabasi": 5, "cubic": 5, "64": [5, 12], "linearquadbasi": [5, 10], "quad": 5, "quadraticquadbasi": 5, "cubicquadbasi": 5, "quarticquadbasi": 5, "quartic": 5, "quinticquadbasi": 5, "quintic": 5, "36": 5, "lineartrianglebasi": [5, 10], "triangular": 5, "quadratictrianglebasi": 5, "cubictrianglebasi": 5, "elementmodel": 5, "heatconduction2d": [5, 10], "con": [5, 7, 8, 9, 10, 14], "heatconduction3d": 5, "pcmheatconduction2d": 5, "linearelasticity2d": 5, "linearelasticity3d": [5, 27], "linearthermoelasticity2d": 5, "steady_flag": 5, "linearthermoelasticity3d": 5, "shellnaturaltransform": 5, "shelltransform": 5, "align": [5, 33], "who": 5, "shellrefaxistransform": 5, "project": [5, 6, 27], "surfac": [5, 31, 33], "getrefaxi": 5, "beamrefaxistransform": [5, 7], "beamtransform": 5, "springidentitytransform": 5, "springtransform": 5, "stif": 5, "ident": [5, 27], "ax": [5, 33], "springrefaxistransform": 5, "Not": [5, 24, 27], "coincid": 5, "springrefframetransform": 5, "arbritrari": 5, "frame": [5, 27], "axis1": 5, "axis2": 5, "getrefax": 5, "axis_j": 5, "axis_i": 5, "element2d": [5, 10], "outputel": [5, 27], "plane_stress_el": [5, 27], "physic": [5, 10, 15, 18, 29, 30], "element3d": [5, 27], "solid_el": [5, 27], "quad4shel": [5, 9, 14, 27], "emploi": 5, "mix": 5, "interpol": 5, "tensori": 5, "mitc": [5, 33], "avoid": 5, "lock": [5, 33], "beam_or_shell_el": [5, 27], "equival": [5, 27], "quad9shel": [5, 27], "quad16shel": 5, "tri3shel": [5, 27], "quad4nonlinearshel": 5, "geometr": [5, 27, 33], "relationship": 5, "retain": 5, "treatment": 5, "therefor": [5, 12, 27, 33], "captur": [5, 33], "remain": [5, 18, 29, 30], "director": [5, 11, 12, 34], "quad9nonlinearshel": 5, "quad16nonlinearshel": 5, "tri3nonlinearshel": 5, "quad4nonlinearthermalshel": 5, "quad9nonlinearthermalshel": 5, "quad16nonlinearthermalshel": 5, "tri3nonlinearthermalshel": 5, "quad4thermalshel": [5, 27], "quad9thermalshel": 5, "quad16thermalshel": 5, "tri3thermalshel": 5, "beam2": [5, 7, 27], "beam3": 5, "beam2modrot": 5, "moder": [5, 33], "beam3modrot": 5, "rbe2": [5, 27], "arbitrari": 5, "independ": [5, 7], "degre": [5, 9, 10, 12, 14, 16, 18, 21, 22, 24, 29, 30, 31, 33], "freedom": [5, 9, 10, 14, 16, 18, 21, 22, 24, 29, 30, 31, 33], "six": 5, "motion": 5, "singl": [5, 6, 10, 20, 27, 30, 33], "n_dep": 5, "rigid_el": [5, 27], "constrained_dof": 5, "attach": [5, 16, 18, 22, 29, 30, 31], "classmethod": [5, 16, 17, 18, 20, 21, 22, 23, 24, 27, 29, 30, 31], "setscalingparamet": 5, "1000": [5, 7, 8, 18, 22, 29, 30], "lagrang": [5, 14, 18, 22, 27, 29, 30, 33], "formul": [5, 16, 27, 31], "rbe": [5, 18, 22, 29, 30], "artifici": [5, 18, 22, 29, 30, 33], "constant": [5, 6, 7, 18, 22, 29, 30], "precondition": [5, 18, 20, 22, 23, 29, 30], "stabil": [5, 18, 22, 29, 30], "rbe3": [5, 27], "power": 5, "unlik": 5, "rbar": 5, "doesn": [5, 27], "addit": [5, 9, 12, 17, 18, 23, 29, 33], "n_indep": 5, "dep_constrained_dof": 5, "eleemnt": 5, "indep_constrained_dof": 5, "massel": [5, 27], "mass_el": [5, 27], "springel": [5, 27], "spring_el": [5, 27], "assembl": [6, 8, 9, 14, 16, 17, 18, 21, 22, 23, 24, 26, 27, 29, 30, 31, 33], "ever": [6, 33], "handl": [6, 9, 14, 18, 22, 29, 30, 33], "averagetemperatur": 6, "spatial": [6, 33], "averag": [6, 18, 29, 30], "volum": [6, 14, 27, 31], "centerofmass": 6, "center": [6, 9, 14, 18, 29, 30], "give": [6, 10, 33], "transient": [6, 10, 27, 30, 33], "cg": 6, "onto": [6, 33], "integr": [6, 27, 30, 33], "displac": [6, 8, 18, 27, 29], "setcompliancetyp": 6, "compliance_typ": 6, "enclosedvolum": 6, "enclos": [6, 14, 27, 31], "ksdisplac": 6, "kreisselmei": 6, "steinhaus": 6, "over": [6, 8, 10, 18, 26, 29, 30, 33], "smooth": 6, "80": 6, "ftype": 6, "str": [6, 14, 16, 17, 18, 20, 21, 22, 23, 24, 27, 29, 30, 31], "discret": [6, 7, 30], "pnorm": 6, "insensit": [6, 16, 17, 18, 20, 21, 22, 23, 24, 27, 29, 30, 31], "necessari": [6, 9, 12, 23, 27, 30], "either": [6, 10, 12, 33], "consid": [6, 9, 27, 33], "threshold": 6, "mean": [6, 29], "least": 6, "exceed": [6, 10], "impli": [6, 27], "safetyfactor": [6, 7, 14], "safeti": 6, "kstemperatur": [6, 10], "momentofinertia": 6, "origin": [6, 11, 27], "i_out": 6, "vec1": 6, "i_tensor": 6, "vec2": 6, "tensor": 6, "ixx": 6, "ixi": 6, "ixz": 6, "iyx": 6, "izx": 6, "izi": 6, "izz": 6, "direction1": 6, "direction2": 6, "aboutcm": 6, "whether": [6, 14, 17, 18, 20, 23, 27, 29, 30], "taken": [6, 20, 33], "structuralmass": [6, 7, 8, 9, 14], "script": [7, 9, 10, 12], "demonstr": [7, 8, 10], "act": [7, 9, 29], "wrapper": [7, 18, 22, 23, 27, 29, 30], "openmdao": [7, 14, 15], "cantilev": 7, "tip": 7, "100": [7, 8, 9, 10, 14, 16, 21, 24, 27, 31], "dictat": [7, 17, 20, 23], "By": [7, 10, 18, 27, 29], "realiz": 7, "spanwis": 7, "sigma": [7, 8, 14, 18, 22, 27], "analyt": 7, "sqrt": 7, "6v": 7, "cdot": 7, "l": [7, 33], "sigma_i": 7, "o": [7, 8, 10, 33], "matplotlib": 7, "pyplot": 7, "plt": [7, 9, 10, 12], "api": 7, "om": 7, "multipoint": [7, 14], "scenario_structur": 7, "scenariostructur": 7, "tacsbuild": [7, 15], "bdf_file": 7, "path": [7, 10, 12, 20, 29], "join": [7, 10], "dirnam": [7, 10], "__file__": [7, 10], "beam_opt": 7, "05": 7, "2500": [7, 8, 9, 14], "kg": [7, 8, 9, 10, 14], "70": 7, "0e9": 7, "pa": [7, 8, 9, 14], "350e6": [7, 8], "v": 7, "1e3": 7, "elemcallback": [7, 9, 10, 14], "callback": [7, 9, 10, 14, 17, 20, 23], "def": [7, 8, 9, 10, 14, 27], "element_callback": [7, 14], "dvnum": [7, 9, 10, 27], "compid": [7, 9, 10, 16, 18, 21, 22, 24, 27, 29, 30, 31], "compdescript": [7, 9, 10, 27], "elemdescript": [7, 9, 10, 14, 27], "specialdv": [7, 9], "kwarg": [7, 9, 10, 14, 18, 22, 27, 29, 30], "everi": [7, 8, 9, 10, 14, 24, 27, 29, 30], "group": [7, 11, 14, 16, 21, 24, 26, 31], "refaxi": 7, "transform": [7, 9, 14], "problem_setup": [7, 14], "scenario": [7, 14], "staticproblem": [7, 9, 25, 27], "modifi": [7, 12, 14, 16, 17, 18, 20, 21, 22, 23, 24, 27, 29, 30, 31, 33], "eval": [7, 14, 29, 30], "our": [7, 9, 10], "kn": [7, 9], "scenario_nam": [7, 14], "fea_assembl": [7, 14], "helper": 7, "builder": [7, 14, 15], "addfunct": [7, 9, 10, 14, 18, 22, 29, 30], "ks_vmfailur": [7, 9, 14], "addloadtonod": [7, 9, 18, 29, 30], "101": [7, 27], "nastranord": [7, 9, 18, 27, 29, 30], "essenti": [7, 27], "To": [7, 9, 10, 12, 23, 29, 33], "instanti": [7, 10], "feed": 7, "structuralscenario": 7, "beammodel": 7, "struct_build": 7, "mesh_fil": [7, 14], "write_solut": [7, 14], "dv_arrai": 7, "get_initial_dv": [7, 14], "control": [7, 23, 27, 29], "add_subsystem": 7, "indepvarcomp": 7, "promot": 7, "add_output": 7, "dv_struct": 7, "get_mesh_coordinate_subsystem": [7, 14], "mphys_add_scenario": 7, "tip_shear": 7, "mphys_connect_scenario_coordinate_sourc": 7, "struct": [7, 16, 18, 21, 22, 24, 29, 30, 31], "At": [7, 12, 33], "scipyoptimizedriv": 7, "driver": 7, "prob": 7, "declar": [7, 10], "add_design_var": 7, "001": [7, 18, 22, 29, 30], "scaler": 7, "add_object": 7, "add_constraint": 7, "debug_print": 7, "obj": 7, "nl_con": 7, "maxit": [7, 20, 23], "slsqp": 7, "n2": 7, "represent": 7, "show_brows": 7, "outfil": 7, "beam_opt_n2": 7, "html": 7, "run_driv": 7, "out": [7, 8, 9, 10, 14, 16, 17, 18, 20, 21, 22, 23, 24, 27, 29, 30, 31, 33], "screen": [7, 17, 20, 23], "termin": [7, 12], "successfulli": 7, "exit": 7, "5534716448382722": 7, "138": 7, "372": 7, "post": [7, 9, 10], "commonli": [7, 18, 29, 30], "convert": [7, 9, 10, 12, 16, 18, 21, 22, 24, 29, 30, 31], "tecplot": [7, 9, 10, 12, 16, 31], "paraview": [7, 9, 10, 12], "f5totec": [7, 9, 10, 12], "f5tovtk": [7, 9, 10, 12], "bdf_out": 7, "beam_sol": 7, "write_bdf": 7, "plot": 7, "compar": 7, "against": 7, "expect": [7, 23, 27], "get_val": 7, "x_struct0": 7, "get_remot": 7, "t_opt": 7, "m_opt": 7, "t_exact": 7, "legend": 7, "ylabel": 7, "xlabel": 7, "titl": 7, "profil": 7, "show": [7, 9, 10, 27], "enforc": [8, 21, 24, 27, 33], "quadratur": [8, 33], "less": [8, 10], "mpi4pi": [8, 10, 12, 16, 17, 18, 20, 21, 22, 23, 24, 27, 29, 30, 31], "ucrm_vonmisesmassmin": 8, "pyparoptproblem": 8, "__init__": 8, "bdf_name": 8, "meshload": [8, 16, 18, 21, 22, 24, 27, 29, 30, 31], "struct_mesh": 8, "70e9": [8, 9, 14], "min_thick": 8, "002": 8, "max_thick": 8, "02": 8, "loop": [8, 10, 30], "num_compon": 8, "descriptor": 8, "index": [8, 10, 11, 16, 18, 21, 22, 24, 27, 29, 30, 31], "design_variable_index": 8, "isofsdt": 8, "cquad": 8, "cquadr": [8, 10, 27], "cquad4": [8, 9, 10, 14, 27], "mitcshel": 8, "component_num": 8, "loader": [8, 27], "50": [8, 10, 23], "force_arrai": 8, "getarrai": 8, "uniform": [8, 18, 29, 30], "re": [8, 17, 20, 23, 27, 29], "dfdu": 8, "pc": 8, "subspac": [8, 18, 22, 29], "restart": [8, 29], "gmre": [8, 29], "mass_scal": 8, "mm": [8, 9, 14], "meter": 8, "thickness_scal": 8, "nvar": 8, "ncon": 8, "super": 8, "comm_self": 8, "inequ": 8, "dens": 8, "both": [8, 12, 24, 27, 29, 33], "setinequalityopt": 8, "dense_ineq": 8, "use_low": 8, "use_upp": 8, "visual": [8, 9, 10, 16, 31, 33], "extra": [8, 27], "py_shel": 8, "iter_count": 8, "getvarsandbound": 8, "xval": 8, "dtype": [8, 16, 17, 18, 20, 21, 22, 23, 24, 27, 29, 30, 31], "xlb": [8, 16, 18, 21, 22, 24, 27, 29, 30, 31], "xub": [8, 16, 18, 21, 22, 24, 27, 29, 30, 31], "evalobjcon": 8, "fail": [8, 17, 20, 23], "varaibl": 8, "fval": 8, "fobj": 8, "von": 8, "mise": 8, "evalobjcongradi": 8, "gx": 8, "evaldvsen": 8, "evalsvsen": [8, 18], "writetofil": 8, "ucrm_it": 8, "pyparopt": 8, "tacs_comm": 8, "crm_box_2nd": 8, "crm_opt": 8, "max_lbfg": 8, "opt": 8, "bfg": 8, "setoutputfil": 8, "setarmijoparam": 8, "zw": 8, "zl": 8, "zu": 8, "getoptimizedpoint": 8, "advanc": [9, 11], "nomin": 9, "1m": 9, "flat": 9, "perimet": 9, "compris": 9, "900": 9, "submodul": 9, "purpos": [9, 16, 18, 21, 22, 27, 29, 30, 31], "bdffile": [9, 10, 29], "feaassembl": [9, 10], "automat": [9, 27, 29], "itself": [9, 33], "long": 9, "exist": [9, 27], "done": [9, 10, 27], "464": [9, 14], "0e6": [9, 14], "tplate": [9, 10, 14], "005": [9, 14], "naturalshelltransform": [9, 14], "accord": [9, 14], "elemlist": [9, 10], "els": [9, 10, 14], "catch": [9, 14], "unexpect": [9, 14], "f": [9, 14, 18, 29, 30], "pretti": 9, "those": [9, 10, 27], "createstaticproblem": [9, 27, 29], "staticprob": 9, "point_forc": 9, "ve": [9, 10], "accomplish": 9, "uniniti": [9, 10, 14], "minu": 9, "let": [9, 14], "vonmis": 9, "select": [9, 10, 16, 18, 21, 27, 29, 30, 31, 33], "481": 9, "1e4": 9, "evalfunctionssen": [9, 10, 18, 22, 29, 30], "funcssen": [9, 10, 16, 18, 21, 22, 24, 29, 30, 31], "further": [9, 10], "writesolut": [9, 10, 18, 22, 29, 30], "point_force_000": 9, "runscript": [9, 10], "vtk": [9, 10, 12], "cell": 10, "undergo": 10, "cylindr": 10, "embed": 10, "corner": 10, "releas": [10, 12], "larg": [10, 11], "amount": 10, "nearest": 10, "adjac": [10, 16, 27], "prevent": 10, "go": [10, 12], "cascad": 10, "figur": [10, 29], "label": [10, 14], "hand": [10, 18, 29, 30], "multipl": [10, 14, 16, 17, 18, 20, 21, 22, 23, 24, 27, 29, 30, 31], "easi": [10, 27], "enabl": [10, 12, 20, 23, 33], "previou": [10, 20], "three": [10, 11, 20], "item": [10, 27], "pprint": 10, "mateteri": 10, "propertiesfor": 10, "battery_pack": 10, "065": 10, "battery_rho": 10, "1460": 10, "battery_kappa": 10, "battery_cp": 10, "880": 10, "alum_rho": 10, "2700": 10, "alum_kappa": 10, "204": 10, "alum_cp": 10, "883": 10, "globaldv": [10, 27], "basi": [10, 18, 29, 30], "elif": [10, 14], "ctria3": [10, 14, 27], "ctriar": [10, 27], "recogn": 10, "append": [10, 14, 27, 29], "transientproblem": [10, 25, 27], "numstep": [10, 27, 30], "createtransientproblem": [10, 27, 30], "flux": 10, "gettimestep": [10, 30], "selectcompid": [10, 14, 18, 27, 29, 30], "addloadtocompon": [10, 18, 29, 30], "just": [10, 12, 17, 20, 23], "specifii": 10, "spread": 10, "sinc": [10, 11, 14, 27, 29, 30, 33], "transfer": [10, 14], "6000": 10, "indic": [10, 17, 18, 20, 22, 23, 27, 29, 30], "watt": 10, "000": 10, "joul": 10, "timestep": [10, 30], "enumer": 10, "00": [10, 27], "face": [10, 18, 27, 29, 30, 31], "closest": 10, "opert": 10, "event": 10, "wa": [10, 11], "withing": 10, "compids_00": 10, "compids_01": 10, "adjec": 10, "compids_04": 10, "04": [10, 27], "With": [10, 33], "ks_temp_corn": 10, "ks_temp_adjac": 10, "ks_temp_diagon": 10, "transient_000_000": 10, "transient_000_050": 10, "050": 10, "transient_000_": 10, "anim": 10, "what": [10, 27], "look": [10, 12, 16, 18, 21, 22, 24, 29, 30, 31], "toolkit": 11, "primarili": 11, "box": 11, "recent": 11, "extend": [11, 12, 33], "dimension": 11, "2010": 11, "multidisciplinari": [11, 14], "georgia": 11, "tech": 11, "lab": 11, "univers": 11, "michigan": 11, "anaconda": 11, "mphy": [11, 13, 14], "batteri": 11, "pack": 11, "runawai": 11, "core": 11, "search": [11, 23], "page": [11, 23], "readili": 12, "maco": 12, "window": 12, "recommend": [12, 18, 22, 27, 29, 30], "try": [12, 20], "access": [12, 13], "virtual": [12, 33], "vm": 12, "subsystem": [12, 14], "docker": 12, "mdolab": 12, "public": [12, 18, 22, 27, 29, 30], "imag": 12, "conda": 12, "platform": 12, "start": [12, 23, 27, 30], "n": [12, 14, 16, 18, 21, 22, 23, 24, 27, 29, 30, 31, 33], "activ": 12, "forg": 12, "smdogroup": 12, "bla": 12, "meti": 12, "cython": [12, 13, 16, 18, 21, 22, 24, 29, 30, 31], "suitespars": 12, "amd": 12, "tecio": 12, "fh5": 12, "compat": [12, 14, 27], "clone": 12, "git": 12, "repositori": 12, "copi": [12, 18, 29, 30], "makefil": 12, "info": [12, 14, 27], "edit": 12, "tacs_dir": 12, "cxx": 12, "lapack_lib": 12, "metis_dir": 12, "suitesparse_dir": 12, "tecio_dir": 12, "toolbox": 12, "mind": 12, "divid": [12, 18, 27, 29, 30, 33], "categori": 12, "checkout": 12, "com": 12, "sure": 12, "teciosrc": 12, "teciompisrc": 12, "cfg": 12, "wish": [12, 18, 29, 30], "extern": [12, 16, 18, 20, 22, 23, 27, 29, 30, 31], "inde": 12, "alreadi": [12, 18, 27, 29, 30], "simpli": 12, "adjust": 12, "fedoraproject": 12, "org": 12, "lookasid": 12, "pkg": 12, "gz": 12, "5465e67079419a69e0116de24fce58f": 12, "cmake": 12, "drtimothyaldendavi": 12, "www": 12, "boost": 12, "sudo": 12, "apt": 12, "libboost": 12, "dev": 12, "debian": 12, "someth": 12, "No": [12, 18, 22, 27, 29, 30], "rule": [12, 27], "target": [12, 20], "stop": 12, "leav": 12, "somedirectori": 12, "x86_64": 12, "subdirectori": 12, "bash": 12, "f5convert": 12, "f5clean": 12, "clean": 12, "date": 12, "remov": 12, "h": 12, "line": [12, 23, 27, 33], "sub": [12, 29, 30], "numer": 12, "pip": 12, "shortcut": 12, "older": 12, "miss": [12, 27, 31], "libtac": 12, "tree": 12, "newer": 12, "publicli": 13, "member": 13, "wrap": 13, "document": 13, "around": [14, 23], "assembler_setup": 14, "abc": [14, 27], "callabl": [14, 17, 20, 23, 27], "prior": 14, "elem_callback": 14, "dv_num": 14, "comp_id": 14, "comp_descript": 14, "elem_descript": 14, "special_dv": 14, "counter": [14, 16, 18, 22, 27, 29, 30, 31], "propid": [14, 27], "comment": [14, 27], "belong": [14, 27], "ctetra": [14, 27], "global_dv": 14, "mani": [14, 27], "being": [14, 17, 18, 23, 29, 30], "baseproblem": 14, "constraint_setup": 14, "seri": 14, "buckling_setup": 14, "pytacs_opt": 14, "check_parti": 14, "partial": [14, 18, 20, 27, 29, 33], "without": [14, 33], "still": 14, "meaning": [14, 16, 21, 24, 29, 30, 31], "weather": 14, "turn": 14, "thermostructur": 14, "separate_mass_dv": 14, "lump": 14, "struct_dv": 14, "split": [14, 18, 27, 29, 30, 33], "10401": 14, "10402": 14, "assignmassdv": [14, 27], "engine_mass": 14, "fuel_mass": 14, "elem_list": 14, "setopt": [14, 16, 17, 18, 20, 21, 22, 23, 24, 27, 29, 30, 31], "outputdir": [14, 16, 18, 22, 29, 30, 31], "skip": [14, 23, 27], "concentr": [14, 27], "ngroup": [14, 27], "struct_mass": 14, "maneuver_2_5g": 14, "maneuver_m1g": 14, "graviti": [14, 18, 29, 30], "81": 14, "addinertialload": [14, 18, 29, 30], "constr": 14, "createvolumeconstraint": [14, 27, 31], "addconstraint": [14, 16, 21, 24, 31], "5g": 14, "maneuv": 14, "createbucklingproblem": [14, 18, 27], "numeig": [14, 18, 22, 27], "l2converg": [14, 18, 22, 29, 30], "l2convergencerel": [14, 18, 22, 29, 30], "xfer": 14, "get_coupling_group_subsystem": 14, "couplinggroup": 14, "get_pre_coupling_subsystem": 14, "get_post_coupling_subsystem": 14, "get_ndof": 14, "ndof": 14, "get_number_of_nod": 14, "get_dv_bound": 14, "add_design_vari": 14, "get_dv_scal": 14, "get_ndv": 14, "proc": [14, 24, 27, 29], "get_solv": 14, "get_fea_assembl": 14, "get_tagged_indic": 14, "tag": 14, "grid_id": 14, "standard": [15, 23], "high": 15, "fidel": 15, "multiphys": 15, "conveni": [15, 27, 33], "disciplinari": 15, "doc": 15, "detail": [15, 26], "discuss": [15, 26], "constrain": [16, 27, 31], "dv_i": [16, 27], "dv_j": [16, 27], "abruptli": [16, 27], "delta_t": [16, 21], "t_i": 16, "t_j": 16, "createadjacencyconstraint": [16, 27], "creation": [16, 18, 22, 27, 29, 30, 31], "printopt": [16, 17, 18, 20, 21, 22, 23, 24, 27, 29, 30, 31], "writer": [16, 18, 22, 29, 30, 31], "numbersolut": [16, 18, 22, 29, 30, 31], "outputview": [16, 18, 21, 22, 24, 29, 30, 31], "intracomm": [16, 17, 18, 20, 21, 22, 23, 24, 27, 29, 30, 31], "tacstofh5": [16, 18, 21, 22, 24, 29, 30, 31], "postprocess": [16, 18, 21, 22, 24, 29, 30, 31], "pymeshload": [16, 18, 21, 22, 24, 29, 30, 31], "connam": [16, 21, 24, 31], "dvindex": [16, 24], "evalconstraint": [16, 21, 24, 31], "evalcon": [16, 21, 24, 31], "ignoremiss": [16, 18, 21, 22, 24, 29, 30, 31], "supress": [16, 18, 21, 22, 24, 29, 30, 31], "valid": [16, 18, 21, 22, 24, 29, 30, 31], "caution": [16, 18, 21, 22, 24, 29, 30, 31, 33], "adjconstraint": [16, 24], "le_spar": [16, 21, 24, 27, 31], "c1_le_spar": [16, 21, 24, 31], "12354": [16, 18, 21, 22, 29, 30, 31], "evalconstraintssen": [16, 21, 24, 31], "derivit": [16, 18, 21, 22, 24, 29, 30, 31], "50x242": [16, 21, 24, 31], "spars": [16, 21, 24, 29, 31], "float64": [16, 17, 18, 20, 21, 22, 23, 24, 27, 29, 30, 31], "writevisu": [16, 31], "basenam": [16, 18, 22, 29, 30, 31], "filenam": [16, 18, 22, 27, 29, 30, 31], "again": [16, 18, 22, 29, 30, 31, 33], "getconstraintbound": [16, 21, 24, 31], "tupl": [16, 21, 24, 29, 31], "conbound": [16, 21, 24, 31], "tacsconstraint": [16, 21, 24, 31], "getconstraintkei": [16, 21, 24, 31], "kei": [16, 17, 18, 20, 21, 22, 23, 24, 27, 29, 30, 31, 33], "far": [16, 18, 21, 22, 23, 24, 29, 30, 31], "getconstraints": [16, 21, 24, 31], "consiz": [16, 21, 24, 31], "funconsizesc": [16, 21, 24, 31], "coord": [16, 18, 21, 22, 24, 27, 29, 30, 31], "getnumcoordin": [16, 18, 21, 22, 24, 29, 30, 31], "ncoord": [16, 18, 21, 22, 24, 29, 30, 31], "getnumdesignvar": [16, 18, 21, 22, 24, 27, 29, 30, 31], "ndv": [16, 18, 21, 22, 24, 27, 29, 30, 31], "nnode": [16, 18, 21, 22, 24, 27, 29, 30, 31, 33], "getnumvari": [16, 18, 21, 22, 24, 29, 30, 31], "nstate": [16, 18, 21, 22, 24, 29, 30, 31], "getopt": [16, 17, 18, 20, 21, 22, 23, 24, 27, 29, 30, 31], "vpn": [16, 18, 21, 22, 24, 27, 29, 30, 31], "printdefaultopt": [16, 17, 18, 20, 21, 22, 23, 24, 27, 29, 30, 31], "nice": [16, 17, 18, 20, 21, 22, 23, 24, 27, 29, 30, 31], "stdout": [16, 17, 18, 20, 21, 22, 23, 24, 27, 29, 30, 31], "printmodifiedopt": [16, 17, 18, 20, 21, 22, 23, 24, 27, 29, 30, 31], "tabl": [16, 17, 18, 20, 21, 22, 23, 24, 27, 29, 30, 31], "varnam": [16, 18, 21, 22, 24, 29, 30, 31], "xpt": [16, 18, 21, 22, 24, 27, 29, 30, 31, 33], "setvarnam": [16, 18, 21, 22, 24, 29, 30, 31], "pyopt": [16, 18, 21, 22, 24, 29, 30, 31], "addvargroup": [16, 18, 21, 22, 24, 29, 30, 31], "abstract": 17, "setstatefunc": [17, 23], "resfunc": [17, 23], "statevec": [17, 23], "resvec": [17, 23], "signatur": [17, 20, 23], "alloc": [17, 23], "gethistoryvari": [17, 20, 23], "histori": [17, 20, 23, 27, 29], "logic": [17, 18, 20, 22, 23, 27, 29, 30], "anoth": [17, 20, 23], "boolean": [17, 20, 23], "hasconverg": [17, 20, 23], "converg": [17, 18, 20, 22, 23, 29, 30], "fatalfailur": [17, 20, 23], "meant": [17, 20, 23], "reflect": [17, 20, 23], "fatal": [17, 20, 23], "reset": [17, 18, 20, 22, 23], "iterationcount": [17, 20, 23], "u0": [17, 18, 20, 23], "u": [17, 18, 20, 23, 27, 29, 30, 33], "setconvergencetoler": [17, 20, 23], "abstol": [17, 20, 23], "reltol": [17, 20, 23], "initializesolv": [17, 20, 23], "futur": [17, 20, 23], "setrefnorm": [17, 20, 23], "norm": [17, 18, 20, 22, 23, 29, 30, 33], "setcallback": [17, 20, 23], "monitorvar": [17, 20, 23], "monitor": [17, 20, 23, 29], "nonlinearsolvermonitorvar": [17, 20, 23], "relev": [18, 22, 29, 30], "l2": [18, 22, 29, 30], "rbestiffnessscalefactor": [18, 22, 29, 30], "rbeartificialstiff": [18, 22, 29, 30], "subspaces": [18, 22, 29], "krylov": [18, 22, 29], "nrestart": [18, 22, 29], "suppress": [18, 22, 29, 30], "printtim": [18, 22, 27, 29, 30], "printlevel": [18, 22, 29, 30], "major": [18, 22, 30], "minor": [18, 22, 30], "isnonlinear": [18, 22, 27, 29, 30], "setvalnam": [18, 22], "valnam": [18, 22], "getnumeig": [18, 22], "request": [18, 22, 29, 30], "funcnam": [18, 22, 29, 30], "funchandl": [18, 22, 29, 30], "NOT": [18, 22, 27], "FOR": [18, 22], "evalfunc": [18, 22, 29, 30], "eigsm": [18, 22], "c1_eigsm": [18, 22], "234": [18, 22, 29, 30], "89": [18, 22, 29, 30], "59": [18, 22, 29, 30], "averageload": [18, 29, 30], "throughout": [18, 29, 30, 33], "would": [18, 29, 30], "1d": [18, 29, 30], "numcompid": [18, 29, 30], "uniformli": [18, 29, 30], "evenli": [18, 27, 29, 30], "unit": [18, 29, 30, 33], "necessarili": [18, 29, 30], "interpret": [18, 27, 29, 30], "qdot": [18, 29, 30], "rate": [18, 29, 30, 33], "fx": [18, 29, 30], "fy": [18, 29, 30], "fz": [18, 29, 30], "mx": [18, 29, 30], "my": [18, 29, 30], "mz": [18, 29, 30], "nodeid": [18, 27, 29, 30], "numnodeid": [18, 29, 30], "signal": [18, 27, 29, 30], "addloadtorh": [18, 29, 30], "fappli": [18, 29, 30], "addtractiontocompon": [18, 29, 30], "faceindex": [18, 29, 30], "addtractiontoel": [18, 29, 30], "elemid": [18, 29, 30], "addpressuretocompon": [18, 29, 30], "fuel": [18, 27, 29, 30, 31], "addpressuretoel": [18, 29, 30], "presur": [18, 29, 30], "scalar": [18, 29, 30, 33], "inertiavector": [18, 29, 30], "inerti": [18, 29, 30], "due": [18, 29, 30, 33], "acceler": [18, 29, 30], "entir": [18, 27, 29, 30], "addcentrifugalload": [18, 29, 30], "omegavector": [18, 29, 30], "rotcent": [18, 29, 30], "firstord": [18, 29], "centrifug": [18, 29, 30], "veloc": [18, 29, 30], "rotor": [18, 29, 30], "roll": [18, 29, 30], "aircraft": [18, 29, 30], "rad": [18, 22, 27, 29, 30], "addloadfrombdf": [18, 29, 30], "loadid": [18, 29, 30], "grav": [18, 27, 29, 30], "rforc": [18, 27, 29, 30], "pload2": [18, 27, 29, 30], "pload4": [18, 27, 29, 30], "identif": [18, 29, 30], "zeroload": [18, 29, 30], "fext": [18, 20, 29, 30], "ex": [18, 27, 29], "eigval": [18, 22], "xptsenslist": [18, 29], "dvsenslist": [18, 29], "svsenslist": [18, 29], "intent": [18, 22, 29, 30], "program": [18, 22, 29, 30], "getfunctionkei": [18, 22, 29, 30], "writesensfil": [18, 22, 29, 30], "sen": [18, 22, 29, 30], "tacs_aim": [18, 22, 29, 30], "adjacencyconstraint": [19, 21, 24, 27], "dvconstraint": [19, 27], "panellengthconstraint": [19, 27], "volumeconstraint": [19, 27], "predictor": 20, "corrector": 20, "increment": [20, 27, 29], "extrapol": 20, "equilibrium": 20, "adapt": [20, 23, 29], "achiev": 20, "maxlambda": 20, "coarseabstol": 20, "0001": [20, 23], "larger": [20, 23], "speed": [20, 23], "coarsereltol": 20, "targetit": 20, "30": 20, "initialstep": 20, "minstep": 20, "maxstep": 20, "inf": 20, "minstepfactor": 20, "decreas": [20, 23], "maxstepfactor": 20, "increas": 20, "retractionfactor": 20, "usepredictor": 20, "numpredictorst": 20, "jacfunc": [20, 23], "pcupdatefunc": [20, 23], "linearsolv": [20, 23, 29], "setlambdafunc": 20, "getlambdafunc": 20, "innersolv": [20, 29], "basesolv": 20, "lambda": [20, 33], "newtonsolv": [20, 28, 29], "computeforcevector": 20, "assumpt": 20, "f_int": 20, "f_ext": 20, "fint": [20, 29], "a_0": [21, 27], "dv_0": [21, 27], "a_1": [21, 27], "dv_1": [21, 27], "a_n": [21, 27], "dv_n": [21, 27], "As": [21, 27], "pf_0": 21, "pf_45": 21, "pf_m45": 21, "pf_90": 21, "Or": 21, "blade": [21, 27], "too": [21, 27], "much": 21, "st": 21, "pt": [21, 33], "createdvconstraint": [21, 27], "dvindic": 21, "dvweight": 21, "One": [21, 27], "modal": [22, 27], "createmodalproblem": [22, 27], "squar": [22, 27], "eigenfrequ": 22, "fairli": 23, "critic": [23, 27], "eisenstat": 23, "walker": 23, "variant": 23, "b": [23, 29], "paper": 23, "mo": 23, "liu": 23, "forcefirstit": 23, "even": 23, "divergencetol": 23, "10000000000": 23, "jugd": 23, "diverg": 23, "abslintol": 23, "rellintol": 23, "maxlinit": 23, "useew": 23, "ewmaxtol": 23, "ewgamma": 23, "ewalpha": 23, "618033988749895": 23, "uselinesearch": 23, "printlinesearchit": 23, "skipfirstnlinesearch": 23, "robust": [23, 26], "linesearchmaxit": 23, "linesearch": 23, "linesearchexpecteddecreas": 23, "expens": [23, 29], "linesearchmaxstep": 23, "linesearchminstep": 23, "linesearchmaxstepchang": 23, "secant": 23, "bounc": 23, "linesearchfallbacksteplimit": 23, "merit": 23, "magnitud": 23, "greater": 23, "tri": 23, "meet": 23, "progress": 23, "combat": 23, "limit": 23, "backtrack": 23, "encourag": 23, "faster": 23, "linsolverit": 23, "linsolverr": 23, "linesearchstep": 23, "linesearchit": 23, "choos": 23, "ewtol": 23, "thin": 23, "author": 24, "alasdair": 24, "christison": 24, "grai": 24, "bladestiffenedshel": 24, "createpanellengthconstraint": [24, 27], "325": 24, "1983645": 24, "1415926": 24, "3x": 24, "modalproblem": [25, 27], "bucklingproblem": [25, 27], "offer": 26, "benefit": 26, "pars": [26, 27], "fewer": 26, "keep": 26, "track": 26, "layer": 27, "hook": 27, "nearli": 27, "custom": 27, "deal": 27, "dr": 27, "kenwai": 27, "gkk": 27, "brook": 27, "printdebug": 27, "debug": [27, 29], "infer": 27, "element_non": 27, "scalar_2d_el": 27, "scalar_3d_el": 27, "pcm_element": 27, "writeconnect": 27, "writenod": 27, "writedisplac": 27, "writestrain": 27, "writestress": 27, "writeextra": 27, "writeload": 27, "writecoordinatefram": 27, "familysepar": 27, "famili": 27, "charact": 27, "condens": 27, "linearitytol": 27, "close": [27, 31], "runtim": 27, "conm1": 27, "conm2": 27, "thumb": 27, "equivel": 27, "mat2": 27, "prod": [27, 29], "cquad9": 27, "cbar": 27, "crod": 27, "chexa": 27, "cbush": 27, "desvar": 27, "counterpart": 27, "might": 27, "organ": 27, "space": 27, "wing_spar": 27, "seg": 27, "3600": 27, "3310": 27, "3797": 27, "731": 27, "3798": 27, "732": 27, "3799": 27, "733": 27, "3800": 27, "734": 27, "3801": 27, "735": 27, "3802": 27, "736": 27, "97": 27, "3262": 27, "3882": 27, "782": 27, "3601": 27, "98": 27, "3881": 27, "781": 27, "99": 27, "3875": 27, "3888": 27, "3885": 27, "3874": 27, "3887": 27, "3884": 27, "3892": 27, "3899": 27, "3896": 27, "3891": 27, "102": 27, "3898": 27, "3895": 27, "replac": 27, "referenc": 27, "rod_1": 27, "3320": 27, "rod_2": 27, "6600": 27, "6310": 27, "6320": 27, "hmname": 27, "quot": 27, "hwcolor": 27, "28": 27, "rib2": 27, "29": 27, "scalelist": 27, "tripan": 27, "len": 27, "addglobaldv": 27, "affect": 27, "cleanli": 27, "intern": [27, 29, 31], "worri": 27, "elemcallbackfunct": 27, "unbound": 27, "getglobaldv": 27, "getglobaldvkei": 27, "globaldvkei": 27, "getglobaldvnum": 27, "globaldvnum": 27, "gettotalnumglobaldv": 27, "eid": 27, "dvname": 27, "exclud": [27, 29], "includebound": 27, "includeop": 27, "excludeop": 27, "projectvector": 27, "idea": 27, "ncomp": 27, "subgroup": 27, "oper": [27, 29], "boil": 27, "down": 27, "subset": 27, "attempt": 27, "effici": 27, "simplest": 27, "componentid": 27, "11th": 27, "fifth": 27, "probabl": 27, "advis": 27, "similarli": 27, "except": 27, "subtract": 27, "le_rib": 27, "convex": 27, "hull": 27, "concav": 27, "smaller": 27, "accumul": 27, "skin": 27, "trail": 27, "u_skin": 27, "te_spar": 27, "sort": 27, "alphabet": 27, "sequenti": 27, "includeopt": 27, "AND": 27, "getbdfinfo": 27, "bdfinfo": 27, "getcompnam": 27, "getglobalnodeidsforcomp": 27, "getlocalnodeidsforcomp": 27, "last": 27, "later": [27, 33], "getorigdesignvar": 27, "were": 27, "asbvec": 27, "gettotalnumdesignvar": 27, "getorignod": 27, "getnumownedmultipliernod": 27, "nmultnod": 27, "getlocalmultipliernodeid": 27, "var": [27, 29, 30, 33], "applybcstovec": 27, "setbcsinvec": 27, "identifi": 27, "createtacsprobsfrombdf": 27, "structproblem": 27, "predefin": 27, "tacsproblem": 27, "loadcas": [27, 29], "tload1": 27, "tload2": 27, "dload": 27, "sol": 27, "109": 27, "103": 27, "writebdf": 27, "actual": [27, 29, 30], "manifold": [27, 31], "water": [27, 31], "tight": [27, 31], "enough": [27, 31], "wingbox": [27, 31], "vol_w": [27, 31], "vol_fuel": [27, 31], "continuationsolv": [28, 29], "piec": [29, 30], "nonlinearsolv": 29, "natural_ord": 29, "rcm_order": 29, "nd_order": 29, "tacs_amd_ord": 29, "multicolor_ord": 29, "pcfilllevel": 29, "pcfillratio": 29, "flexibl": [29, 33], "usemonitor": 29, "monitorfrequ": 29, "writenlitersolut": 29, "setloadscal": 29, "getloadscal": 29, "reason": [29, 30], "updatejacobian": 29, "_jacobianupdaterequir": 29, "updateprecondition": 29, "lu": 29, "_preconditionerupdaterequir": 29, "occur": 29, "whenev": 29, "cl_mass": [29, 30], "c1_mass": [29, 30], "adjointlist": 29, "getresidu": 29, "getforc": 29, "externalforcevec": 29, "internalforcevec": 29, "thu": 29, "And": 29, "fi": 29, "bvec": 29, "getjacobian": 29, "scipi": 29, "bsr_matric": 29, "tacsparallelmat": 29, "bsr_matrix": 29, "addtransposejacvecproduct": 29, "solveadjoint": 29, "getoutputfilenam": 29, "count": 29, "extens": 29, "writesolutionhistori": 29, "writeloadtobdf": 29, "loadcaseid": 29, "nastaran": 29, "timeintegr": 30, "integrationord": 30, "march": 30, "jacassemblyfreq": 30, "reassembl": 30, "slice": 30, "getnumtimestag": 30, "stage": 30, "multi": 30, "numstag": 30, "gettimestag": 30, "timestag": 30, "applic": 30, "udotdot": 30, "dvar": 30, "ddvar": 30, "prepiterativesolv": 30, "prepar": 30, "aeroelast": 30, "tightli": 30, "fluid": 30, "outer": 30, "multistag": 30, "numvarspernod": 30, "tighli": 30, "externalcfdsolv": 30, "dstate": 30, "ddstate": 30, "volchecktol": 31, "closur": 31, "volconstraint": 31, "c1_wing": 31, "via": 33, "mathbf": 33, "induc": 33, "exact": 33, "left": 33, "q": 33, "undeform": 33, "tempor": 33, "focu": 33, "dot": 33, "omega": 33, "ddot": 33, "concret": 33, "explan": 33, "_": 33, "m_": 33, "mathbb": 33, "xi": 33, "lagrangian": 33, "dfrac": 33, "dt": 33, "engeri": 33, "sum_": 33, "w_": 33, "t_": 33, "n_": 33, "xi_": 33, "0i": 33, "accur": 33, "predict": 33, "quaternion": 33, "epsilon": 33, "eta": 33, "satisifi": 33, "construct": 33, "ref": 33, "perpendicular": 33, "centerlin": 33, "tangent": 33, "hat": 33, "preserv": 33, "zeta": 33, "bmatrix": 33, "xi_1": 33, "xi_2": 33, "eta_": 33, "ot": 33, "quantiti": 33, "introduc": 33, "systen": 33, "deflect": 33, "never": 33, "approx": 33, "zeroth": 33, "orthogon": 33, "mathcal": 33, "twist": 33, "theta": 33, "invari": 33, "transofrm": 33, "theta_": 33, "caus": 33, "epsilon_": 33, "alpha_": 33, "xx": 33, "xy": 33, "yy": 33, "aris": 33, "kappa_": 33, "penal": 33, "q_": 33, "penalti": 33, "cartesian": 33, "deviat": 33, "k_": 33, "v_": 33, "u_": 33, "suffer": 33, "phenomena": 33, "inabl": 33, "pure": 33, "allevi": 33, "ty": 33, "exhibit": 33, "free": 33, "context": 33, "tild": 33, "green": 33, "longer": 33, "du": 33, "dx": 33, "fg": 33, "dq": 33, "lamb": 33, "xf": 33, "computenodalfram": 33, "const": 33, "tacsscalar": 33, "xd": 33, "interpolatefram": 33, "xdz": 33, "computederiv": 33, "npt": 33, "computedirector": 33, "vars_per_nod": 33, "dir": 33, "computetransform": 33, "curvilinear": 33, "invers": 33, "3x3": 33, "xdinv": 33, "detxd": 33, "inv3x3": 33, "zxdinv": 33, "tmp": 33, "ux0": 33, "ueta": 33, "u0x": 33, "u0d": 33, "matmatmult": 33, "mattransmatmult": 33, "u1x": 33, "u1d": 33, "matmatmultadd": 33}, "objects": {"TACS": [[2, 0, 1, "", "Assembler"], [2, 0, 1, "", "Creator"], [2, 0, 1, "", "Integrator"], [2, 0, 1, "", "MeshLoader"]], "TACS.Assembler": [[2, 1, 1, "", "addAdjointResProducts"], [2, 1, 1, "", "addAdjointResXptSensProducts"], [2, 1, 1, "", "addDVSens"], [2, 1, 1, "", "addJacobianVecProduct"], [2, 1, 1, "", "addMatDVSensInnerProduct"], [2, 1, 1, "", "addSVSens"], [2, 1, 1, "", "addXptSens"], [2, 1, 1, "", "applyBCs"], [2, 1, 1, "", "applyMatBCs"], [2, 1, 1, "", "assembleJacobian"], [2, 1, 1, "", "assembleMatCombo"], [2, 1, 1, "", "assembleMatType"], [2, 1, 1, "", "assembleRes"], [2, 1, 1, "", "computeReordering"], [2, 1, 1, "", "copyVariables"], [2, 1, 1, "", "create"], [2, 1, 1, "", "createDesignVec"], [2, 1, 1, "", "createMat"], [2, 1, 1, "", "createNodeVec"], [2, 1, 1, "", "createSchurMat"], [2, 1, 1, "", "createVec"], [2, 1, 1, "", "evalEnergies"], [2, 1, 1, "", "evalFunctions"], [2, 1, 1, "", "getBcMap"], [2, 1, 1, "", "getDesignVarRange"], [2, 1, 1, "", "getDesignVars"], [2, 1, 1, "", "getElementData"], [2, 1, 1, "", "getElementNodes"], [2, 1, 1, "", "getElements"], [2, 1, 1, "", "getInitConditions"], [2, 1, 1, "", "getMPIComm"], [2, 1, 1, "", "getNodes"], [2, 1, 1, "", "getNumDependentNodes"], [2, 1, 1, "", "getNumElements"], [2, 1, 1, "", "getNumNodes"], [2, 1, 1, "", "getNumOwnedNodes"], [2, 1, 1, "", "getOwnerRange"], [2, 1, 1, "", "getReordering"], [2, 1, 1, "", "getSimulationTime"], [2, 1, 1, "", "getVariables"], [2, 1, 1, "", "getVarsPerNode"], [2, 1, 1, "", "initialize"], [2, 1, 1, "", "reorderVec"], [2, 1, 1, "", "setAuxElements"], [2, 1, 1, "", "setBCValuesFromVec"], [2, 1, 1, "", "setBCs"], [2, 1, 1, "", "setDependentNodes"], [2, 1, 1, "", "setDesignVars"], [2, 1, 1, "", "setElementConnectivity"], [2, 1, 1, "", "setElements"], [2, 1, 1, "", "setInitConditions"], [2, 1, 1, "", "setNodes"], [2, 1, 1, "", "setNumThreads"], [2, 1, 1, "", "setSimulationTime"], [2, 1, 1, "", "setVariables"], [2, 1, 1, "", "testElement"], [2, 1, 1, "", "testFunction"], [2, 1, 1, "", "zeroDDotVariables"], [2, 1, 1, "", "zeroDotVariables"], [2, 1, 1, "", "zeroVariables"]], "TACS.Creator": [[2, 1, 1, "", "getElementPartition"], [2, 1, 1, "", "setBoundaryConditions"], [2, 1, 1, "", "setElements"], [2, 1, 1, "", "setGlobalConnectivity"]], "TACS.Integrator": [[2, 1, 1, "", "checkGradients"], [2, 1, 1, "", "evalFunctions"], [2, 1, 1, "", "getAdjoint"], [2, 1, 1, "", "getGradient"], [2, 1, 1, "", "getNumTimeSteps"], [2, 1, 1, "", "getStates"], [2, 1, 1, "", "getXptGradient"], [2, 1, 1, "", "initAdjoint"], [2, 1, 1, "", "integrate"], [2, 1, 1, "", "integrateAdjoint"], [2, 1, 1, "", "iterate"], [2, 1, 1, "", "iterateAdjoint"], [2, 1, 1, "", "loadStates"], [2, 1, 1, "", "persistStates"], [2, 1, 1, "", "postAdjoint"], [2, 1, 1, "", "setAbsTol"], [2, 1, 1, "", "setFH5"], [2, 1, 1, "", "setFunctions"], [2, 1, 1, "", "setInitNewtonDeltaFraction"], [2, 1, 1, "", "setJacAssemblyFreq"], [2, 1, 1, "", "setKrylovSubspaceMethod"], [2, 1, 1, "", "setMaxNewtonIters"], [2, 1, 1, "", "setOutputFrequency"], [2, 1, 1, "", "setOutputPrefix"], [2, 1, 1, "", "setPrintLevel"], [2, 1, 1, "", "setRelTol"], [2, 1, 1, "", "setTimeInterval"], [2, 1, 1, "", "setUseLapack"], [2, 1, 1, "", "setUseSchurMat"]], "TACS.MeshLoader": [[2, 1, 1, "", "addAuxElement"], [2, 1, 1, "", "addFunctionDomain"], [2, 1, 1, "", "createTACS"], [2, 1, 1, "", "getBCs"], [2, 1, 1, "", "getComponentDescript"], [2, 1, 1, "", "getConnectivity"], [2, 1, 1, "", "getElementDescript"], [2, 1, 1, "", "getNumComponents"], [2, 1, 1, "", "scanBDFFile"], [2, 1, 1, "", "setElement"]], "tacs": [[3, 2, 0, "module-0", "constitutive"], [5, 2, 0, "module-2", "elements"], [6, 2, 0, "-", "functions"], [27, 2, 0, "-", "pytacs"]], "tacs.constitutive": [[3, 0, 1, "", "BasicBeamConstitutive"], [3, 0, 1, "", "BladeStiffenedShellConstitutive"], [3, 0, 1, "", "CompositeShellConstitutive"], [3, 0, 1, "", "DOFSpringConstitutive"], [3, 0, 1, "", "GeneralMassConstitutive"], [3, 0, 1, "", "GeneralSpringConstitutive"], [3, 0, 1, "", "IsoRectangleBeamConstitutive"], [3, 0, 1, "", "IsoShellConstitutive"], [3, 0, 1, "", "IsoTubeBeamConstitutive"], [3, 0, 1, "", "LamParamShellConstitutive"], [3, 0, 1, "", "MaterialProperties"], [3, 0, 1, "", "OrthotropicPly"], [3, 0, 1, "", "PhaseChangeMaterialConstitutive"], [3, 0, 1, "", "PlaneStressConstitutive"], [3, 0, 1, "", "PointMassConstitutive"], [3, 0, 1, "", "ShellConstitutive"], [3, 0, 1, "", "SmearedCompositeShellConstitutive"], [3, 0, 1, "", "SolidConstitutive"]], "tacs.constitutive.BasicBeamConstitutive": [[3, 1, 1, "", "generateBDFCard"]], "tacs.constitutive.BladeStiffenedShellConstitutive": [[3, 1, 1, "", "setKSWeight"], [3, 1, 1, "", "setPanelPlyFractionBounds"], [3, 1, 1, "", "setPanelThicknessBounds"], [3, 1, 1, "", "setStiffenerHeightBounds"], [3, 1, 1, "", "setStiffenerPitchBounds"], [3, 1, 1, "", "setStiffenerPlyFractionBounds"], [3, 1, 1, "", "setStiffenerThicknessBounds"]], "tacs.constitutive.CompositeShellConstitutive": [[3, 1, 1, "", "generateBDFCard"]], "tacs.constitutive.DOFSpringConstitutive": [[3, 1, 1, "", "generateBDFCard"]], "tacs.constitutive.GeneralMassConstitutive": [[3, 1, 1, "", "evalMassMatrix"]], "tacs.constitutive.IsoRectangleBeamConstitutive": [[3, 1, 1, "", "generateBDFCard"]], "tacs.constitutive.IsoShellConstitutive": [[3, 1, 1, "", "generateBDFCard"]], "tacs.constitutive.IsoTubeBeamConstitutive": [[3, 1, 1, "", "generateBDFCard"]], "tacs.constitutive.MaterialProperties": [[3, 1, 1, "", "generateBDFCard"], [3, 1, 1, "", "getMaterialProperties"], [3, 1, 1, "", "getNastranID"], [3, 1, 1, "", "setDensity"], [3, 1, 1, "", "setNastranID"], [3, 1, 1, "", "setSpecificHeat"]], "tacs.constitutive.OrthotropicPly": [[3, 1, 1, "", "getMaterialProperties"]], "tacs.constitutive.ShellConstitutive": [[3, 1, 1, "", "setDrillingRegularization"]], "tacs.constitutive.SmearedCompositeShellConstitutive": [[3, 1, 1, "", "generateBDFCard"]], "tacs.constitutive.SolidConstitutive": [[3, 1, 1, "", "generateBDFCard"]], "tacs.constraints": [[16, 0, 1, "", "AdjacencyConstraint"], [21, 0, 1, "", "DVConstraint"], [24, 0, 1, "", "PanelLengthConstraint"], [31, 0, 1, "", "VolumeConstraint"], [16, 2, 0, "-", "adjacency"], [21, 2, 0, "-", "dv"], [24, 2, 0, "-", "panel_length"], [31, 2, 0, "-", "volume"]], "tacs.constraints.AdjacencyConstraint": [[16, 1, 1, "", "addConstraint"], [16, 3, 1, "", "dtype"], [16, 1, 1, "", "evalConstraints"], [16, 1, 1, "", "evalConstraintsSens"], [16, 1, 1, "", "getConstraintBounds"], [16, 1, 1, "", "getConstraintKeys"], [16, 1, 1, "", "getConstraintSizes"], [16, 1, 1, "", "getDesignVarRange"], [16, 1, 1, "", "getDesignVars"], [16, 1, 1, "", "getNodes"], [16, 1, 1, "", "getNumCoordinates"], [16, 1, 1, "", "getNumDesignVars"], [16, 1, 1, "", "getNumOwnedNodes"], [16, 1, 1, "", "getNumVariables"], [16, 1, 1, "", "getOption"], [16, 1, 1, "", "getVarsPerNode"], [16, 1, 1, "", "printDefaultOptions"], [16, 1, 1, "", "printModifiedOptions"], [16, 1, 1, "", "printOptions"], [16, 1, 1, "", "setDesignVars"], [16, 1, 1, "", "setNodes"], [16, 1, 1, "", "setOption"], [16, 1, 1, "", "setOptions"], [16, 1, 1, "", "setVarName"], [16, 1, 1, "", "writeVisualization"]], "tacs.constraints.DVConstraint": [[21, 1, 1, "", "addConstraint"], [21, 3, 1, "", "dtype"], [21, 1, 1, "", "evalConstraints"], [21, 1, 1, "", "evalConstraintsSens"], [21, 1, 1, "", "getConstraintBounds"], [21, 1, 1, "", "getConstraintKeys"], [21, 1, 1, "", "getConstraintSizes"], [21, 1, 1, "", "getDesignVarRange"], [21, 1, 1, "", "getDesignVars"], [21, 1, 1, "", "getNodes"], [21, 1, 1, "", "getNumCoordinates"], [21, 1, 1, "", "getNumDesignVars"], [21, 1, 1, "", "getNumOwnedNodes"], [21, 1, 1, "", "getNumVariables"], [21, 1, 1, "", "getOption"], [21, 1, 1, "", "getVarsPerNode"], [21, 1, 1, "", "printDefaultOptions"], [21, 1, 1, "", "printModifiedOptions"], [21, 1, 1, "", "printOptions"], [21, 1, 1, "", "setDesignVars"], [21, 1, 1, "", "setNodes"], [21, 1, 1, "", "setOption"], [21, 1, 1, "", "setOptions"], [21, 1, 1, "", "setVarName"]], "tacs.constraints.PanelLengthConstraint": [[24, 1, 1, "", "addConstraint"], [24, 3, 1, "", "dtype"], [24, 1, 1, "", "evalConstraints"], [24, 1, 1, "", "evalConstraintsSens"], [24, 1, 1, "", "getConstraintBounds"], [24, 1, 1, "", "getConstraintKeys"], [24, 1, 1, "", "getConstraintSizes"], [24, 1, 1, "", "getDesignVarRange"], [24, 1, 1, "", "getDesignVars"], [24, 1, 1, "", "getNodes"], [24, 1, 1, "", "getNumCoordinates"], [24, 1, 1, "", "getNumDesignVars"], [24, 1, 1, "", "getNumOwnedNodes"], [24, 1, 1, "", "getNumVariables"], [24, 1, 1, "", "getOption"], [24, 1, 1, "", "getVarsPerNode"], [24, 1, 1, "", "printDefaultOptions"], [24, 1, 1, "", "printModifiedOptions"], [24, 1, 1, "", "printOptions"], [24, 1, 1, "", "setDesignVars"], [24, 1, 1, "", "setNodes"], [24, 1, 1, "", "setOption"], [24, 1, 1, "", "setOptions"], [24, 1, 1, "", "setVarName"]], "tacs.constraints.VolumeConstraint": [[31, 1, 1, "", "addConstraint"], [31, 3, 1, "", "dtype"], [31, 1, 1, "", "evalConstraints"], [31, 1, 1, "", "evalConstraintsSens"], [31, 1, 1, "", "getConstraintBounds"], [31, 1, 1, "", "getConstraintKeys"], [31, 1, 1, "", "getConstraintSizes"], [31, 1, 1, "", "getDesignVarRange"], [31, 1, 1, "", "getDesignVars"], [31, 1, 1, "", "getNodes"], [31, 1, 1, "", "getNumCoordinates"], [31, 1, 1, "", "getNumDesignVars"], [31, 1, 1, "", "getNumOwnedNodes"], [31, 1, 1, "", "getNumVariables"], [31, 1, 1, "", "getOption"], [31, 1, 1, "", "getVarsPerNode"], [31, 1, 1, "", "printDefaultOptions"], [31, 1, 1, "", "printModifiedOptions"], [31, 1, 1, "", "printOptions"], [31, 1, 1, "", "setDesignVars"], [31, 1, 1, "", "setNodes"], [31, 1, 1, "", "setOption"], [31, 1, 1, "", "setOptions"], [31, 1, 1, "", "setVarName"], [31, 1, 1, "", "writeVisualization"]], "tacs.elements": [[5, 0, 1, "", "Beam2"], [5, 0, 1, "", "Beam2ModRot"], [5, 0, 1, "", "Beam3"], [5, 0, 1, "", "Beam3ModRot"], [5, 0, 1, "", "BeamRefAxisTransform"], [5, 0, 1, "", "CubicHexaBasis"], [5, 0, 1, "", "CubicQuadBasis"], [5, 0, 1, "", "CubicTriangleBasis"], [5, 0, 1, "", "Element2D"], [5, 0, 1, "", "Element3D"], [5, 0, 1, "", "HeatConduction2D"], [5, 0, 1, "", "HeatConduction3D"], [5, 0, 1, "", "LinearElasticity2D"], [5, 0, 1, "", "LinearElasticity3D"], [5, 0, 1, "", "LinearHexaBasis"], [5, 0, 1, "", "LinearQuadBasis"], [5, 0, 1, "", "LinearTetrahedralBasis"], [5, 0, 1, "", "LinearThermoelasticity2D"], [5, 0, 1, "", "LinearThermoelasticity3D"], [5, 0, 1, "", "LinearTriangleBasis"], [5, 0, 1, "", "MassElement"], [5, 0, 1, "", "PCMHeatConduction2D"], [5, 0, 1, "", "Quad16NonlinearShell"], [5, 0, 1, "", "Quad16NonlinearThermalShell"], [5, 0, 1, "", "Quad16Shell"], [5, 0, 1, "", "Quad16ThermalShell"], [5, 0, 1, "", "Quad4NonlinearShell"], [5, 0, 1, "", "Quad4NonlinearThermalShell"], [5, 0, 1, "", "Quad4Shell"], [5, 0, 1, "", "Quad4ThermalShell"], [5, 0, 1, "", "Quad9NonlinearShell"], [5, 0, 1, "", "Quad9NonlinearThermalShell"], [5, 0, 1, "", "Quad9Shell"], [5, 0, 1, "", "Quad9ThermalShell"], [5, 0, 1, "", "QuadraticHexaBasis"], [5, 0, 1, "", "QuadraticQuadBasis"], [5, 0, 1, "", "QuadraticTetrahedralBasis"], [5, 0, 1, "", "QuadraticTriangleBasis"], [5, 0, 1, "", "QuarticQuadBasis"], [5, 0, 1, "", "QuinticQuadBasis"], [5, 0, 1, "", "RBE2"], [5, 0, 1, "", "RBE3"], [5, 0, 1, "", "ShellNaturalTransform"], [5, 0, 1, "", "ShellRefAxisTransform"], [5, 0, 1, "", "SpringElement"], [5, 0, 1, "", "SpringIdentityTransform"], [5, 0, 1, "", "SpringRefAxisTransform"], [5, 0, 1, "", "SpringRefFrameTransform"], [5, 0, 1, "", "Tri3NonlinearShell"], [5, 0, 1, "", "Tri3NonlinearThermalShell"], [5, 0, 1, "", "Tri3Shell"], [5, 0, 1, "", "Tri3ThermalShell"]], "tacs.elements.BeamRefAxisTransform": [[5, 1, 1, "", "getRefAxis"]], "tacs.elements.RBE2": [[5, 1, 1, "", "setScalingParameters"]], "tacs.elements.RBE3": [[5, 1, 1, "", "setScalingParameters"]], "tacs.elements.ShellRefAxisTransform": [[5, 1, 1, "", "getRefAxis"]], "tacs.elements.SpringRefAxisTransform": [[5, 1, 1, "", "getRefAxis"]], "tacs.elements.SpringRefFrameTransform": [[5, 1, 1, "", "getRefAxes"]], "tacs.functions": [[6, 0, 1, "", "AverageTemperature"], [6, 0, 1, "", "CenterOfMass"], [6, 0, 1, "", "Compliance"], [6, 0, 1, "", "EnclosedVolume"], [6, 0, 1, "", "KSDisplacement"], [6, 0, 1, "", "KSFailure"], [6, 0, 1, "", "KSTemperature"], [6, 0, 1, "", "MomentOfInertia"], [6, 0, 1, "", "StructuralMass"]], "tacs.functions.Compliance": [[6, 1, 1, "", "setComplianceType"]], "tacs.mphys.builder": [[14, 0, 1, "", "TacsBuilder"]], "tacs.mphys.builder.TacsBuilder": [[14, 1, 1, "", "get_coupling_group_subsystem"], [14, 1, 1, "", "get_dv_bounds"], [14, 1, 1, "", "get_dv_scalers"], [14, 1, 1, "", "get_fea_assembler"], [14, 1, 1, "", "get_initial_dvs"], [14, 1, 1, "", "get_mesh_coordinate_subsystem"], [14, 1, 1, "", "get_ndof"], [14, 1, 1, "", "get_ndv"], [14, 1, 1, "", "get_number_of_nodes"], [14, 1, 1, "", "get_post_coupling_subsystem"], [14, 1, 1, "", "get_pre_coupling_subsystem"], [14, 1, 1, "", "get_solver"], [14, 1, 1, "", "get_tagged_indices"], [14, 1, 1, "", "initialize"]], "tacs.problems": [[18, 0, 1, "", "BucklingProblem"], [22, 0, 1, "", "ModalProblem"], [29, 0, 1, "", "StaticProblem"], [30, 0, 1, "", "TransientProblem"], [18, 2, 0, "-", "buckling"], [22, 2, 0, "-", "modal"], [29, 2, 0, "-", "static"], [30, 2, 0, "-", "transient"]], "tacs.problems.BucklingProblem": [[18, 1, 1, "", "addCentrifugalLoad"], [18, 1, 1, "", "addDVSens"], [18, 1, 1, "", "addFunction"], [18, 1, 1, "", "addInertialLoad"], [18, 1, 1, "", "addLoadFromBDF"], [18, 1, 1, "", "addLoadToComponents"], [18, 1, 1, "", "addLoadToNodes"], [18, 1, 1, "", "addLoadToRHS"], [18, 1, 1, "", "addPressureToComponents"], [18, 1, 1, "", "addPressureToElements"], [18, 1, 1, "", "addTractionToComponents"], [18, 1, 1, "", "addTractionToElements"], [18, 1, 1, "", "addXptSens"], [18, 3, 1, "", "dtype"], [18, 1, 1, "", "evalFunctions"], [18, 1, 1, "", "evalFunctionsSens"], [18, 1, 1, "", "evalSVSens"], [18, 1, 1, "", "getDesignVarRange"], [18, 1, 1, "", "getDesignVars"], [18, 1, 1, "", "getFunctionKeys"], [18, 1, 1, "", "getNodes"], [18, 1, 1, "", "getNumCoordinates"], [18, 1, 1, "", "getNumDesignVars"], [18, 1, 1, "", "getNumEigs"], [18, 1, 1, "", "getNumOwnedNodes"], [18, 1, 1, "", "getNumVariables"], [18, 1, 1, "", "getOption"], [18, 1, 1, "", "getVariables"], [18, 1, 1, "", "getVarsPerNode"], [18, 4, 1, "", "isNonlinear"], [18, 1, 1, "", "printDefaultOptions"], [18, 1, 1, "", "printModifiedOptions"], [18, 1, 1, "", "printOptions"], [18, 1, 1, "", "setDesignVars"], [18, 1, 1, "", "setNodes"], [18, 1, 1, "", "setOption"], [18, 1, 1, "", "setOptions"], [18, 1, 1, "", "setValName"], [18, 1, 1, "", "setVarName"], [18, 1, 1, "", "solve"], [18, 1, 1, "", "writeSensFile"], [18, 1, 1, "", "writeSolution"], [18, 1, 1, "", "zeroLoads"]], "tacs.problems.ModalProblem": [[22, 1, 1, "", "addFunction"], [22, 3, 1, "", "dtype"], [22, 1, 1, "", "evalFunctions"], [22, 1, 1, "", "evalFunctionsSens"], [22, 1, 1, "", "getDesignVarRange"], [22, 1, 1, "", "getDesignVars"], [22, 1, 1, "", "getFunctionKeys"], [22, 1, 1, "", "getNodes"], [22, 1, 1, "", "getNumCoordinates"], [22, 1, 1, "", "getNumDesignVars"], [22, 1, 1, "", "getNumEigs"], [22, 1, 1, "", "getNumOwnedNodes"], [22, 1, 1, "", "getNumVariables"], [22, 1, 1, "", "getOption"], [22, 1, 1, "", "getVariables"], [22, 1, 1, "", "getVarsPerNode"], [22, 4, 1, "", "isNonlinear"], [22, 1, 1, "", "printDefaultOptions"], [22, 1, 1, "", "printModifiedOptions"], [22, 1, 1, "", "printOptions"], [22, 1, 1, "", "setDesignVars"], [22, 1, 1, "", "setNodes"], [22, 1, 1, "", "setOption"], [22, 1, 1, "", "setOptions"], [22, 1, 1, "", "setValName"], [22, 1, 1, "", "setVarName"], [22, 1, 1, "", "solve"], [22, 1, 1, "", "writeSensFile"], [22, 1, 1, "", "writeSolution"]], "tacs.problems.StaticProblem": [[29, 1, 1, "", "addAdjointResProducts"], [29, 1, 1, "", "addAdjointResXptSensProducts"], [29, 1, 1, "", "addCentrifugalLoad"], [29, 1, 1, "", "addDVSens"], [29, 1, 1, "", "addFunction"], [29, 1, 1, "", "addInertialLoad"], [29, 1, 1, "", "addLoadFromBDF"], [29, 1, 1, "", "addLoadToComponents"], [29, 1, 1, "", "addLoadToNodes"], [29, 1, 1, "", "addLoadToRHS"], [29, 1, 1, "", "addPressureToComponents"], [29, 1, 1, "", "addPressureToElements"], [29, 1, 1, "", "addSVSens"], [29, 1, 1, "", "addTractionToComponents"], [29, 1, 1, "", "addTractionToElements"], [29, 1, 1, "", "addTransposeJacVecProduct"], [29, 1, 1, "", "addXptSens"], [29, 3, 1, "", "dtype"], [29, 1, 1, "", "evalFunctions"], [29, 1, 1, "", "evalFunctionsSens"], [29, 1, 1, "", "getDesignVarRange"], [29, 1, 1, "", "getDesignVars"], [29, 1, 1, "", "getForces"], [29, 1, 1, "", "getFunctionKeys"], [29, 1, 1, "", "getJacobian"], [29, 1, 1, "", "getLoadScale"], [29, 1, 1, "", "getNodes"], [29, 1, 1, "", "getNumCoordinates"], [29, 1, 1, "", "getNumDesignVars"], [29, 1, 1, "", "getNumOwnedNodes"], [29, 1, 1, "", "getNumVariables"], [29, 1, 1, "", "getOption"], [29, 1, 1, "", "getOutputFileName"], [29, 1, 1, "", "getResidual"], [29, 1, 1, "", "getVariables"], [29, 1, 1, "", "getVarsPerNode"], [29, 4, 1, "", "isNonlinear"], [29, 4, 1, "", "loadScale"], [29, 1, 1, "", "printDefaultOptions"], [29, 1, 1, "", "printModifiedOptions"], [29, 1, 1, "", "printOptions"], [29, 1, 1, "", "setDesignVars"], [29, 1, 1, "", "setLoadScale"], [29, 1, 1, "", "setNodes"], [29, 1, 1, "", "setOption"], [29, 1, 1, "", "setOptions"], [29, 1, 1, "", "setVarName"], [29, 1, 1, "", "setVariables"], [29, 1, 1, "", "solve"], [29, 1, 1, "", "solveAdjoint"], [29, 1, 1, "", "updateJacobian"], [29, 1, 1, "", "updatePreconditioner"], [29, 1, 1, "", "writeLoadToBDF"], [29, 1, 1, "", "writeSensFile"], [29, 1, 1, "", "writeSolution"], [29, 1, 1, "", "writeSolutionHistory"], [29, 1, 1, "", "zeroLoads"], [29, 1, 1, "", "zeroVariables"]], "tacs.problems.TransientProblem": [[30, 1, 1, "", "addCentrifugalLoad"], [30, 1, 1, "", "addFunction"], [30, 1, 1, "", "addInertialLoad"], [30, 1, 1, "", "addLoadFromBDF"], [30, 1, 1, "", "addLoadToComponents"], [30, 1, 1, "", "addLoadToNodes"], [30, 1, 1, "", "addLoadToRHS"], [30, 1, 1, "", "addPressureToComponents"], [30, 1, 1, "", "addPressureToElements"], [30, 1, 1, "", "addTractionToComponents"], [30, 1, 1, "", "addTractionToElements"], [30, 3, 1, "", "dtype"], [30, 1, 1, "", "evalFunctions"], [30, 1, 1, "", "evalFunctionsSens"], [30, 1, 1, "", "getDesignVarRange"], [30, 1, 1, "", "getDesignVars"], [30, 1, 1, "", "getFunctionKeys"], [30, 1, 1, "", "getNodes"], [30, 1, 1, "", "getNumCoordinates"], [30, 1, 1, "", "getNumDesignVars"], [30, 1, 1, "", "getNumOwnedNodes"], [30, 1, 1, "", "getNumTimeStages"], [30, 1, 1, "", "getNumTimeSteps"], [30, 1, 1, "", "getNumVariables"], [30, 1, 1, "", "getOption"], [30, 1, 1, "", "getTimeStages"], [30, 1, 1, "", "getTimeSteps"], [30, 1, 1, "", "getVariables"], [30, 1, 1, "", "getVarsPerNode"], [30, 4, 1, "", "isNonlinear"], [30, 1, 1, "", "iterate"], [30, 1, 1, "", "prepIterativeSolve"], [30, 1, 1, "", "printDefaultOptions"], [30, 1, 1, "", "printModifiedOptions"], [30, 1, 1, "", "printOptions"], [30, 1, 1, "", "setDesignVars"], [30, 1, 1, "", "setInitConditions"], [30, 1, 1, "", "setNodes"], [30, 1, 1, "", "setOption"], [30, 1, 1, "", "setOptions"], [30, 1, 1, "", "setVarName"], [30, 1, 1, "", "solve"], [30, 1, 1, "", "writeSensFile"], [30, 1, 1, "", "writeSolution"], [30, 1, 1, "", "zeroLoads"]], "tacs.pytacs": [[27, 5, 1, "", "elemCallBack"], [27, 0, 1, "", "pyTACS"]], "tacs.pytacs.pyTACS": [[27, 1, 1, "", "addGlobalDV"], [27, 1, 1, "", "applyBCsToVec"], [27, 1, 1, "", "assignMassDV"], [27, 1, 1, "", "createAdjacencyConstraint"], [27, 1, 1, "", "createBucklingProblem"], [27, 1, 1, "", "createDVConstraint"], [27, 1, 1, "", "createDesignVec"], [27, 1, 1, "", "createModalProblem"], [27, 1, 1, "", "createNodeVec"], [27, 1, 1, "", "createPanelLengthConstraint"], [27, 1, 1, "", "createStaticProblem"], [27, 1, 1, "", "createTACSProbsFromBDF"], [27, 1, 1, "", "createTransientProblem"], [27, 1, 1, "", "createVec"], [27, 1, 1, "", "createVolumeConstraint"], [27, 3, 1, "", "dtype"], [27, 1, 1, "", "getBDFInfo"], [27, 1, 1, "", "getCompNames"], [27, 1, 1, "", "getDesignVarRange"], [27, 1, 1, "", "getGlobalDVKeys"], [27, 1, 1, "", "getGlobalDVNums"], [27, 1, 1, "", "getGlobalDVs"], [27, 1, 1, "", "getGlobalNodeIDsForComps"], [27, 1, 1, "", "getLocalMultiplierNodeIDs"], [27, 1, 1, "", "getLocalNodeIDsForComps"], [27, 1, 1, "", "getNumComponents"], [27, 1, 1, "", "getNumDesignVars"], [27, 1, 1, "", "getNumOwnedMultiplierNodes"], [27, 1, 1, "", "getNumOwnedNodes"], [27, 1, 1, "", "getOption"], [27, 1, 1, "", "getOrigDesignVars"], [27, 1, 1, "", "getOrigNodes"], [27, 1, 1, "", "getTotalNumDesignVars"], [27, 1, 1, "", "getTotalNumGlobalDVs"], [27, 1, 1, "", "getVarsPerNode"], [27, 1, 1, "", "initialize"], [27, 4, 1, "", "isNonlinear"], [27, 1, 1, "", "printDefaultOptions"], [27, 1, 1, "", "printModifiedOptions"], [27, 1, 1, "", "printOptions"], [27, 1, 1, "", "selectCompIDs"], [27, 1, 1, "", "setBCsInVec"], [27, 1, 1, "", "setOption"], [27, 1, 1, "", "setOptions"], [27, 1, 1, "", "writeBDF"]], "tacs.solvers": [[17, 0, 1, "", "BaseSolver"], [20, 0, 1, "", "ContinuationSolver"], [23, 0, 1, "", "NewtonSolver"], [17, 2, 0, "-", "base"], [20, 2, 0, "-", "continuation"], [23, 2, 0, "-", "newton"]], "tacs.solvers.BaseSolver": [[17, 3, 1, "", "dtype"], [17, 4, 1, "", "fatalFailure"], [17, 1, 1, "", "getHistoryVariables"], [17, 1, 1, "", "getOption"], [17, 4, 1, "", "hasConverged"], [17, 1, 1, "", "initializeSolve"], [17, 4, 1, "", "iterationCount"], [17, 1, 1, "", "printDefaultOptions"], [17, 1, 1, "", "printModifiedOptions"], [17, 1, 1, "", "printOptions"], [17, 1, 1, "", "reset"], [17, 1, 1, "", "setCallback"], [17, 1, 1, "", "setConvergenceTolerance"], [17, 1, 1, "", "setOption"], [17, 1, 1, "", "setOptions"], [17, 1, 1, "", "setRefNorm"], [17, 1, 1, "", "solve"]], "tacs.solvers.ContinuationSolver": [[20, 1, 1, "", "computeForceVectors"], [20, 3, 1, "", "dtype"], [20, 4, 1, "", "fatalFailure"], [20, 1, 1, "", "getHistoryVariables"], [20, 1, 1, "", "getOption"], [20, 4, 1, "", "hasConverged"], [20, 1, 1, "", "initializeSolve"], [20, 4, 1, "", "iterationCount"], [20, 1, 1, "", "printDefaultOptions"], [20, 1, 1, "", "printModifiedOptions"], [20, 1, 1, "", "printOptions"], [20, 1, 1, "", "reset"], [20, 1, 1, "", "setCallback"], [20, 1, 1, "", "setConvergenceTolerance"], [20, 1, 1, "", "setOption"], [20, 1, 1, "", "setOptions"], [20, 1, 1, "", "setRefNorm"], [20, 1, 1, "", "solve"]], "tacs.solvers.NewtonSolver": [[23, 3, 1, "", "dtype"], [23, 4, 1, "", "fatalFailure"], [23, 1, 1, "", "getHistoryVariables"], [23, 1, 1, "", "getOption"], [23, 4, 1, "", "hasConverged"], [23, 1, 1, "", "initializeSolve"], [23, 4, 1, "", "iterationCount"], [23, 1, 1, "", "printDefaultOptions"], [23, 1, 1, "", "printModifiedOptions"], [23, 1, 1, "", "printOptions"], [23, 1, 1, "", "reset"], [23, 1, 1, "", "setCallback"], [23, 1, 1, "", "setConvergenceTolerance"], [23, 1, 1, "", "setOption"], [23, 1, 1, "", "setOptions"], [23, 1, 1, "", "setRefNorm"], [23, 1, 1, "", "solve"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:module", "3": "py:attribute", "4": "py:property", "5": "py:function"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "module", "Python module"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "property", "Python property"], "5": ["py", "function", "Python function"]}, "titleterms": {"caps2tac": 0, "instal": [1, 12], "esp": 1, "cap": 1, "intro": 1, "exampl": [1, 11], "test": 1, "direct": 2, "workflow": [2, 26], "assembl": 2, "meshload": 2, "creator": 2, "frequencyanalysi": 2, "integr": 2, "constitut": [3, 33], "modul": [3, 4, 5, 6], "materi": 3, "class": [3, 5, 14, 17, 19, 25, 27, 28], "core": 4, "element": [5, 33], "basi": [5, 33], "model": 5, "transform": [5, 33], "function": 6, "beam": [7, 33], "optim": [7, 8], "mphy": [7, 15], "crm": 8, "plate": 9, "under": 9, "static": 9, "load": 9, "batteri": 10, "pack": 10, "dure": 10, "thermal": [10, 33], "runawai": 10, "tac": [11, 12, 17, 20, 23, 33], "overview": 11, "get": 11, "start": 11, "refer": [11, 14, 16, 17, 18, 20, 21, 22, 23, 24, 27, 29, 30, 31, 33], "indic": 11, "tabl": 11, "from": 12, "anaconda": 12, "sourc": 12, "prerequisit": 12, "basic": 12, "step": 12, "compil": 12, "detail": 12, "instruct": 12, "check": 12, "out": 12, "code": 12, "depend": 12, "make": 12, "c": 12, "librari": 12, "postprocess": 12, "tool": 12, "python": 12, "interfac": [12, 13], "tacsbuild": 14, "api": [14, 16, 17, 18, 20, 21, 22, 23, 24, 27, 29, 30, 31], "adjacencyconstraint": 16, "option": [16, 18, 20, 22, 23, 27, 29, 30, 31], "basesolv": 17, "base": 17, "solver": [17, 20, 23, 28, 29], "bucklingproblem": 18, "constraint": 19, "continuationsolv": 20, "nonlinear": [20, 23, 29], "continu": 20, "dvconstraint": 21, "modalproblem": 22, "newtonsolv": 23, "newton": 23, "panellengthconstraint": 24, "problem": 25, "pytac": [26, 27], "initi": 27, "elemcallback": 27, "without": 27, "tag": 27, "compon": [27, 33], "group": 27, "bdf": 27, "icem": 27, "label": 27, "format": 27, "femap": 27, "patran": 27, "hypermesh": 27, "staticproblem": 29, "transientproblem": 30, "volumeconstraint": 31, "shell": 33, "director": 33, "parametr": 33, "volum": 33, "displac": 33, "local": 33, "attach": 33, "frame": 33, "axi": 33, "project": 33, "natur": 33, "strain": 33, "express": 33, "formul": 33, "drill": 33, "rotat": 33, "mix": 33, "interpol": 33, "tensori": 33, "relationship": 33, "equat": 33, "motion": 33, "implement": 33, "field": 33, "comput": 33, "theori": 34}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 58}, "alltitles": {"caps2tacs": [[0, "caps2tacs"]], "Installation of ESP/CAPS": [[1, "installation-of-esp-caps"]], "Intro": [[1, "intro"]], "Examples": [[1, "examples"], [11, "examples"]], "Testing": [[1, "testing"]], "Direct": [[2, "direct"]], "Workflow": [[2, "workflow"], [26, "workflow"]], "Assembler": [[2, "assembler"]], "MeshLoader": [[2, "meshloader"]], "Creator": [[2, "creator"]], "FrequencyAnalysis": [[2, "frequencyanalysis"]], "Integrator": [[2, "integrator"]], "constitutive module": [[3, "constitutive-module"]], "Material classes": [[3, "material-classes"]], "Constitutive classes": [[3, "constitutive-classes"]], "Core modules": [[4, "core-modules"]], "elements module": [[5, "elements-module"]], "Basis classes": [[5, "basis-classes"]], "Model classes": [[5, "model-classes"]], "Transform classes": [[5, "transform-classes"]], "Element classes": [[5, "element-classes"]], "functions module": [[6, "functions-module"]], "Beam optimization with MPhys": [[7, "beam-optimization-with-mphys"]], "CRM Optimization": [[8, "crm-optimization"]], "Plate under static load": [[9, "plate-under-static-load"]], "Battery pack during thermal runaway": [[10, "battery-pack-during-thermal-runaway"]], "TACS Overview": [[11, "tacs-overview"]], "Getting Started": [[11, "getting-started"]], "References": [[11, "references"]], "Indices and tables": [[11, "indices-and-tables"]], "Install": [[12, "install"]], "From Anaconda": [[12, "from-anaconda"]], "From source": [[12, "from-source"]], "Prerequisites": [[12, "prerequisites"]], "Basic steps to compile TACS": [[12, "basic-steps-to-compile-tacs"]], "Detailed installation instructions": [[12, "detailed-installation-instructions"]], "Checking out the code": [[12, "checking-out-the-code"]], "Install dependencies": [[12, "install-dependencies"]], "Make the C++ TACS library": [[12, "make-the-c-tacs-library"]], "Install postprocessing tools": [[12, "install-postprocessing-tools"]], "Installing the python interface": [[12, "installing-the-python-interface"]], "Interfaces": [[13, "interfaces"]], "TacsBuilder class": [[14, "tacsbuilder-class"]], "API Reference": [[14, "api-reference"], [16, "api-reference"], [17, "api-reference"], [18, "api-reference"], [20, "api-reference"], [21, "api-reference"], [22, "api-reference"], [23, "api-reference"], [24, "api-reference"], [27, "api-reference"], [29, "api-reference"], [30, "api-reference"], [31, "api-reference"]], "MPhys": [[15, "mphys"]], "AdjacencyConstraint": [[16, "module-tacs.constraints.adjacency"]], "Options": [[16, "options"], [18, "options"], [20, "options"], [22, "options"], [23, "options"], [27, "options"], [29, "options"], [30, "options"], [31, "options"]], "BaseSolver": [[17, "module-tacs.solvers.base"]], "TACS: Base Solver Class": [[17, "tacs-base-solver-class"]], "BucklingProblem": [[18, "module-tacs.problems.buckling"]], "Constraint classes": [[19, "constraint-classes"]], "ContinuationSolver": [[20, "module-tacs.solvers.continuation"]], "TACS Nonlinear Continuation Solver": [[20, "tacs-nonlinear-continuation-solver"]], "DVConstraint": [[21, "module-tacs.constraints.dv"]], "ModalProblem": [[22, "module-tacs.problems.modal"]], "NewtonSolver": [[23, "module-tacs.solvers.newton"]], "TACS Nonlinear Newton Solver": [[23, "tacs-nonlinear-newton-solver"]], "PanelLengthConstraint": [[24, "module-tacs.constraints.panel_length"]], "Problem classes": [[25, "problem-classes"]], "pyTACS": [[26, "pytacs"]], "pyTACS class": [[27, "module-tacs.pytacs"]], "Initializing": [[27, "initializing"]], "Initializing with elemCallBack": [[27, "initializing-with-elemcallback"]], "Initializing without elemCallBack": [[27, "initializing-without-elemcallback"]], "Tagging component groups in BDF": [[27, "tagging-component-groups-in-bdf"]], "ICEM component label format": [[27, "icem-component-label-format"]], "FEMAP component label format": [[27, "femap-component-label-format"]], "Patran component label format": [[27, "patran-component-label-format"]], "HyperMesh component label format": [[27, "hypermesh-component-label-format"]], "Solver classes": [[28, "solver-classes"]], "StaticProblem": [[29, "module-tacs.problems.static"]], "Nonlinear solvers": [[29, "nonlinear-solvers"]], "TransientProblem": [[30, "module-tacs.problems.transient"]], "VolumeConstraint": [[31, "module-tacs.constraints.volume"]], "Beam and shell elements in TACS": [[33, "beam-and-shell-elements-in-tacs"]], "Director parametrization": [[33, "director-parametrization"]], "Beam volume parametrization": [[33, "beam-volume-parametrization"]], "Shell volume parametrization": [[33, "shell-volume-parametrization"]], "Displacement parametrization": [[33, "displacement-parametrization"]], "Transformation to local shell-attached frame": [[33, "transformation-to-local-shell-attached-frame"]], "Reference axis projection transform": [[33, "reference-axis-projection-transform"]], "Natural transform": [[33, "natural-transform"]], "Strain expressions": [[33, "strain-expressions"]], "Thermal strain formulation": [[33, "thermal-strain-formulation"]], "Drilling rotation": [[33, "drilling-rotation"]], "Mixed Interpolation of Tensorial Components": [[33, "mixed-interpolation-of-tensorial-components"]], "Constitutive relationships for the shell element": [[33, "constitutive-relationships-for-the-shell-element"]], "Equations of motion": [[33, "equations-of-motion"]], "Director implementation": [[33, "director-implementation"]], "Beam element implementation": [[33, "beam-element-implementation"]], "Shell element implementation": [[33, "shell-element-implementation"]], "Shell element basis": [[33, "shell-element-basis"]], "Director field parametrization": [[33, "director-field-parametrization"]], "Transformation": [[33, "transformation"]], "Strain computation": [[33, "strain-computation"]], "Theory": [[34, "theory"]]}, "indexentries": {"assembler (class in tacs)": [[2, "TACS.Assembler"]], "creator (class in tacs)": [[2, "TACS.Creator"]], "integrator (class in tacs)": [[2, "TACS.Integrator"]], "meshloader (class in tacs)": [[2, "TACS.MeshLoader"]], "addadjointresproducts() (tacs.assembler method)": [[2, "TACS.Assembler.addAdjointResProducts"]], "addadjointresxptsensproducts() (tacs.assembler method)": [[2, "TACS.Assembler.addAdjointResXptSensProducts"]], "addauxelement() (tacs.meshloader method)": [[2, "TACS.MeshLoader.addAuxElement"]], "adddvsens() (tacs.assembler method)": [[2, "TACS.Assembler.addDVSens"]], "addfunctiondomain() (tacs.meshloader method)": [[2, "TACS.MeshLoader.addFunctionDomain"]], "addjacobianvecproduct() (tacs.assembler method)": [[2, "TACS.Assembler.addJacobianVecProduct"]], "addmatdvsensinnerproduct() (tacs.assembler method)": [[2, "TACS.Assembler.addMatDVSensInnerProduct"]], "addsvsens() (tacs.assembler method)": [[2, "TACS.Assembler.addSVSens"]], "addxptsens() (tacs.assembler method)": [[2, "TACS.Assembler.addXptSens"]], "applybcs() (tacs.assembler method)": [[2, "TACS.Assembler.applyBCs"]], "applymatbcs() (tacs.assembler method)": [[2, "TACS.Assembler.applyMatBCs"]], "assemblejacobian() (tacs.assembler method)": [[2, "TACS.Assembler.assembleJacobian"]], "assemblematcombo() (tacs.assembler method)": [[2, "TACS.Assembler.assembleMatCombo"]], "assemblemattype() (tacs.assembler method)": [[2, "TACS.Assembler.assembleMatType"]], "assembleres() (tacs.assembler method)": [[2, "TACS.Assembler.assembleRes"]], "checkgradients() (tacs.integrator method)": [[2, "TACS.Integrator.checkGradients"]], "computereordering() (tacs.assembler method)": [[2, "TACS.Assembler.computeReordering"]], "copyvariables() (tacs.assembler method)": [[2, "TACS.Assembler.copyVariables"]], "create() (tacs.assembler static method)": [[2, "TACS.Assembler.create"]], "createdesignvec() (tacs.assembler method)": [[2, "TACS.Assembler.createDesignVec"]], "createmat() (tacs.assembler method)": [[2, "TACS.Assembler.createMat"]], "createnodevec() (tacs.assembler method)": [[2, "TACS.Assembler.createNodeVec"]], "createschurmat() (tacs.assembler method)": [[2, "TACS.Assembler.createSchurMat"]], "createtacs() (tacs.meshloader method)": [[2, "TACS.MeshLoader.createTACS"]], "createvec() (tacs.assembler method)": [[2, "TACS.Assembler.createVec"]], "evalenergies() (tacs.assembler method)": [[2, "TACS.Assembler.evalEnergies"]], "evalfunctions() (tacs.assembler method)": [[2, "TACS.Assembler.evalFunctions"]], "evalfunctions() (tacs.integrator method)": [[2, "TACS.Integrator.evalFunctions"]], "getadjoint() (tacs.integrator method)": [[2, "TACS.Integrator.getAdjoint"]], "getbcs() (tacs.meshloader method)": [[2, "TACS.MeshLoader.getBCs"]], "getbcmap() (tacs.assembler method)": [[2, "TACS.Assembler.getBcMap"]], "getcomponentdescript() (tacs.meshloader method)": [[2, "TACS.MeshLoader.getComponentDescript"]], "getconnectivity() (tacs.meshloader method)": [[2, "TACS.MeshLoader.getConnectivity"]], "getdesignvarrange() (tacs.assembler method)": [[2, "TACS.Assembler.getDesignVarRange"]], "getdesignvars() (tacs.assembler method)": [[2, "TACS.Assembler.getDesignVars"]], "getelementdata() (tacs.assembler method)": [[2, "TACS.Assembler.getElementData"]], "getelementdescript() (tacs.meshloader method)": [[2, "TACS.MeshLoader.getElementDescript"]], "getelementnodes() (tacs.assembler method)": [[2, "TACS.Assembler.getElementNodes"]], "getelementpartition() (tacs.creator method)": [[2, "TACS.Creator.getElementPartition"]], "getelements() (tacs.assembler method)": [[2, "TACS.Assembler.getElements"]], "getgradient() (tacs.integrator method)": [[2, "TACS.Integrator.getGradient"]], "getinitconditions() (tacs.assembler method)": [[2, "TACS.Assembler.getInitConditions"]], "getmpicomm() (tacs.assembler method)": [[2, "TACS.Assembler.getMPIComm"]], "getnodes() (tacs.assembler method)": [[2, "TACS.Assembler.getNodes"]], "getnumcomponents() (tacs.meshloader method)": [[2, "TACS.MeshLoader.getNumComponents"]], "getnumdependentnodes() (tacs.assembler method)": [[2, "TACS.Assembler.getNumDependentNodes"]], "getnumelements() (tacs.assembler method)": [[2, "TACS.Assembler.getNumElements"]], "getnumnodes() (tacs.assembler method)": [[2, "TACS.Assembler.getNumNodes"]], "getnumownednodes() (tacs.assembler method)": [[2, "TACS.Assembler.getNumOwnedNodes"]], "getnumtimesteps() (tacs.integrator method)": [[2, "TACS.Integrator.getNumTimeSteps"]], "getownerrange() (tacs.assembler method)": [[2, "TACS.Assembler.getOwnerRange"]], "getreordering() (tacs.assembler method)": [[2, "TACS.Assembler.getReordering"]], "getsimulationtime() (tacs.assembler method)": [[2, "TACS.Assembler.getSimulationTime"]], "getstates() (tacs.integrator method)": [[2, "TACS.Integrator.getStates"]], "getvariables() (tacs.assembler method)": [[2, "TACS.Assembler.getVariables"]], "getvarspernode() (tacs.assembler method)": [[2, "TACS.Assembler.getVarsPerNode"]], "getxptgradient() (tacs.integrator method)": [[2, "TACS.Integrator.getXptGradient"]], "initadjoint() (tacs.integrator method)": [[2, "TACS.Integrator.initAdjoint"]], "initialize() (tacs.assembler method)": [[2, "TACS.Assembler.initialize"]], "integrate() (tacs.integrator method)": [[2, "TACS.Integrator.integrate"]], "integrateadjoint() (tacs.integrator method)": [[2, "TACS.Integrator.integrateAdjoint"]], "iterate() (tacs.integrator method)": [[2, "TACS.Integrator.iterate"]], "iterateadjoint() (tacs.integrator method)": [[2, "TACS.Integrator.iterateAdjoint"]], "loadstates() (tacs.integrator method)": [[2, "TACS.Integrator.loadStates"]], "persiststates() (tacs.integrator method)": [[2, "TACS.Integrator.persistStates"]], "postadjoint() (tacs.integrator method)": [[2, "TACS.Integrator.postAdjoint"]], "reordervec() (tacs.assembler method)": [[2, "TACS.Assembler.reorderVec"]], "scanbdffile() (tacs.meshloader method)": [[2, "TACS.MeshLoader.scanBDFFile"]], "setabstol() (tacs.integrator method)": [[2, "TACS.Integrator.setAbsTol"]], "setauxelements() (tacs.assembler method)": [[2, "TACS.Assembler.setAuxElements"]], "setbcvaluesfromvec() (tacs.assembler method)": [[2, "TACS.Assembler.setBCValuesFromVec"]], "setbcs() (tacs.assembler method)": [[2, "TACS.Assembler.setBCs"]], "setboundaryconditions() (tacs.creator method)": [[2, "TACS.Creator.setBoundaryConditions"]], "setdependentnodes() (tacs.assembler method)": [[2, "TACS.Assembler.setDependentNodes"]], "setdesignvars() (tacs.assembler method)": [[2, "TACS.Assembler.setDesignVars"]], "setelement() (tacs.meshloader method)": [[2, "TACS.MeshLoader.setElement"]], "setelementconnectivity() (tacs.assembler method)": [[2, "TACS.Assembler.setElementConnectivity"]], "setelements() (tacs.assembler method)": [[2, "TACS.Assembler.setElements"]], "setelements() (tacs.creator method)": [[2, "TACS.Creator.setElements"]], "setfh5() (tacs.integrator method)": [[2, "TACS.Integrator.setFH5"]], "setfunctions() (tacs.integrator method)": [[2, "TACS.Integrator.setFunctions"]], "setglobalconnectivity() (tacs.creator method)": [[2, "TACS.Creator.setGlobalConnectivity"]], "setinitconditions() (tacs.assembler method)": [[2, "TACS.Assembler.setInitConditions"]], "setinitnewtondeltafraction() (tacs.integrator method)": [[2, "TACS.Integrator.setInitNewtonDeltaFraction"]], "setjacassemblyfreq() (tacs.integrator method)": [[2, "TACS.Integrator.setJacAssemblyFreq"]], "setkrylovsubspacemethod() (tacs.integrator method)": [[2, "TACS.Integrator.setKrylovSubspaceMethod"]], "setmaxnewtoniters() (tacs.integrator method)": [[2, "TACS.Integrator.setMaxNewtonIters"]], "setnodes() (tacs.assembler method)": [[2, "TACS.Assembler.setNodes"]], "setnumthreads() (tacs.assembler method)": [[2, "TACS.Assembler.setNumThreads"]], "setoutputfrequency() (tacs.integrator method)": [[2, "TACS.Integrator.setOutputFrequency"]], "setoutputprefix() (tacs.integrator method)": [[2, "TACS.Integrator.setOutputPrefix"]], "setprintlevel() (tacs.integrator method)": [[2, "TACS.Integrator.setPrintLevel"]], "setreltol() (tacs.integrator method)": [[2, "TACS.Integrator.setRelTol"]], "setsimulationtime() (tacs.assembler method)": [[2, "TACS.Assembler.setSimulationTime"]], "settimeinterval() (tacs.integrator method)": [[2, "TACS.Integrator.setTimeInterval"]], "setuselapack() (tacs.integrator method)": [[2, "TACS.Integrator.setUseLapack"]], "setuseschurmat() (tacs.integrator method)": [[2, "TACS.Integrator.setUseSchurMat"]], "setvariables() (tacs.assembler method)": [[2, "TACS.Assembler.setVariables"]], "testelement() (tacs.assembler method)": [[2, "TACS.Assembler.testElement"]], "testfunction() (tacs.assembler method)": [[2, "TACS.Assembler.testFunction"]], "zeroddotvariables() (tacs.assembler method)": [[2, "TACS.Assembler.zeroDDotVariables"]], "zerodotvariables() (tacs.assembler method)": [[2, "TACS.Assembler.zeroDotVariables"]], "zerovariables() (tacs.assembler method)": [[2, "TACS.Assembler.zeroVariables"]], "basicbeamconstitutive (class in tacs.constitutive)": [[3, "tacs.constitutive.BasicBeamConstitutive"]], "bladestiffenedshellconstitutive (class in tacs.constitutive)": [[3, "tacs.constitutive.BladeStiffenedShellConstitutive"]], "compositeshellconstitutive (class in tacs.constitutive)": [[3, "tacs.constitutive.CompositeShellConstitutive"]], "dofspringconstitutive (class in tacs.constitutive)": [[3, "tacs.constitutive.DOFSpringConstitutive"]], "generalmassconstitutive (class in tacs.constitutive)": [[3, "tacs.constitutive.GeneralMassConstitutive"]], "generalspringconstitutive (class in tacs.constitutive)": [[3, "tacs.constitutive.GeneralSpringConstitutive"]], "isorectanglebeamconstitutive (class in tacs.constitutive)": [[3, "tacs.constitutive.IsoRectangleBeamConstitutive"]], "isoshellconstitutive (class in tacs.constitutive)": [[3, "tacs.constitutive.IsoShellConstitutive"]], "isotubebeamconstitutive (class in tacs.constitutive)": [[3, "tacs.constitutive.IsoTubeBeamConstitutive"]], "lamparamshellconstitutive (class in tacs.constitutive)": [[3, "tacs.constitutive.LamParamShellConstitutive"]], "materialproperties (class in tacs.constitutive)": [[3, "tacs.constitutive.MaterialProperties"]], "orthotropicply (class in tacs.constitutive)": [[3, "tacs.constitutive.OrthotropicPly"]], "phasechangematerialconstitutive (class in tacs.constitutive)": [[3, "tacs.constitutive.PhaseChangeMaterialConstitutive"]], "planestressconstitutive (class in tacs.constitutive)": [[3, "tacs.constitutive.PlaneStressConstitutive"]], "pointmassconstitutive (class in tacs.constitutive)": [[3, "tacs.constitutive.PointMassConstitutive"]], "shellconstitutive (class in tacs.constitutive)": [[3, "tacs.constitutive.ShellConstitutive"]], "smearedcompositeshellconstitutive (class in tacs.constitutive)": [[3, "tacs.constitutive.SmearedCompositeShellConstitutive"]], "solidconstitutive (class in tacs.constitutive)": [[3, "tacs.constitutive.SolidConstitutive"]], "evalmassmatrix() (tacs.constitutive.generalmassconstitutive method)": [[3, "tacs.constitutive.GeneralMassConstitutive.evalMassMatrix"]], "generatebdfcard() (tacs.constitutive.basicbeamconstitutive method)": [[3, "tacs.constitutive.BasicBeamConstitutive.generateBDFCard"]], "generatebdfcard() (tacs.constitutive.compositeshellconstitutive method)": [[3, "tacs.constitutive.CompositeShellConstitutive.generateBDFCard"]], "generatebdfcard() (tacs.constitutive.dofspringconstitutive method)": [[3, "tacs.constitutive.DOFSpringConstitutive.generateBDFCard"]], "generatebdfcard() (tacs.constitutive.isorectanglebeamconstitutive method)": [[3, "tacs.constitutive.IsoRectangleBeamConstitutive.generateBDFCard"]], "generatebdfcard() (tacs.constitutive.isoshellconstitutive method)": [[3, "tacs.constitutive.IsoShellConstitutive.generateBDFCard"]], "generatebdfcard() (tacs.constitutive.isotubebeamconstitutive method)": [[3, "tacs.constitutive.IsoTubeBeamConstitutive.generateBDFCard"]], "generatebdfcard() (tacs.constitutive.materialproperties method)": [[3, "tacs.constitutive.MaterialProperties.generateBDFCard"]], "generatebdfcard() (tacs.constitutive.smearedcompositeshellconstitutive method)": [[3, "tacs.constitutive.SmearedCompositeShellConstitutive.generateBDFCard"]], "generatebdfcard() (tacs.constitutive.solidconstitutive method)": [[3, "tacs.constitutive.SolidConstitutive.generateBDFCard"]], "getmaterialproperties() (tacs.constitutive.materialproperties method)": [[3, "tacs.constitutive.MaterialProperties.getMaterialProperties"]], "getmaterialproperties() (tacs.constitutive.orthotropicply method)": [[3, "tacs.constitutive.OrthotropicPly.getMaterialProperties"]], "getnastranid() (tacs.constitutive.materialproperties method)": [[3, "tacs.constitutive.MaterialProperties.getNastranID"]], "module": [[3, "module-0"], [3, "module-tacs.constitutive"], [5, "module-0"], [5, "module-1"], [5, "module-2"], [5, "module-tacs.elements"], [6, "module-tacs.functions"], [16, "module-tacs.constraints.adjacency"], [17, "module-tacs.solvers.base"], [18, "module-tacs.problems.buckling"], [20, "module-tacs.solvers.continuation"], [21, "module-tacs.constraints.dv"], [22, "module-tacs.problems.modal"], [23, "module-tacs.solvers.newton"], [24, "module-tacs.constraints.panel_length"], [27, "module-tacs.pytacs"], [29, "module-tacs.problems.static"], [30, "module-tacs.problems.transient"], [31, "module-tacs.constraints.volume"]], "setdensity() (tacs.constitutive.materialproperties method)": [[3, "tacs.constitutive.MaterialProperties.setDensity"]], "setdrillingregularization() (tacs.constitutive.shellconstitutive method)": [[3, "tacs.constitutive.ShellConstitutive.setDrillingRegularization"]], "setksweight() (tacs.constitutive.bladestiffenedshellconstitutive method)": [[3, "tacs.constitutive.BladeStiffenedShellConstitutive.setKSWeight"]], "setnastranid() (tacs.constitutive.materialproperties method)": [[3, "tacs.constitutive.MaterialProperties.setNastranID"]], "setpanelplyfractionbounds() (tacs.constitutive.bladestiffenedshellconstitutive method)": [[3, "tacs.constitutive.BladeStiffenedShellConstitutive.setPanelPlyFractionBounds"]], "setpanelthicknessbounds() (tacs.constitutive.bladestiffenedshellconstitutive method)": [[3, "tacs.constitutive.BladeStiffenedShellConstitutive.setPanelThicknessBounds"]], "setspecificheat() (tacs.constitutive.materialproperties method)": [[3, "tacs.constitutive.MaterialProperties.setSpecificHeat"]], "setstiffenerheightbounds() (tacs.constitutive.bladestiffenedshellconstitutive method)": [[3, "tacs.constitutive.BladeStiffenedShellConstitutive.setStiffenerHeightBounds"]], "setstiffenerpitchbounds() (tacs.constitutive.bladestiffenedshellconstitutive method)": [[3, "tacs.constitutive.BladeStiffenedShellConstitutive.setStiffenerPitchBounds"]], "setstiffenerplyfractionbounds() (tacs.constitutive.bladestiffenedshellconstitutive method)": [[3, "tacs.constitutive.BladeStiffenedShellConstitutive.setStiffenerPlyFractionBounds"]], "setstiffenerthicknessbounds() (tacs.constitutive.bladestiffenedshellconstitutive method)": [[3, "tacs.constitutive.BladeStiffenedShellConstitutive.setStiffenerThicknessBounds"]], "tacs.constitutive": [[3, "module-0"], [3, "module-tacs.constitutive"]], "beam2 (class in tacs.elements)": [[5, "tacs.elements.Beam2"]], "beam2modrot (class in tacs.elements)": [[5, "tacs.elements.Beam2ModRot"]], "beam3 (class in tacs.elements)": [[5, "tacs.elements.Beam3"]], "beam3modrot (class in tacs.elements)": [[5, "tacs.elements.Beam3ModRot"]], "beamrefaxistransform (class in tacs.elements)": [[5, "tacs.elements.BeamRefAxisTransform"]], "cubichexabasis (class in tacs.elements)": [[5, "tacs.elements.CubicHexaBasis"]], "cubicquadbasis (class in tacs.elements)": [[5, "tacs.elements.CubicQuadBasis"]], "cubictrianglebasis (class in tacs.elements)": [[5, "tacs.elements.CubicTriangleBasis"]], "element2d (class in tacs.elements)": [[5, "tacs.elements.Element2D"]], "element3d (class in tacs.elements)": [[5, "tacs.elements.Element3D"]], "heatconduction2d (class in tacs.elements)": [[5, "tacs.elements.HeatConduction2D"]], "heatconduction3d (class in tacs.elements)": [[5, "tacs.elements.HeatConduction3D"]], "linearelasticity2d (class in tacs.elements)": [[5, "tacs.elements.LinearElasticity2D"]], "linearelasticity3d (class in tacs.elements)": [[5, "tacs.elements.LinearElasticity3D"]], "linearhexabasis (class in tacs.elements)": [[5, "tacs.elements.LinearHexaBasis"]], "linearquadbasis (class in tacs.elements)": [[5, "tacs.elements.LinearQuadBasis"]], "lineartetrahedralbasis (class in tacs.elements)": [[5, "tacs.elements.LinearTetrahedralBasis"]], "linearthermoelasticity2d (class in tacs.elements)": [[5, "tacs.elements.LinearThermoelasticity2D"]], "linearthermoelasticity3d (class in tacs.elements)": [[5, "tacs.elements.LinearThermoelasticity3D"]], "lineartrianglebasis (class in tacs.elements)": [[5, "tacs.elements.LinearTriangleBasis"]], "masselement (class in tacs.elements)": [[5, "tacs.elements.MassElement"]], "pcmheatconduction2d (class in tacs.elements)": [[5, "tacs.elements.PCMHeatConduction2D"]], "quad16nonlinearshell (class in tacs.elements)": [[5, "tacs.elements.Quad16NonlinearShell"]], "quad16nonlinearthermalshell (class in tacs.elements)": [[5, "tacs.elements.Quad16NonlinearThermalShell"]], "quad16shell (class in tacs.elements)": [[5, "tacs.elements.Quad16Shell"]], "quad16thermalshell (class in tacs.elements)": [[5, "tacs.elements.Quad16ThermalShell"]], "quad4nonlinearshell (class in tacs.elements)": [[5, "tacs.elements.Quad4NonlinearShell"]], "quad4nonlinearthermalshell (class in tacs.elements)": [[5, "tacs.elements.Quad4NonlinearThermalShell"]], "quad4shell (class in tacs.elements)": [[5, "tacs.elements.Quad4Shell"]], "quad4thermalshell (class in tacs.elements)": [[5, "tacs.elements.Quad4ThermalShell"]], "quad9nonlinearshell (class in tacs.elements)": [[5, "tacs.elements.Quad9NonlinearShell"]], "quad9nonlinearthermalshell (class in tacs.elements)": [[5, "tacs.elements.Quad9NonlinearThermalShell"]], "quad9shell (class in tacs.elements)": [[5, "tacs.elements.Quad9Shell"]], "quad9thermalshell (class in tacs.elements)": [[5, "tacs.elements.Quad9ThermalShell"]], "quadratichexabasis (class in tacs.elements)": [[5, "tacs.elements.QuadraticHexaBasis"]], "quadraticquadbasis (class in tacs.elements)": [[5, "tacs.elements.QuadraticQuadBasis"]], "quadratictetrahedralbasis (class in tacs.elements)": [[5, "tacs.elements.QuadraticTetrahedralBasis"]], "quadratictrianglebasis (class in tacs.elements)": [[5, "tacs.elements.QuadraticTriangleBasis"]], "quarticquadbasis (class in tacs.elements)": [[5, "tacs.elements.QuarticQuadBasis"]], "quinticquadbasis (class in tacs.elements)": [[5, "tacs.elements.QuinticQuadBasis"]], "rbe2 (class in tacs.elements)": [[5, "tacs.elements.RBE2"]], "rbe3 (class in tacs.elements)": [[5, "tacs.elements.RBE3"]], "shellnaturaltransform (class in tacs.elements)": [[5, "tacs.elements.ShellNaturalTransform"]], "shellrefaxistransform (class in tacs.elements)": [[5, "tacs.elements.ShellRefAxisTransform"]], "springelement (class in tacs.elements)": [[5, "tacs.elements.SpringElement"]], "springidentitytransform (class in tacs.elements)": [[5, "tacs.elements.SpringIdentityTransform"]], "springrefaxistransform (class in tacs.elements)": [[5, "tacs.elements.SpringRefAxisTransform"]], "springrefframetransform (class in tacs.elements)": [[5, "tacs.elements.SpringRefFrameTransform"]], "tri3nonlinearshell (class in tacs.elements)": [[5, "tacs.elements.Tri3NonlinearShell"]], "tri3nonlinearthermalshell (class in tacs.elements)": [[5, "tacs.elements.Tri3NonlinearThermalShell"]], "tri3shell (class in tacs.elements)": [[5, "tacs.elements.Tri3Shell"]], "tri3thermalshell (class in tacs.elements)": [[5, "tacs.elements.Tri3ThermalShell"]], "getrefaxes() (tacs.elements.springrefframetransform method)": [[5, "tacs.elements.SpringRefFrameTransform.getRefAxes"]], "getrefaxis() (tacs.elements.beamrefaxistransform method)": [[5, "tacs.elements.BeamRefAxisTransform.getRefAxis"]], "getrefaxis() (tacs.elements.shellrefaxistransform method)": [[5, "tacs.elements.ShellRefAxisTransform.getRefAxis"]], "getrefaxis() (tacs.elements.springrefaxistransform method)": [[5, "tacs.elements.SpringRefAxisTransform.getRefAxis"]], "setscalingparameters() (tacs.elements.rbe2 class method)": [[5, "tacs.elements.RBE2.setScalingParameters"]], "setscalingparameters() (tacs.elements.rbe3 class method)": [[5, "tacs.elements.RBE3.setScalingParameters"]], "tacs.elements": [[5, "module-0"], [5, "module-1"], [5, "module-2"], [5, "module-tacs.elements"]], "averagetemperature (class in tacs.functions)": [[6, "tacs.functions.AverageTemperature"]], "centerofmass (class in tacs.functions)": [[6, "tacs.functions.CenterOfMass"]], "compliance (class in tacs.functions)": [[6, "tacs.functions.Compliance"]], "enclosedvolume (class in tacs.functions)": [[6, "tacs.functions.EnclosedVolume"]], "ksdisplacement (class in tacs.functions)": [[6, "tacs.functions.KSDisplacement"]], "ksfailure (class in tacs.functions)": [[6, "tacs.functions.KSFailure"]], "kstemperature (class in tacs.functions)": [[6, "tacs.functions.KSTemperature"]], "momentofinertia (class in tacs.functions)": [[6, "tacs.functions.MomentOfInertia"]], "structuralmass (class in tacs.functions)": [[6, "tacs.functions.StructuralMass"]], "setcompliancetype() (tacs.functions.compliance method)": [[6, "tacs.functions.Compliance.setComplianceType"]], "tacs.functions": [[6, "module-tacs.functions"]], "tacsbuilder (class in tacs.mphys.builder)": [[14, "tacs.mphys.builder.TacsBuilder"]], "get_coupling_group_subsystem() (tacs.mphys.builder.tacsbuilder method)": [[14, "tacs.mphys.builder.TacsBuilder.get_coupling_group_subsystem"]], "get_dv_bounds() (tacs.mphys.builder.tacsbuilder method)": [[14, "tacs.mphys.builder.TacsBuilder.get_dv_bounds"]], "get_dv_scalers() (tacs.mphys.builder.tacsbuilder method)": [[14, "tacs.mphys.builder.TacsBuilder.get_dv_scalers"]], "get_fea_assembler() (tacs.mphys.builder.tacsbuilder method)": [[14, "tacs.mphys.builder.TacsBuilder.get_fea_assembler"]], "get_initial_dvs() (tacs.mphys.builder.tacsbuilder method)": [[14, "tacs.mphys.builder.TacsBuilder.get_initial_dvs"]], "get_mesh_coordinate_subsystem() (tacs.mphys.builder.tacsbuilder method)": [[14, "tacs.mphys.builder.TacsBuilder.get_mesh_coordinate_subsystem"]], "get_ndof() (tacs.mphys.builder.tacsbuilder method)": [[14, "tacs.mphys.builder.TacsBuilder.get_ndof"]], "get_ndv() (tacs.mphys.builder.tacsbuilder method)": [[14, "tacs.mphys.builder.TacsBuilder.get_ndv"]], "get_number_of_nodes() (tacs.mphys.builder.tacsbuilder method)": [[14, "tacs.mphys.builder.TacsBuilder.get_number_of_nodes"]], "get_post_coupling_subsystem() (tacs.mphys.builder.tacsbuilder method)": [[14, "tacs.mphys.builder.TacsBuilder.get_post_coupling_subsystem"]], "get_pre_coupling_subsystem() (tacs.mphys.builder.tacsbuilder method)": [[14, "tacs.mphys.builder.TacsBuilder.get_pre_coupling_subsystem"]], "get_solver() (tacs.mphys.builder.tacsbuilder method)": [[14, "tacs.mphys.builder.TacsBuilder.get_solver"]], "get_tagged_indices() (tacs.mphys.builder.tacsbuilder method)": [[14, "tacs.mphys.builder.TacsBuilder.get_tagged_indices"]], "initialize() (tacs.mphys.builder.tacsbuilder method)": [[14, "tacs.mphys.builder.TacsBuilder.initialize"]], "adjacencyconstraint (class in tacs.constraints)": [[16, "tacs.constraints.AdjacencyConstraint"]], "addconstraint() (tacs.constraints.adjacencyconstraint method)": [[16, "tacs.constraints.AdjacencyConstraint.addConstraint"]], "dtype (tacs.constraints.adjacencyconstraint attribute)": [[16, "tacs.constraints.AdjacencyConstraint.dtype"]], "evalconstraints() (tacs.constraints.adjacencyconstraint method)": [[16, "tacs.constraints.AdjacencyConstraint.evalConstraints"]], "evalconstraintssens() (tacs.constraints.adjacencyconstraint method)": [[16, "tacs.constraints.AdjacencyConstraint.evalConstraintsSens"]], "getconstraintbounds() (tacs.constraints.adjacencyconstraint method)": [[16, "tacs.constraints.AdjacencyConstraint.getConstraintBounds"]], "getconstraintkeys() (tacs.constraints.adjacencyconstraint method)": [[16, "tacs.constraints.AdjacencyConstraint.getConstraintKeys"]], "getconstraintsizes() (tacs.constraints.adjacencyconstraint method)": [[16, "tacs.constraints.AdjacencyConstraint.getConstraintSizes"]], "getdesignvarrange() (tacs.constraints.adjacencyconstraint method)": [[16, "tacs.constraints.AdjacencyConstraint.getDesignVarRange"]], "getdesignvars() (tacs.constraints.adjacencyconstraint method)": [[16, "tacs.constraints.AdjacencyConstraint.getDesignVars"]], "getnodes() (tacs.constraints.adjacencyconstraint method)": [[16, "tacs.constraints.AdjacencyConstraint.getNodes"]], "getnumcoordinates() (tacs.constraints.adjacencyconstraint method)": [[16, "tacs.constraints.AdjacencyConstraint.getNumCoordinates"]], "getnumdesignvars() (tacs.constraints.adjacencyconstraint method)": [[16, "tacs.constraints.AdjacencyConstraint.getNumDesignVars"]], "getnumownednodes() (tacs.constraints.adjacencyconstraint method)": [[16, "tacs.constraints.AdjacencyConstraint.getNumOwnedNodes"]], "getnumvariables() (tacs.constraints.adjacencyconstraint method)": [[16, "tacs.constraints.AdjacencyConstraint.getNumVariables"]], "getoption() (tacs.constraints.adjacencyconstraint method)": [[16, "tacs.constraints.AdjacencyConstraint.getOption"]], "getvarspernode() (tacs.constraints.adjacencyconstraint method)": [[16, "tacs.constraints.AdjacencyConstraint.getVarsPerNode"]], "printdefaultoptions() (tacs.constraints.adjacencyconstraint class method)": [[16, "tacs.constraints.AdjacencyConstraint.printDefaultOptions"]], "printmodifiedoptions() (tacs.constraints.adjacencyconstraint method)": [[16, "tacs.constraints.AdjacencyConstraint.printModifiedOptions"]], "printoptions() (tacs.constraints.adjacencyconstraint method)": [[16, "tacs.constraints.AdjacencyConstraint.printOptions"]], "setdesignvars() (tacs.constraints.adjacencyconstraint method)": [[16, "tacs.constraints.AdjacencyConstraint.setDesignVars"]], "setnodes() (tacs.constraints.adjacencyconstraint method)": [[16, "tacs.constraints.AdjacencyConstraint.setNodes"]], "setoption() (tacs.constraints.adjacencyconstraint method)": [[16, "tacs.constraints.AdjacencyConstraint.setOption"]], "setoptions() (tacs.constraints.adjacencyconstraint method)": [[16, "tacs.constraints.AdjacencyConstraint.setOptions"]], "setvarname() (tacs.constraints.adjacencyconstraint method)": [[16, "tacs.constraints.AdjacencyConstraint.setVarName"]], "tacs.constraints.adjacency": [[16, "module-tacs.constraints.adjacency"]], "writevisualization() (tacs.constraints.adjacencyconstraint method)": [[16, "tacs.constraints.AdjacencyConstraint.writeVisualization"]], "basesolver (class in tacs.solvers)": [[17, "tacs.solvers.BaseSolver"]], "dtype (tacs.solvers.basesolver attribute)": [[17, "tacs.solvers.BaseSolver.dtype"]], "fatalfailure (tacs.solvers.basesolver property)": [[17, "tacs.solvers.BaseSolver.fatalFailure"]], "gethistoryvariables() (tacs.solvers.basesolver method)": [[17, "tacs.solvers.BaseSolver.getHistoryVariables"]], "getoption() (tacs.solvers.basesolver method)": [[17, "tacs.solvers.BaseSolver.getOption"]], "hasconverged (tacs.solvers.basesolver property)": [[17, "tacs.solvers.BaseSolver.hasConverged"]], "initializesolve() (tacs.solvers.basesolver method)": [[17, "tacs.solvers.BaseSolver.initializeSolve"]], "iterationcount (tacs.solvers.basesolver property)": [[17, "tacs.solvers.BaseSolver.iterationCount"]], "printdefaultoptions() (tacs.solvers.basesolver class method)": [[17, "tacs.solvers.BaseSolver.printDefaultOptions"]], "printmodifiedoptions() (tacs.solvers.basesolver method)": [[17, "tacs.solvers.BaseSolver.printModifiedOptions"]], "printoptions() (tacs.solvers.basesolver method)": [[17, "tacs.solvers.BaseSolver.printOptions"]], "reset() (tacs.solvers.basesolver method)": [[17, "tacs.solvers.BaseSolver.reset"]], "setcallback() (tacs.solvers.basesolver method)": [[17, "tacs.solvers.BaseSolver.setCallback"]], "setconvergencetolerance() (tacs.solvers.basesolver method)": [[17, "tacs.solvers.BaseSolver.setConvergenceTolerance"]], "setoption() (tacs.solvers.basesolver method)": [[17, "tacs.solvers.BaseSolver.setOption"]], "setoptions() (tacs.solvers.basesolver method)": [[17, "tacs.solvers.BaseSolver.setOptions"]], "setrefnorm() (tacs.solvers.basesolver method)": [[17, "tacs.solvers.BaseSolver.setRefNorm"]], "solve() (tacs.solvers.basesolver method)": [[17, "tacs.solvers.BaseSolver.solve"]], "tacs.solvers.base": [[17, "module-tacs.solvers.base"]], "bucklingproblem (class in tacs.problems)": [[18, "tacs.problems.BucklingProblem"]], "addcentrifugalload() (tacs.problems.bucklingproblem method)": [[18, "tacs.problems.BucklingProblem.addCentrifugalLoad"]], "adddvsens() (tacs.problems.bucklingproblem method)": [[18, "tacs.problems.BucklingProblem.addDVSens"]], "addfunction() (tacs.problems.bucklingproblem method)": [[18, "tacs.problems.BucklingProblem.addFunction"]], "addinertialload() (tacs.problems.bucklingproblem method)": [[18, "tacs.problems.BucklingProblem.addInertialLoad"]], "addloadfrombdf() (tacs.problems.bucklingproblem method)": [[18, "tacs.problems.BucklingProblem.addLoadFromBDF"]], "addloadtocomponents() (tacs.problems.bucklingproblem method)": [[18, "tacs.problems.BucklingProblem.addLoadToComponents"]], "addloadtonodes() (tacs.problems.bucklingproblem method)": [[18, "tacs.problems.BucklingProblem.addLoadToNodes"]], "addloadtorhs() (tacs.problems.bucklingproblem method)": [[18, "tacs.problems.BucklingProblem.addLoadToRHS"]], "addpressuretocomponents() (tacs.problems.bucklingproblem method)": [[18, "tacs.problems.BucklingProblem.addPressureToComponents"]], "addpressuretoelements() (tacs.problems.bucklingproblem method)": [[18, "tacs.problems.BucklingProblem.addPressureToElements"]], "addtractiontocomponents() (tacs.problems.bucklingproblem method)": [[18, "tacs.problems.BucklingProblem.addTractionToComponents"]], "addtractiontoelements() (tacs.problems.bucklingproblem method)": [[18, "tacs.problems.BucklingProblem.addTractionToElements"]], "addxptsens() (tacs.problems.bucklingproblem method)": [[18, "tacs.problems.BucklingProblem.addXptSens"]], "dtype (tacs.problems.bucklingproblem attribute)": [[18, "tacs.problems.BucklingProblem.dtype"]], "evalfunctions() (tacs.problems.bucklingproblem method)": [[18, "tacs.problems.BucklingProblem.evalFunctions"]], "evalfunctionssens() (tacs.problems.bucklingproblem method)": [[18, "tacs.problems.BucklingProblem.evalFunctionsSens"]], "evalsvsens() (tacs.problems.bucklingproblem method)": [[18, "tacs.problems.BucklingProblem.evalSVSens"]], "getdesignvarrange() (tacs.problems.bucklingproblem method)": [[18, "tacs.problems.BucklingProblem.getDesignVarRange"]], "getdesignvars() (tacs.problems.bucklingproblem method)": [[18, "tacs.problems.BucklingProblem.getDesignVars"]], "getfunctionkeys() (tacs.problems.bucklingproblem method)": [[18, "tacs.problems.BucklingProblem.getFunctionKeys"]], "getnodes() (tacs.problems.bucklingproblem method)": [[18, "tacs.problems.BucklingProblem.getNodes"]], "getnumcoordinates() (tacs.problems.bucklingproblem method)": [[18, "tacs.problems.BucklingProblem.getNumCoordinates"]], "getnumdesignvars() (tacs.problems.bucklingproblem method)": [[18, "tacs.problems.BucklingProblem.getNumDesignVars"]], "getnumeigs() (tacs.problems.bucklingproblem method)": [[18, "tacs.problems.BucklingProblem.getNumEigs"]], "getnumownednodes() (tacs.problems.bucklingproblem method)": [[18, "tacs.problems.BucklingProblem.getNumOwnedNodes"]], "getnumvariables() (tacs.problems.bucklingproblem method)": [[18, "tacs.problems.BucklingProblem.getNumVariables"]], "getoption() (tacs.problems.bucklingproblem method)": [[18, "tacs.problems.BucklingProblem.getOption"]], "getvariables() (tacs.problems.bucklingproblem method)": [[18, "tacs.problems.BucklingProblem.getVariables"]], "getvarspernode() (tacs.problems.bucklingproblem method)": [[18, "tacs.problems.BucklingProblem.getVarsPerNode"]], "isnonlinear (tacs.problems.bucklingproblem property)": [[18, "tacs.problems.BucklingProblem.isNonlinear"]], "printdefaultoptions() (tacs.problems.bucklingproblem class method)": [[18, "tacs.problems.BucklingProblem.printDefaultOptions"]], "printmodifiedoptions() (tacs.problems.bucklingproblem method)": [[18, "tacs.problems.BucklingProblem.printModifiedOptions"]], "printoptions() (tacs.problems.bucklingproblem method)": [[18, "tacs.problems.BucklingProblem.printOptions"]], "setdesignvars() (tacs.problems.bucklingproblem method)": [[18, "tacs.problems.BucklingProblem.setDesignVars"]], "setnodes() (tacs.problems.bucklingproblem method)": [[18, "tacs.problems.BucklingProblem.setNodes"]], "setoption() (tacs.problems.bucklingproblem method)": [[18, "tacs.problems.BucklingProblem.setOption"]], "setoptions() (tacs.problems.bucklingproblem method)": [[18, "tacs.problems.BucklingProblem.setOptions"]], "setvalname() (tacs.problems.bucklingproblem method)": [[18, "tacs.problems.BucklingProblem.setValName"]], "setvarname() (tacs.problems.bucklingproblem method)": [[18, "tacs.problems.BucklingProblem.setVarName"]], "solve() (tacs.problems.bucklingproblem method)": [[18, "tacs.problems.BucklingProblem.solve"]], "tacs.problems.buckling": [[18, "module-tacs.problems.buckling"]], "writesensfile() (tacs.problems.bucklingproblem method)": [[18, "tacs.problems.BucklingProblem.writeSensFile"]], "writesolution() (tacs.problems.bucklingproblem method)": [[18, "tacs.problems.BucklingProblem.writeSolution"]], "zeroloads() (tacs.problems.bucklingproblem method)": [[18, "tacs.problems.BucklingProblem.zeroLoads"]], "continuationsolver (class in tacs.solvers)": [[20, "tacs.solvers.ContinuationSolver"]], "computeforcevectors() (tacs.solvers.continuationsolver method)": [[20, "tacs.solvers.ContinuationSolver.computeForceVectors"]], "dtype (tacs.solvers.continuationsolver attribute)": [[20, "tacs.solvers.ContinuationSolver.dtype"]], "fatalfailure (tacs.solvers.continuationsolver property)": [[20, "tacs.solvers.ContinuationSolver.fatalFailure"]], "gethistoryvariables() (tacs.solvers.continuationsolver method)": [[20, "tacs.solvers.ContinuationSolver.getHistoryVariables"]], "getoption() (tacs.solvers.continuationsolver method)": [[20, "tacs.solvers.ContinuationSolver.getOption"]], "hasconverged (tacs.solvers.continuationsolver property)": [[20, "tacs.solvers.ContinuationSolver.hasConverged"]], "initializesolve() (tacs.solvers.continuationsolver method)": [[20, "tacs.solvers.ContinuationSolver.initializeSolve"]], "iterationcount (tacs.solvers.continuationsolver property)": [[20, "tacs.solvers.ContinuationSolver.iterationCount"]], "printdefaultoptions() (tacs.solvers.continuationsolver class method)": [[20, "tacs.solvers.ContinuationSolver.printDefaultOptions"]], "printmodifiedoptions() (tacs.solvers.continuationsolver method)": [[20, "tacs.solvers.ContinuationSolver.printModifiedOptions"]], "printoptions() (tacs.solvers.continuationsolver method)": [[20, "tacs.solvers.ContinuationSolver.printOptions"]], "reset() (tacs.solvers.continuationsolver method)": [[20, "tacs.solvers.ContinuationSolver.reset"]], "setcallback() (tacs.solvers.continuationsolver method)": [[20, "tacs.solvers.ContinuationSolver.setCallback"]], "setconvergencetolerance() (tacs.solvers.continuationsolver method)": [[20, "tacs.solvers.ContinuationSolver.setConvergenceTolerance"]], "setoption() (tacs.solvers.continuationsolver method)": [[20, "tacs.solvers.ContinuationSolver.setOption"]], "setoptions() (tacs.solvers.continuationsolver method)": [[20, "tacs.solvers.ContinuationSolver.setOptions"]], "setrefnorm() (tacs.solvers.continuationsolver method)": [[20, "tacs.solvers.ContinuationSolver.setRefNorm"]], "solve() (tacs.solvers.continuationsolver method)": [[20, "tacs.solvers.ContinuationSolver.solve"]], "tacs.solvers.continuation": [[20, "module-tacs.solvers.continuation"]], "dvconstraint (class in tacs.constraints)": [[21, "tacs.constraints.DVConstraint"]], "addconstraint() (tacs.constraints.dvconstraint method)": [[21, "tacs.constraints.DVConstraint.addConstraint"]], "dtype (tacs.constraints.dvconstraint attribute)": [[21, "tacs.constraints.DVConstraint.dtype"]], "evalconstraints() (tacs.constraints.dvconstraint method)": [[21, "tacs.constraints.DVConstraint.evalConstraints"]], "evalconstraintssens() (tacs.constraints.dvconstraint method)": [[21, "tacs.constraints.DVConstraint.evalConstraintsSens"]], "getconstraintbounds() (tacs.constraints.dvconstraint method)": [[21, "tacs.constraints.DVConstraint.getConstraintBounds"]], "getconstraintkeys() (tacs.constraints.dvconstraint method)": [[21, "tacs.constraints.DVConstraint.getConstraintKeys"]], "getconstraintsizes() (tacs.constraints.dvconstraint method)": [[21, "tacs.constraints.DVConstraint.getConstraintSizes"]], "getdesignvarrange() (tacs.constraints.dvconstraint method)": [[21, "tacs.constraints.DVConstraint.getDesignVarRange"]], "getdesignvars() (tacs.constraints.dvconstraint method)": [[21, "tacs.constraints.DVConstraint.getDesignVars"]], "getnodes() (tacs.constraints.dvconstraint method)": [[21, "tacs.constraints.DVConstraint.getNodes"]], "getnumcoordinates() (tacs.constraints.dvconstraint method)": [[21, "tacs.constraints.DVConstraint.getNumCoordinates"]], "getnumdesignvars() (tacs.constraints.dvconstraint method)": [[21, "tacs.constraints.DVConstraint.getNumDesignVars"]], "getnumownednodes() (tacs.constraints.dvconstraint method)": [[21, "tacs.constraints.DVConstraint.getNumOwnedNodes"]], "getnumvariables() (tacs.constraints.dvconstraint method)": [[21, "tacs.constraints.DVConstraint.getNumVariables"]], "getoption() (tacs.constraints.dvconstraint method)": [[21, "tacs.constraints.DVConstraint.getOption"]], "getvarspernode() (tacs.constraints.dvconstraint method)": [[21, "tacs.constraints.DVConstraint.getVarsPerNode"]], "printdefaultoptions() (tacs.constraints.dvconstraint class method)": [[21, "tacs.constraints.DVConstraint.printDefaultOptions"]], "printmodifiedoptions() (tacs.constraints.dvconstraint method)": [[21, "tacs.constraints.DVConstraint.printModifiedOptions"]], "printoptions() (tacs.constraints.dvconstraint method)": [[21, "tacs.constraints.DVConstraint.printOptions"]], "setdesignvars() (tacs.constraints.dvconstraint method)": [[21, "tacs.constraints.DVConstraint.setDesignVars"]], "setnodes() (tacs.constraints.dvconstraint method)": [[21, "tacs.constraints.DVConstraint.setNodes"]], "setoption() (tacs.constraints.dvconstraint method)": [[21, "tacs.constraints.DVConstraint.setOption"]], "setoptions() (tacs.constraints.dvconstraint method)": [[21, "tacs.constraints.DVConstraint.setOptions"]], "setvarname() (tacs.constraints.dvconstraint method)": [[21, "tacs.constraints.DVConstraint.setVarName"]], "tacs.constraints.dv": [[21, "module-tacs.constraints.dv"]], "modalproblem (class in tacs.problems)": [[22, "tacs.problems.ModalProblem"]], "addfunction() (tacs.problems.modalproblem method)": [[22, "tacs.problems.ModalProblem.addFunction"]], "dtype (tacs.problems.modalproblem attribute)": [[22, "tacs.problems.ModalProblem.dtype"]], "evalfunctions() (tacs.problems.modalproblem method)": [[22, "tacs.problems.ModalProblem.evalFunctions"]], "evalfunctionssens() (tacs.problems.modalproblem method)": [[22, "tacs.problems.ModalProblem.evalFunctionsSens"]], "getdesignvarrange() (tacs.problems.modalproblem method)": [[22, "tacs.problems.ModalProblem.getDesignVarRange"]], "getdesignvars() (tacs.problems.modalproblem method)": [[22, "tacs.problems.ModalProblem.getDesignVars"]], "getfunctionkeys() (tacs.problems.modalproblem method)": [[22, "tacs.problems.ModalProblem.getFunctionKeys"]], "getnodes() (tacs.problems.modalproblem method)": [[22, "tacs.problems.ModalProblem.getNodes"]], "getnumcoordinates() (tacs.problems.modalproblem method)": [[22, "tacs.problems.ModalProblem.getNumCoordinates"]], "getnumdesignvars() (tacs.problems.modalproblem method)": [[22, "tacs.problems.ModalProblem.getNumDesignVars"]], "getnumeigs() (tacs.problems.modalproblem method)": [[22, "tacs.problems.ModalProblem.getNumEigs"]], "getnumownednodes() (tacs.problems.modalproblem method)": [[22, "tacs.problems.ModalProblem.getNumOwnedNodes"]], "getnumvariables() (tacs.problems.modalproblem method)": [[22, "tacs.problems.ModalProblem.getNumVariables"]], "getoption() (tacs.problems.modalproblem method)": [[22, "tacs.problems.ModalProblem.getOption"]], "getvariables() (tacs.problems.modalproblem method)": [[22, "tacs.problems.ModalProblem.getVariables"]], "getvarspernode() (tacs.problems.modalproblem method)": [[22, "tacs.problems.ModalProblem.getVarsPerNode"]], "isnonlinear (tacs.problems.modalproblem property)": [[22, "tacs.problems.ModalProblem.isNonlinear"]], "printdefaultoptions() (tacs.problems.modalproblem class method)": [[22, "tacs.problems.ModalProblem.printDefaultOptions"]], "printmodifiedoptions() (tacs.problems.modalproblem method)": [[22, "tacs.problems.ModalProblem.printModifiedOptions"]], "printoptions() (tacs.problems.modalproblem method)": [[22, "tacs.problems.ModalProblem.printOptions"]], "setdesignvars() (tacs.problems.modalproblem method)": [[22, "tacs.problems.ModalProblem.setDesignVars"]], "setnodes() (tacs.problems.modalproblem method)": [[22, "tacs.problems.ModalProblem.setNodes"]], "setoption() (tacs.problems.modalproblem method)": [[22, "tacs.problems.ModalProblem.setOption"]], "setoptions() (tacs.problems.modalproblem method)": [[22, "tacs.problems.ModalProblem.setOptions"]], "setvalname() (tacs.problems.modalproblem method)": [[22, "tacs.problems.ModalProblem.setValName"]], "setvarname() (tacs.problems.modalproblem method)": [[22, "tacs.problems.ModalProblem.setVarName"]], "solve() (tacs.problems.modalproblem method)": [[22, "tacs.problems.ModalProblem.solve"]], "tacs.problems.modal": [[22, "module-tacs.problems.modal"]], "writesensfile() (tacs.problems.modalproblem method)": [[22, "tacs.problems.ModalProblem.writeSensFile"]], "writesolution() (tacs.problems.modalproblem method)": [[22, "tacs.problems.ModalProblem.writeSolution"]], "newtonsolver (class in tacs.solvers)": [[23, "tacs.solvers.NewtonSolver"]], "dtype (tacs.solvers.newtonsolver attribute)": [[23, "tacs.solvers.NewtonSolver.dtype"]], "fatalfailure (tacs.solvers.newtonsolver property)": [[23, "tacs.solvers.NewtonSolver.fatalFailure"]], "gethistoryvariables() (tacs.solvers.newtonsolver method)": [[23, "tacs.solvers.NewtonSolver.getHistoryVariables"]], "getoption() (tacs.solvers.newtonsolver method)": [[23, "tacs.solvers.NewtonSolver.getOption"]], "hasconverged (tacs.solvers.newtonsolver property)": [[23, "tacs.solvers.NewtonSolver.hasConverged"]], "initializesolve() (tacs.solvers.newtonsolver method)": [[23, "tacs.solvers.NewtonSolver.initializeSolve"]], "iterationcount (tacs.solvers.newtonsolver property)": [[23, "tacs.solvers.NewtonSolver.iterationCount"]], "printdefaultoptions() (tacs.solvers.newtonsolver class method)": [[23, "tacs.solvers.NewtonSolver.printDefaultOptions"]], "printmodifiedoptions() (tacs.solvers.newtonsolver method)": [[23, "tacs.solvers.NewtonSolver.printModifiedOptions"]], "printoptions() (tacs.solvers.newtonsolver method)": [[23, "tacs.solvers.NewtonSolver.printOptions"]], "reset() (tacs.solvers.newtonsolver method)": [[23, "tacs.solvers.NewtonSolver.reset"]], "setcallback() (tacs.solvers.newtonsolver method)": [[23, "tacs.solvers.NewtonSolver.setCallback"]], "setconvergencetolerance() (tacs.solvers.newtonsolver method)": [[23, "tacs.solvers.NewtonSolver.setConvergenceTolerance"]], "setoption() (tacs.solvers.newtonsolver method)": [[23, "tacs.solvers.NewtonSolver.setOption"]], "setoptions() (tacs.solvers.newtonsolver method)": [[23, "tacs.solvers.NewtonSolver.setOptions"]], "setrefnorm() (tacs.solvers.newtonsolver method)": [[23, "tacs.solvers.NewtonSolver.setRefNorm"]], "solve() (tacs.solvers.newtonsolver method)": [[23, "tacs.solvers.NewtonSolver.solve"]], "tacs.solvers.newton": [[23, "module-tacs.solvers.newton"]], "panellengthconstraint (class in tacs.constraints)": [[24, "tacs.constraints.PanelLengthConstraint"]], "addconstraint() (tacs.constraints.panellengthconstraint method)": [[24, "tacs.constraints.PanelLengthConstraint.addConstraint"]], "dtype (tacs.constraints.panellengthconstraint attribute)": [[24, "tacs.constraints.PanelLengthConstraint.dtype"]], "evalconstraints() (tacs.constraints.panellengthconstraint method)": [[24, "tacs.constraints.PanelLengthConstraint.evalConstraints"]], "evalconstraintssens() (tacs.constraints.panellengthconstraint method)": [[24, "tacs.constraints.PanelLengthConstraint.evalConstraintsSens"]], "getconstraintbounds() (tacs.constraints.panellengthconstraint method)": [[24, "tacs.constraints.PanelLengthConstraint.getConstraintBounds"]], "getconstraintkeys() (tacs.constraints.panellengthconstraint method)": [[24, "tacs.constraints.PanelLengthConstraint.getConstraintKeys"]], "getconstraintsizes() (tacs.constraints.panellengthconstraint method)": [[24, "tacs.constraints.PanelLengthConstraint.getConstraintSizes"]], "getdesignvarrange() (tacs.constraints.panellengthconstraint method)": [[24, "tacs.constraints.PanelLengthConstraint.getDesignVarRange"]], "getdesignvars() (tacs.constraints.panellengthconstraint method)": [[24, "tacs.constraints.PanelLengthConstraint.getDesignVars"]], "getnodes() (tacs.constraints.panellengthconstraint method)": [[24, "tacs.constraints.PanelLengthConstraint.getNodes"]], "getnumcoordinates() (tacs.constraints.panellengthconstraint method)": [[24, "tacs.constraints.PanelLengthConstraint.getNumCoordinates"]], "getnumdesignvars() (tacs.constraints.panellengthconstraint method)": [[24, "tacs.constraints.PanelLengthConstraint.getNumDesignVars"]], "getnumownednodes() (tacs.constraints.panellengthconstraint method)": [[24, "tacs.constraints.PanelLengthConstraint.getNumOwnedNodes"]], "getnumvariables() (tacs.constraints.panellengthconstraint method)": [[24, "tacs.constraints.PanelLengthConstraint.getNumVariables"]], "getoption() (tacs.constraints.panellengthconstraint method)": [[24, "tacs.constraints.PanelLengthConstraint.getOption"]], "getvarspernode() (tacs.constraints.panellengthconstraint method)": [[24, "tacs.constraints.PanelLengthConstraint.getVarsPerNode"]], "printdefaultoptions() (tacs.constraints.panellengthconstraint class method)": [[24, "tacs.constraints.PanelLengthConstraint.printDefaultOptions"]], "printmodifiedoptions() (tacs.constraints.panellengthconstraint method)": [[24, "tacs.constraints.PanelLengthConstraint.printModifiedOptions"]], "printoptions() (tacs.constraints.panellengthconstraint method)": [[24, "tacs.constraints.PanelLengthConstraint.printOptions"]], "setdesignvars() (tacs.constraints.panellengthconstraint method)": [[24, "tacs.constraints.PanelLengthConstraint.setDesignVars"]], "setnodes() (tacs.constraints.panellengthconstraint method)": [[24, "tacs.constraints.PanelLengthConstraint.setNodes"]], "setoption() (tacs.constraints.panellengthconstraint method)": [[24, "tacs.constraints.PanelLengthConstraint.setOption"]], "setoptions() (tacs.constraints.panellengthconstraint method)": [[24, "tacs.constraints.PanelLengthConstraint.setOptions"]], "setvarname() (tacs.constraints.panellengthconstraint method)": [[24, "tacs.constraints.PanelLengthConstraint.setVarName"]], "tacs.constraints.panel_length": [[24, "module-tacs.constraints.panel_length"]], "addglobaldv() (tacs.pytacs.pytacs method)": [[27, "tacs.pytacs.pyTACS.addGlobalDV"]], "applybcstovec() (tacs.pytacs.pytacs method)": [[27, "tacs.pytacs.pyTACS.applyBCsToVec"]], "assignmassdv() (tacs.pytacs.pytacs method)": [[27, "tacs.pytacs.pyTACS.assignMassDV"]], "createadjacencyconstraint() (tacs.pytacs.pytacs method)": [[27, "tacs.pytacs.pyTACS.createAdjacencyConstraint"]], "createbucklingproblem() (tacs.pytacs.pytacs method)": [[27, "tacs.pytacs.pyTACS.createBucklingProblem"]], "createdvconstraint() (tacs.pytacs.pytacs method)": [[27, "tacs.pytacs.pyTACS.createDVConstraint"]], "createdesignvec() (tacs.pytacs.pytacs method)": [[27, "tacs.pytacs.pyTACS.createDesignVec"]], "createmodalproblem() (tacs.pytacs.pytacs method)": [[27, "tacs.pytacs.pyTACS.createModalProblem"]], "createnodevec() (tacs.pytacs.pytacs method)": [[27, "tacs.pytacs.pyTACS.createNodeVec"]], "createpanellengthconstraint() (tacs.pytacs.pytacs method)": [[27, "tacs.pytacs.pyTACS.createPanelLengthConstraint"]], "createstaticproblem() (tacs.pytacs.pytacs method)": [[27, "tacs.pytacs.pyTACS.createStaticProblem"]], "createtacsprobsfrombdf() (tacs.pytacs.pytacs method)": [[27, "tacs.pytacs.pyTACS.createTACSProbsFromBDF"]], "createtransientproblem() (tacs.pytacs.pytacs method)": [[27, "tacs.pytacs.pyTACS.createTransientProblem"]], "createvec() (tacs.pytacs.pytacs method)": [[27, "tacs.pytacs.pyTACS.createVec"]], "createvolumeconstraint() (tacs.pytacs.pytacs method)": [[27, "tacs.pytacs.pyTACS.createVolumeConstraint"]], "dtype (tacs.pytacs.pytacs attribute)": [[27, "tacs.pytacs.pyTACS.dtype"]], "elemcallback() (in module tacs.pytacs)": [[27, "tacs.pytacs.elemCallBack"]], "getbdfinfo() (tacs.pytacs.pytacs method)": [[27, "tacs.pytacs.pyTACS.getBDFInfo"]], "getcompnames() (tacs.pytacs.pytacs method)": [[27, "tacs.pytacs.pyTACS.getCompNames"]], "getdesignvarrange() (tacs.pytacs.pytacs method)": [[27, "tacs.pytacs.pyTACS.getDesignVarRange"]], "getglobaldvkeys() (tacs.pytacs.pytacs method)": [[27, "tacs.pytacs.pyTACS.getGlobalDVKeys"]], "getglobaldvnums() (tacs.pytacs.pytacs method)": [[27, "tacs.pytacs.pyTACS.getGlobalDVNums"]], "getglobaldvs() (tacs.pytacs.pytacs method)": [[27, "tacs.pytacs.pyTACS.getGlobalDVs"]], "getglobalnodeidsforcomps() (tacs.pytacs.pytacs method)": [[27, "tacs.pytacs.pyTACS.getGlobalNodeIDsForComps"]], "getlocalmultipliernodeids() (tacs.pytacs.pytacs method)": [[27, "tacs.pytacs.pyTACS.getLocalMultiplierNodeIDs"]], "getlocalnodeidsforcomps() (tacs.pytacs.pytacs method)": [[27, "tacs.pytacs.pyTACS.getLocalNodeIDsForComps"]], "getnumcomponents() (tacs.pytacs.pytacs method)": [[27, "tacs.pytacs.pyTACS.getNumComponents"]], "getnumdesignvars() (tacs.pytacs.pytacs method)": [[27, "tacs.pytacs.pyTACS.getNumDesignVars"]], "getnumownedmultipliernodes() (tacs.pytacs.pytacs method)": [[27, "tacs.pytacs.pyTACS.getNumOwnedMultiplierNodes"]], "getnumownednodes() (tacs.pytacs.pytacs method)": [[27, "tacs.pytacs.pyTACS.getNumOwnedNodes"]], "getoption() (tacs.pytacs.pytacs method)": [[27, "tacs.pytacs.pyTACS.getOption"]], "getorigdesignvars() (tacs.pytacs.pytacs method)": [[27, "tacs.pytacs.pyTACS.getOrigDesignVars"]], "getorignodes() (tacs.pytacs.pytacs method)": [[27, "tacs.pytacs.pyTACS.getOrigNodes"]], "gettotalnumdesignvars() (tacs.pytacs.pytacs method)": [[27, "tacs.pytacs.pyTACS.getTotalNumDesignVars"]], "gettotalnumglobaldvs() (tacs.pytacs.pytacs method)": [[27, "tacs.pytacs.pyTACS.getTotalNumGlobalDVs"]], "getvarspernode() (tacs.pytacs.pytacs method)": [[27, "tacs.pytacs.pyTACS.getVarsPerNode"]], "initialize() (tacs.pytacs.pytacs method)": [[27, "tacs.pytacs.pyTACS.initialize"]], "isnonlinear (tacs.pytacs.pytacs property)": [[27, "tacs.pytacs.pyTACS.isNonlinear"]], "printdefaultoptions() (tacs.pytacs.pytacs class method)": [[27, "tacs.pytacs.pyTACS.printDefaultOptions"]], "printmodifiedoptions() (tacs.pytacs.pytacs method)": [[27, "tacs.pytacs.pyTACS.printModifiedOptions"]], "printoptions() (tacs.pytacs.pytacs method)": [[27, "tacs.pytacs.pyTACS.printOptions"]], "pytacs (class in tacs.pytacs)": [[27, "tacs.pytacs.pyTACS"]], "selectcompids() (tacs.pytacs.pytacs method)": [[27, "tacs.pytacs.pyTACS.selectCompIDs"]], "setbcsinvec() (tacs.pytacs.pytacs method)": [[27, "tacs.pytacs.pyTACS.setBCsInVec"]], "setoption() (tacs.pytacs.pytacs method)": [[27, "tacs.pytacs.pyTACS.setOption"]], "setoptions() (tacs.pytacs.pytacs method)": [[27, "tacs.pytacs.pyTACS.setOptions"]], "tacs.pytacs": [[27, "module-tacs.pytacs"]], "writebdf() (tacs.pytacs.pytacs method)": [[27, "tacs.pytacs.pyTACS.writeBDF"]], "staticproblem (class in tacs.problems)": [[29, "tacs.problems.StaticProblem"]], "addadjointresproducts() (tacs.problems.staticproblem method)": [[29, "tacs.problems.StaticProblem.addAdjointResProducts"]], "addadjointresxptsensproducts() (tacs.problems.staticproblem method)": [[29, "tacs.problems.StaticProblem.addAdjointResXptSensProducts"]], "addcentrifugalload() (tacs.problems.staticproblem method)": [[29, "tacs.problems.StaticProblem.addCentrifugalLoad"]], "adddvsens() (tacs.problems.staticproblem method)": [[29, "tacs.problems.StaticProblem.addDVSens"]], "addfunction() (tacs.problems.staticproblem method)": [[29, "tacs.problems.StaticProblem.addFunction"]], "addinertialload() (tacs.problems.staticproblem method)": [[29, "tacs.problems.StaticProblem.addInertialLoad"]], "addloadfrombdf() (tacs.problems.staticproblem method)": [[29, "tacs.problems.StaticProblem.addLoadFromBDF"]], "addloadtocomponents() (tacs.problems.staticproblem method)": [[29, "tacs.problems.StaticProblem.addLoadToComponents"]], "addloadtonodes() (tacs.problems.staticproblem method)": [[29, "tacs.problems.StaticProblem.addLoadToNodes"]], "addloadtorhs() (tacs.problems.staticproblem method)": [[29, "tacs.problems.StaticProblem.addLoadToRHS"]], "addpressuretocomponents() (tacs.problems.staticproblem method)": [[29, "tacs.problems.StaticProblem.addPressureToComponents"]], "addpressuretoelements() (tacs.problems.staticproblem method)": [[29, "tacs.problems.StaticProblem.addPressureToElements"]], "addsvsens() (tacs.problems.staticproblem method)": [[29, "tacs.problems.StaticProblem.addSVSens"]], "addtractiontocomponents() (tacs.problems.staticproblem method)": [[29, "tacs.problems.StaticProblem.addTractionToComponents"]], "addtractiontoelements() (tacs.problems.staticproblem method)": [[29, "tacs.problems.StaticProblem.addTractionToElements"]], "addtransposejacvecproduct() (tacs.problems.staticproblem method)": [[29, "tacs.problems.StaticProblem.addTransposeJacVecProduct"]], "addxptsens() (tacs.problems.staticproblem method)": [[29, "tacs.problems.StaticProblem.addXptSens"]], "dtype (tacs.problems.staticproblem attribute)": [[29, "tacs.problems.StaticProblem.dtype"]], "evalfunctions() (tacs.problems.staticproblem method)": [[29, "tacs.problems.StaticProblem.evalFunctions"]], "evalfunctionssens() (tacs.problems.staticproblem method)": [[29, "tacs.problems.StaticProblem.evalFunctionsSens"]], "getdesignvarrange() (tacs.problems.staticproblem method)": [[29, "tacs.problems.StaticProblem.getDesignVarRange"]], "getdesignvars() (tacs.problems.staticproblem method)": [[29, "tacs.problems.StaticProblem.getDesignVars"]], "getforces() (tacs.problems.staticproblem method)": [[29, "tacs.problems.StaticProblem.getForces"]], "getfunctionkeys() (tacs.problems.staticproblem method)": [[29, "tacs.problems.StaticProblem.getFunctionKeys"]], "getjacobian() (tacs.problems.staticproblem method)": [[29, "tacs.problems.StaticProblem.getJacobian"]], "getloadscale() (tacs.problems.staticproblem method)": [[29, "tacs.problems.StaticProblem.getLoadScale"]], "getnodes() (tacs.problems.staticproblem method)": [[29, "tacs.problems.StaticProblem.getNodes"]], "getnumcoordinates() (tacs.problems.staticproblem method)": [[29, "tacs.problems.StaticProblem.getNumCoordinates"]], "getnumdesignvars() (tacs.problems.staticproblem method)": [[29, "tacs.problems.StaticProblem.getNumDesignVars"]], "getnumownednodes() (tacs.problems.staticproblem method)": [[29, "tacs.problems.StaticProblem.getNumOwnedNodes"]], "getnumvariables() (tacs.problems.staticproblem method)": [[29, "tacs.problems.StaticProblem.getNumVariables"]], "getoption() (tacs.problems.staticproblem method)": [[29, "tacs.problems.StaticProblem.getOption"]], "getoutputfilename() (tacs.problems.staticproblem method)": [[29, "tacs.problems.StaticProblem.getOutputFileName"]], "getresidual() (tacs.problems.staticproblem method)": [[29, "tacs.problems.StaticProblem.getResidual"]], "getvariables() (tacs.problems.staticproblem method)": [[29, "tacs.problems.StaticProblem.getVariables"]], "getvarspernode() (tacs.problems.staticproblem method)": [[29, "tacs.problems.StaticProblem.getVarsPerNode"]], "isnonlinear (tacs.problems.staticproblem property)": [[29, "tacs.problems.StaticProblem.isNonlinear"]], "loadscale (tacs.problems.staticproblem property)": [[29, "tacs.problems.StaticProblem.loadScale"]], "printdefaultoptions() (tacs.problems.staticproblem class method)": [[29, "tacs.problems.StaticProblem.printDefaultOptions"]], "printmodifiedoptions() (tacs.problems.staticproblem method)": [[29, "tacs.problems.StaticProblem.printModifiedOptions"]], "printoptions() (tacs.problems.staticproblem method)": [[29, "tacs.problems.StaticProblem.printOptions"]], "setdesignvars() (tacs.problems.staticproblem method)": [[29, "tacs.problems.StaticProblem.setDesignVars"]], "setloadscale() (tacs.problems.staticproblem method)": [[29, "tacs.problems.StaticProblem.setLoadScale"]], "setnodes() (tacs.problems.staticproblem method)": [[29, "tacs.problems.StaticProblem.setNodes"]], "setoption() (tacs.problems.staticproblem method)": [[29, "tacs.problems.StaticProblem.setOption"]], "setoptions() (tacs.problems.staticproblem method)": [[29, "tacs.problems.StaticProblem.setOptions"]], "setvarname() (tacs.problems.staticproblem method)": [[29, "tacs.problems.StaticProblem.setVarName"]], "setvariables() (tacs.problems.staticproblem method)": [[29, "tacs.problems.StaticProblem.setVariables"]], "solve() (tacs.problems.staticproblem method)": [[29, "tacs.problems.StaticProblem.solve"]], "solveadjoint() (tacs.problems.staticproblem method)": [[29, "tacs.problems.StaticProblem.solveAdjoint"]], "tacs.problems.static": [[29, "module-tacs.problems.static"]], "updatejacobian() (tacs.problems.staticproblem method)": [[29, "tacs.problems.StaticProblem.updateJacobian"]], "updatepreconditioner() (tacs.problems.staticproblem method)": [[29, "tacs.problems.StaticProblem.updatePreconditioner"]], "writeloadtobdf() (tacs.problems.staticproblem method)": [[29, "tacs.problems.StaticProblem.writeLoadToBDF"]], "writesensfile() (tacs.problems.staticproblem method)": [[29, "tacs.problems.StaticProblem.writeSensFile"]], "writesolution() (tacs.problems.staticproblem method)": [[29, "tacs.problems.StaticProblem.writeSolution"]], "writesolutionhistory() (tacs.problems.staticproblem method)": [[29, "tacs.problems.StaticProblem.writeSolutionHistory"]], "zeroloads() (tacs.problems.staticproblem method)": [[29, "tacs.problems.StaticProblem.zeroLoads"]], "zerovariables() (tacs.problems.staticproblem method)": [[29, "tacs.problems.StaticProblem.zeroVariables"]], "transientproblem (class in tacs.problems)": [[30, "tacs.problems.TransientProblem"]], "addcentrifugalload() (tacs.problems.transientproblem method)": [[30, "tacs.problems.TransientProblem.addCentrifugalLoad"]], "addfunction() (tacs.problems.transientproblem method)": [[30, "tacs.problems.TransientProblem.addFunction"]], "addinertialload() (tacs.problems.transientproblem method)": [[30, "tacs.problems.TransientProblem.addInertialLoad"]], "addloadfrombdf() (tacs.problems.transientproblem method)": [[30, "tacs.problems.TransientProblem.addLoadFromBDF"]], "addloadtocomponents() (tacs.problems.transientproblem method)": [[30, "tacs.problems.TransientProblem.addLoadToComponents"]], "addloadtonodes() (tacs.problems.transientproblem method)": [[30, "tacs.problems.TransientProblem.addLoadToNodes"]], "addloadtorhs() (tacs.problems.transientproblem method)": [[30, "tacs.problems.TransientProblem.addLoadToRHS"]], "addpressuretocomponents() (tacs.problems.transientproblem method)": [[30, "tacs.problems.TransientProblem.addPressureToComponents"]], "addpressuretoelements() (tacs.problems.transientproblem method)": [[30, "tacs.problems.TransientProblem.addPressureToElements"]], "addtractiontocomponents() (tacs.problems.transientproblem method)": [[30, "tacs.problems.TransientProblem.addTractionToComponents"]], "addtractiontoelements() (tacs.problems.transientproblem method)": [[30, "tacs.problems.TransientProblem.addTractionToElements"]], "dtype (tacs.problems.transientproblem attribute)": [[30, "tacs.problems.TransientProblem.dtype"]], "evalfunctions() (tacs.problems.transientproblem method)": [[30, "tacs.problems.TransientProblem.evalFunctions"]], "evalfunctionssens() (tacs.problems.transientproblem method)": [[30, "tacs.problems.TransientProblem.evalFunctionsSens"]], "getdesignvarrange() (tacs.problems.transientproblem method)": [[30, "tacs.problems.TransientProblem.getDesignVarRange"]], "getdesignvars() (tacs.problems.transientproblem method)": [[30, "tacs.problems.TransientProblem.getDesignVars"]], "getfunctionkeys() (tacs.problems.transientproblem method)": [[30, "tacs.problems.TransientProblem.getFunctionKeys"]], "getnodes() (tacs.problems.transientproblem method)": [[30, "tacs.problems.TransientProblem.getNodes"]], "getnumcoordinates() (tacs.problems.transientproblem method)": [[30, "tacs.problems.TransientProblem.getNumCoordinates"]], "getnumdesignvars() (tacs.problems.transientproblem method)": [[30, "tacs.problems.TransientProblem.getNumDesignVars"]], "getnumownednodes() (tacs.problems.transientproblem method)": [[30, "tacs.problems.TransientProblem.getNumOwnedNodes"]], "getnumtimestages() (tacs.problems.transientproblem method)": [[30, "tacs.problems.TransientProblem.getNumTimeStages"]], "getnumtimesteps() (tacs.problems.transientproblem method)": [[30, "tacs.problems.TransientProblem.getNumTimeSteps"]], "getnumvariables() (tacs.problems.transientproblem method)": [[30, "tacs.problems.TransientProblem.getNumVariables"]], "getoption() (tacs.problems.transientproblem method)": [[30, "tacs.problems.TransientProblem.getOption"]], "gettimestages() (tacs.problems.transientproblem method)": [[30, "tacs.problems.TransientProblem.getTimeStages"]], "gettimesteps() (tacs.problems.transientproblem method)": [[30, "tacs.problems.TransientProblem.getTimeSteps"]], "getvariables() (tacs.problems.transientproblem method)": [[30, "tacs.problems.TransientProblem.getVariables"]], "getvarspernode() (tacs.problems.transientproblem method)": [[30, "tacs.problems.TransientProblem.getVarsPerNode"]], "isnonlinear (tacs.problems.transientproblem property)": [[30, "tacs.problems.TransientProblem.isNonlinear"]], "iterate() (tacs.problems.transientproblem method)": [[30, "tacs.problems.TransientProblem.iterate"]], "prepiterativesolve() (tacs.problems.transientproblem method)": [[30, "tacs.problems.TransientProblem.prepIterativeSolve"]], "printdefaultoptions() (tacs.problems.transientproblem class method)": [[30, "tacs.problems.TransientProblem.printDefaultOptions"]], "printmodifiedoptions() (tacs.problems.transientproblem method)": [[30, "tacs.problems.TransientProblem.printModifiedOptions"]], "printoptions() (tacs.problems.transientproblem method)": [[30, "tacs.problems.TransientProblem.printOptions"]], "setdesignvars() (tacs.problems.transientproblem method)": [[30, "tacs.problems.TransientProblem.setDesignVars"]], "setinitconditions() (tacs.problems.transientproblem method)": [[30, "tacs.problems.TransientProblem.setInitConditions"]], "setnodes() (tacs.problems.transientproblem method)": [[30, "tacs.problems.TransientProblem.setNodes"]], "setoption() (tacs.problems.transientproblem method)": [[30, "tacs.problems.TransientProblem.setOption"]], "setoptions() (tacs.problems.transientproblem method)": [[30, "tacs.problems.TransientProblem.setOptions"]], "setvarname() (tacs.problems.transientproblem method)": [[30, "tacs.problems.TransientProblem.setVarName"]], "solve() (tacs.problems.transientproblem method)": [[30, "tacs.problems.TransientProblem.solve"]], "tacs.problems.transient": [[30, "module-tacs.problems.transient"]], "writesensfile() (tacs.problems.transientproblem method)": [[30, "tacs.problems.TransientProblem.writeSensFile"]], "writesolution() (tacs.problems.transientproblem method)": [[30, "tacs.problems.TransientProblem.writeSolution"]], "zeroloads() (tacs.problems.transientproblem method)": [[30, "tacs.problems.TransientProblem.zeroLoads"]], "volumeconstraint (class in tacs.constraints)": [[31, "tacs.constraints.VolumeConstraint"]], "addconstraint() (tacs.constraints.volumeconstraint method)": [[31, "tacs.constraints.VolumeConstraint.addConstraint"]], "dtype (tacs.constraints.volumeconstraint attribute)": [[31, "tacs.constraints.VolumeConstraint.dtype"]], "evalconstraints() (tacs.constraints.volumeconstraint method)": [[31, "tacs.constraints.VolumeConstraint.evalConstraints"]], "evalconstraintssens() (tacs.constraints.volumeconstraint method)": [[31, "tacs.constraints.VolumeConstraint.evalConstraintsSens"]], "getconstraintbounds() (tacs.constraints.volumeconstraint method)": [[31, "tacs.constraints.VolumeConstraint.getConstraintBounds"]], "getconstraintkeys() (tacs.constraints.volumeconstraint method)": [[31, "tacs.constraints.VolumeConstraint.getConstraintKeys"]], "getconstraintsizes() (tacs.constraints.volumeconstraint method)": [[31, "tacs.constraints.VolumeConstraint.getConstraintSizes"]], "getdesignvarrange() (tacs.constraints.volumeconstraint method)": [[31, "tacs.constraints.VolumeConstraint.getDesignVarRange"]], "getdesignvars() (tacs.constraints.volumeconstraint method)": [[31, "tacs.constraints.VolumeConstraint.getDesignVars"]], "getnodes() (tacs.constraints.volumeconstraint method)": [[31, "tacs.constraints.VolumeConstraint.getNodes"]], "getnumcoordinates() (tacs.constraints.volumeconstraint method)": [[31, "tacs.constraints.VolumeConstraint.getNumCoordinates"]], "getnumdesignvars() (tacs.constraints.volumeconstraint method)": [[31, "tacs.constraints.VolumeConstraint.getNumDesignVars"]], "getnumownednodes() (tacs.constraints.volumeconstraint method)": [[31, "tacs.constraints.VolumeConstraint.getNumOwnedNodes"]], "getnumvariables() (tacs.constraints.volumeconstraint method)": [[31, "tacs.constraints.VolumeConstraint.getNumVariables"]], "getoption() (tacs.constraints.volumeconstraint method)": [[31, "tacs.constraints.VolumeConstraint.getOption"]], "getvarspernode() (tacs.constraints.volumeconstraint method)": [[31, "tacs.constraints.VolumeConstraint.getVarsPerNode"]], "printdefaultoptions() (tacs.constraints.volumeconstraint class method)": [[31, "tacs.constraints.VolumeConstraint.printDefaultOptions"]], "printmodifiedoptions() (tacs.constraints.volumeconstraint method)": [[31, "tacs.constraints.VolumeConstraint.printModifiedOptions"]], "printoptions() (tacs.constraints.volumeconstraint method)": [[31, "tacs.constraints.VolumeConstraint.printOptions"]], "setdesignvars() (tacs.constraints.volumeconstraint method)": [[31, "tacs.constraints.VolumeConstraint.setDesignVars"]], "setnodes() (tacs.constraints.volumeconstraint method)": [[31, "tacs.constraints.VolumeConstraint.setNodes"]], "setoption() (tacs.constraints.volumeconstraint method)": [[31, "tacs.constraints.VolumeConstraint.setOption"]], "setoptions() (tacs.constraints.volumeconstraint method)": [[31, "tacs.constraints.VolumeConstraint.setOptions"]], "setvarname() (tacs.constraints.volumeconstraint method)": [[31, "tacs.constraints.VolumeConstraint.setVarName"]], "tacs.constraints.volume": [[31, "module-tacs.constraints.volume"]], "writevisualization() (tacs.constraints.volumeconstraint method)": [[31, "tacs.constraints.VolumeConstraint.writeVisualization"]]}})