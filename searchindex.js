Search.setIndex({"docnames": ["caps2tacs/caps2tacs", "caps2tacs/main", "core/TACS", "core/constitutive", "core/core", "core/elements", "core/functions", "examples/Example-Beam_Optimization", "examples/Example-CRM_Optimization", "examples/Example-Composite_Optimization", "examples/Example-Plate", "examples/Example-Transient_Battery", "index", "install", "interfaces", "mphys/builder", "mphys/mphys", "pytacs/adjacency", "pytacs/base_solver", "pytacs/buckling", "pytacs/constraints", "pytacs/continuation_solver", "pytacs/dvcon", "pytacs/modal", "pytacs/newton_solver", "pytacs/panel_length", "pytacs/problems", "pytacs/pytacs", "pytacs/pytacs_module", "pytacs/solvers", "pytacs/static", "pytacs/transient", "pytacs/volume", "theory/elements_theory", "theory/shell_element", "theory/theory"], "filenames": ["caps2tacs/caps2tacs.rst", "caps2tacs/main.rst", "core/TACS.rst", "core/constitutive.rst", "core/core.rst", "core/elements.rst", "core/functions.rst", "examples/Example-Beam_Optimization.rst", "examples/Example-CRM_Optimization.rst", "examples/Example-Composite_Optimization.rst", "examples/Example-Plate.rst", "examples/Example-Transient_Battery.rst", "index.rst", "install.rst", "interfaces.rst", "mphys/builder.rst", "mphys/mphys.rst", "pytacs/adjacency.rst", "pytacs/base_solver.rst", "pytacs/buckling.rst", "pytacs/constraints.rst", "pytacs/continuation_solver.rst", "pytacs/dvcon.rst", "pytacs/modal.rst", "pytacs/newton_solver.rst", "pytacs/panel_length.rst", "pytacs/problems.rst", "pytacs/pytacs.rst", "pytacs/pytacs_module.rst", "pytacs/solvers.rst", "pytacs/static.rst", "pytacs/transient.rst", "pytacs/volume.rst", "theory/elements_theory.rst", "theory/shell_element.rst", "theory/theory.rst"], "titles": ["caps2tacs", "Installation of ESP/CAPS", "Direct", "constitutive module", "Core modules", "elements module", "functions module", "Beam optimization with MPhys", "CRM Optimization", "Composite plate optimization with MPhys", "Plate under static load", "Battery pack during thermal runaway", "TACS Overview", "Install", "Interfaces", "TacsBuilder class", "MPhys", "AdjacencyConstraint", "BaseSolver", "BucklingProblem", "Constraint classes", "ContinuationSolver", "DVConstraint", "ModalProblem", "NewtonSolver", "PanelLengthConstraint", "Problem classes", "pyTACS", "pyTACS class", "Solver classes", "StaticProblem", "TransientProblem", "VolumeConstraint", "&lt;no title&gt;", "Beam and shell elements in TACS", "Theory"], "terms": {"The": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 27, 28, 30, 31, 32, 34], "modul": [0, 1, 7, 12, 16, 28, 30, 31], "i": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 27, 28, 30, 31, 32, 34], "python": [0, 1, 2, 14, 27, 28], "interfac": [0, 2, 12, 15, 16, 19, 23, 27, 28, 30, 31], "run": [0, 1, 5, 7, 8, 9, 13, 15, 27], "tac": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 19, 22, 23, 25, 27, 28, 30, 31, 32, 35], "analysi": [0, 1, 2, 3, 5, 7, 9, 10, 11, 12, 13, 15, 16, 19, 23, 27, 28, 30, 31, 34], "geometri": [0, 1, 5, 10, 15, 34], "built": [0, 1, 6, 13], "esp": [0, 19, 23, 30, 31], "cap": [0, 19, 23, 30, 31], "engin": [0, 1, 19, 30, 31], "sketch": [0, 1], "pad": [0, 1], "top": [0, 3, 9], "pytac": [0, 2, 10, 11, 12, 14, 15, 17, 18, 19, 21, 22, 23, 24, 25, 30, 31, 32], "tacsaim": [0, 1, 19, 23, 30, 31], "from": [0, 1, 2, 5, 6, 7, 8, 9, 10, 11, 12, 15, 17, 18, 19, 21, 22, 23, 24, 25, 28, 30, 31, 32, 34], "us": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 27, 28, 30, 31, 32, 34], "funtofem": [0, 1], "size": [0, 1, 2, 17, 19, 21, 22, 23, 24, 25, 28, 30, 31, 32], "shape": [0, 1, 2, 3, 19, 23, 28, 30, 31, 34], "optim": [0, 1, 2, 3, 11, 12, 13, 15, 16, 17, 19, 22, 23, 25, 27, 30, 31, 32], "an": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 13, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 27, 28, 30, 31, 32, 34], "aerodynmam": 0, "structur": [0, 1, 2, 3, 5, 6, 7, 8, 9, 12, 13, 15, 17, 19, 22, 23, 25, 27, 28, 30, 31, 32], "under": [0, 3, 5, 7, 9, 11, 12, 34], "onewai": 0, "coupl": [0, 1, 2, 3, 7, 9, 15, 16, 19, 30, 31, 34], "fulli": [0, 3], "aerostructur": [0, 15, 19, 30], "also": [0, 2, 7, 9, 13, 24, 28, 30, 34], "provid": [0, 1, 2, 5, 16, 17, 18, 19, 21, 22, 23, 24, 25, 28, 30, 31, 32, 34], "thermoelast": [0, 1, 3, 5, 19, 28, 30, 31, 34], "properti": [0, 1, 2, 3, 5, 7, 8, 9, 10, 11, 13, 15, 18, 19, 21, 23, 24, 28, 30, 31], "through": [0, 1, 2, 3, 9, 11, 13, 14, 18, 21, 24, 28, 34], "For": [0, 1, 2, 6, 8, 9, 10, 11, 13, 16, 22, 28, 31, 32, 34], "each": [0, 2, 3, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 18, 19, 21, 22, 24, 25, 28, 30, 31, 32, 34], "design": [0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 15, 17, 19, 22, 23, 25, 27, 28, 30, 31, 32, 34], "build": [0, 1, 13], "nastran": [0, 2, 3, 10, 15, 19, 27, 28, 30, 31], "file": [0, 1, 2, 7, 8, 9, 10, 11, 13, 15, 17, 19, 22, 23, 25, 27, 28, 30, 31, 32], "mesh": [0, 1, 2, 7, 8, 9, 10, 11, 15, 17, 19, 22, 23, 25, 27, 28, 30, 31, 32, 34], "bdf": [0, 2, 3, 7, 8, 9, 10, 11, 15, 19, 27, 30, 31], "dat": 0, "which": [0, 1, 2, 5, 6, 7, 10, 11, 13, 15, 17, 18, 19, 21, 22, 23, 24, 25, 28, 30, 31, 32, 34], "ar": [0, 1, 2, 3, 5, 6, 8, 10, 11, 13, 14, 15, 17, 18, 19, 21, 22, 23, 24, 25, 27, 28, 30, 31, 32, 34], "locat": [0, 1, 2, 3, 10, 11, 13, 15, 17, 19, 22, 23, 25, 30, 31, 32, 34], "work": [0, 1, 2, 13, 28, 34], "directori": [0, 1, 2, 7, 9, 10, 11, 13, 15, 17, 19, 23, 30, 31, 32], "usual": [0, 1, 2, 3, 6, 19, 23, 24, 30, 31], "capsstruct": 0, "scratch": 0, "output": [0, 1, 2, 7, 9, 13, 15, 17, 19, 23, 24, 30, 31, 32], "can": [0, 1, 2, 3, 6, 7, 9, 10, 11, 13, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 27, 28, 30, 31, 32, 34], "store": [0, 2, 3, 17, 18, 21, 22, 24, 25, 30, 32, 34], "well": [0, 11, 28, 30, 31, 34], "f5": [0, 2, 7, 8, 9, 10, 11, 13, 15, 17, 19, 22, 23, 25, 28, 30, 31, 32], "develop": [0, 12, 13, 28], "sean": 0, "engelstad": 0, "more": [0, 1, 2, 10, 12, 13, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 27, 30, 31, 32, 34], "exampl": [0, 2, 3, 6, 7, 9, 10, 11, 15, 17, 19, 22, 23, 25, 28, 30, 31, 32, 34], "involv": [0, 1, 2, 10, 34], "cfd": [0, 1, 31], "pleas": [0, 1, 17, 19, 22, 23, 25, 30, 31, 32], "see": [0, 1, 2, 7, 9, 10, 15, 16, 22, 30, 31], "github": [0, 1, 13], "instal": [0, 12, 16], "intro": 0, "test": [0, 2, 3], "link": [1, 13], "main": [1, 16, 17, 19, 22, 23, 25, 27, 28, 30, 31, 32], "webist": 1, "follow": [1, 2, 3, 5, 6, 7, 9, 13, 15, 17, 18, 19, 21, 23, 24, 27, 28, 30, 31, 32, 34], "A": [1, 2, 3, 5, 8, 9, 14, 17, 19, 21, 24, 28, 30, 31, 32, 34], "prebuilt": 1, "distribut": [1, 2, 5, 7, 9, 19, 28, 30, 31, 34], "found": [1, 6, 7, 9, 10, 11, 28], "folder": 1, "environ": [1, 13, 16], "variabl": [1, 2, 3, 6, 7, 8, 9, 10, 11, 13, 15, 17, 18, 19, 21, 22, 23, 24, 25, 27, 28, 30, 31, 32, 34], "must": [1, 2, 10, 13, 15, 18, 19, 28, 30, 31, 32, 34], "setup": [1, 2, 3, 5, 7, 9, 10, 13, 15, 27, 28, 30, 31], "bashrc": [1, 13], "servecsm": 1, "command": [1, 13, 16], "view": 1, "csm": 1, "alia": [1, 17, 18, 19, 21, 22, 23, 24, 25, 28, 30, 31, 32], "one": [1, 2, 3, 6, 7, 9, 10, 11, 13, 15, 16, 19, 23, 24, 28, 30, 31, 34], "repeatedli": 1, "option": [1, 3, 5, 6, 7, 8, 9, 13, 15, 16, 18, 22, 25], "note": [1, 2, 13, 17, 18, 19, 21, 22, 23, 24, 25, 28, 30, 31, 32, 34], "sourc": [1, 2, 12, 15, 17, 18, 19, 21, 22, 23, 24, 25, 28, 30, 31, 32], "won": 1, "t": [1, 2, 3, 5, 6, 7, 8, 10, 11, 13, 15, 25, 28, 30, 34], "until": [1, 2, 27], "after": [1, 2, 7, 9, 10, 11, 13, 15, 24, 34], "full": [1, 2, 5, 18, 21, 24, 30, 34], "so": [1, 2, 7, 8, 10, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 28, 30, 31, 32], "you": [1, 13, 30], "ignor": [1, 3, 28], "immedi": [1, 2], "export": [1, 2, 13], "esp_root": 1, "packag": [1, 13, 16], "esp123": 1, "engsketchpad": 1, "pythonpath": 1, "pyesp": 1, "espenv": 1, "sh": 1, "bin": 1, "linux": [1, 13], "machin": [1, 13], "proce": [1, 2, 27], "opencascad": 1, "version": [1, 2, 13], "chang": [1, 3, 5, 17, 18, 19, 21, 22, 23, 24, 25, 28, 30, 31, 32, 34], "past": 1, "accordingli": [1, 13], "basic": [1, 28], "step": [1, 2, 10, 11, 17, 21, 24, 27, 28, 30, 31], "download": [1, 13], "tar": [1, 13], "unpack": 1, "inform": [1, 2, 3, 10, 13, 15, 16, 17, 19, 22, 23, 24, 25, 28, 30, 31, 32], "come": [1, 28, 30, 31], "Then": [1, 2, 11, 13], "we": [1, 2, 7, 9, 10, 11, 19, 23, 28, 30, 31, 34], "onli": [1, 2, 6, 10, 11, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 28, 30, 31, 32, 34], "need": [1, 2, 6, 13, 15, 16, 17, 19, 22, 23, 25, 28, 30, 31, 32], "make": [1, 2, 9, 21, 24], "auto": 1, "don": [1, 5, 13, 28], "rest": 1, "mkdir": 1, "cd": 1, "wget": 1, "http": [1, 13], "acdl": 1, "mit": 1, "edu": 1, "aarch64": 1, "tgz": [1, 13], "xvf": 1, "config": 1, "makeenv": 1, "7": [1, 3, 5, 19, 23, 28, 30, 31], "0": [1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 18, 19, 21, 22, 23, 24, 25, 28, 30, 31, 32, 34], "src": [1, 13], "aim": [1, 19, 21, 23, 30, 31], "caps2tac": [1, 12, 14, 19, 23, 30, 31], "import": [1, 7, 8, 9, 10, 11, 13, 14, 28, 34], "unless": [1, 2], "properli": 1, "your": [1, 5, 13], "differenti": [1, 6], "cad": 1, "defin": [1, 2, 3, 5, 7, 8, 9, 10, 11, 15, 17, 18, 19, 22, 23, 25, 28, 30, 31, 32, 34], "comput": [1, 2, 3, 5, 6, 7, 8, 10, 11, 15, 17, 18, 19, 21, 22, 23, 24, 25, 27, 28, 30, 31, 32], "solid": [1, 3, 28, 32], "model": [1, 2, 3, 6, 7, 8, 9, 10, 11, 15, 17, 19, 22, 23, 25, 27, 28, 30, 31, 32, 34], "user": [1, 2, 5, 7, 9, 10, 11, 13, 15, 16, 17, 19, 22, 23, 25, 28, 30, 31, 32], "write": [1, 2, 7, 8, 10, 11, 15, 17, 19, 22, 23, 25, 28, 30, 31, 32], "own": [1, 2, 9, 15, 17, 18, 19, 21, 22, 23, 24, 25, 28, 30, 31, 32, 34], "tutori": 1, "websit": 1, "thing": 1, "includ": [1, 2, 11, 13, 15, 19, 22, 24, 28, 30, 31], "below": [1, 3, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 19, 21, 23, 24, 27, 28, 30, 31, 32, 34], "refer": [1, 3, 5, 9], "caps_w": 1, "simple_naca_w": 1, "configur": [1, 2, 7, 9, 34], "paramet": [1, 2, 3, 5, 6, 7, 8, 15, 17, 18, 19, 21, 22, 23, 24, 25, 28, 30, 31, 32, 34], "cfgpmtr": 1, "nrib": 1, "10": [1, 3, 5, 8, 10, 17, 19, 22, 23, 25, 28, 30, 31, 32], "integ": [1, 19, 23, 28], "fix": [1, 7, 9, 10, 15, 19, 30, 31], "dure": [1, 3, 10, 12, 15, 24, 28, 30, 31, 34], "despmtr": 1, "span": [1, 7], "real": [1, 2], "number": [1, 2, 3, 5, 7, 8, 9, 11, 15, 17, 18, 19, 21, 22, 23, 24, 25, 27, 28, 30, 31, 32], "ti": [1, 2], "capsgroup": 1, "attribut": [1, 17, 18, 19, 21, 22, 23, 24, 25, 28, 30, 31, 32], "region": [1, 11, 28], "same": [1, 2, 8, 11, 13, 18, 21, 22, 24, 25, 28], "car": 1, "denot": [1, 15, 34], "rib1": [1, 28], "etc": [1, 2, 5, 13, 15, 19, 22, 28, 30, 31], "often": [1, 24, 28, 34], "pattern": [1, 11], "statement": 1, "sometim": 1, "primit": 1, "udprim": 1, "editattr": 1, "capsconstraint": 1, "intend": [1, 13, 30, 31], "have": [1, 2, 3, 9, 13, 15, 17, 18, 19, 21, 22, 23, 24, 25, 28, 30, 31, 32, 34], "constraint": [1, 2, 5, 7, 8, 9, 15, 17, 19, 22, 23, 25, 27, 28, 30, 31, 32, 34], "e": [1, 2, 3, 5, 7, 8, 9, 10, 13, 15, 19, 21, 28, 30, 31, 34], "g": [1, 2, 3, 8, 15, 21, 28, 30], "These": [1, 2, 3, 5, 6, 8, 11, 13, 14, 16, 27, 28, 34], "temperatur": [1, 3, 6, 11, 34], "elast": [1, 3, 5, 8, 19, 28, 30, 31], "right": [1, 11, 19, 30, 31, 34], "now": [1, 8, 9, 10, 11], "capsload": 1, "load": [1, 2, 3, 5, 6, 7, 8, 9, 11, 12, 15, 19, 21, 24, 27, 28, 30, 31], "thi": [1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 17, 18, 19, 21, 22, 23, 24, 25, 27, 28, 30, 31, 32, 34], "simpl": [1, 2, 8, 10], "analys": [1, 6, 10, 15, 27], "aerodynam": [1, 19, 30, 31], "cannot": [1, 2, 5, 18, 28, 34], "wai": [1, 3, 10, 28], "how": [1, 2, 10, 24, 28, 31], "do": [1, 3, 7, 9, 10, 11, 22, 28], "capsaim": 1, "specifi": [1, 2, 3, 6, 7, 8, 9, 11, 18, 19, 21, 24, 27, 28, 30, 31], "bodi": [1, 2, 5, 15, 34], "tool": [1, 5, 12], "add": [1, 2, 5, 7, 9, 10, 11, 13, 15, 19, 27, 28, 30, 31, 34], "egadstessaim": 1, "here": [1, 2, 7, 9, 10, 11, 30, 34], "occasion": 1, "capsmesh": 1, "set": [1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 18, 19, 21, 22, 23, 24, 25, 27, 28, 30, 31, 32], "altern": [1, 13, 19], "differ": [1, 2, 3, 5, 11, 15, 22, 28], "section": [1, 2, 3, 7, 16, 27, 34], "tacsmodel": 1, "object": [1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 18, 19, 21, 22, 23, 24, 25, 27, 28, 30, 31, 32, 34], "supervis": 1, "process": [1, 2, 6, 7, 9, 10, 11, 13, 28, 30, 31], "updat": [1, 3, 17, 18, 19, 21, 22, 23, 24, 25, 28, 30, 31, 32], "support": [1, 5, 13, 14, 15, 19, 23, 28, 30, 31, 32], "mpi": [1, 2, 8, 11, 13, 15, 17, 18, 19, 21, 22, 23, 24, 25, 28, 30, 31, 32], "parallel": [1, 2, 5, 12, 13, 19, 23, 30, 31], "featur": [1, 11, 13, 34], "directli": [1, 17, 18, 19, 22, 23, 25, 30, 31, 32, 34], "avail": [1, 3, 5, 6, 13, 15, 34], "comm": [1, 2, 7, 8, 9, 11, 15, 17, 18, 19, 21, 22, 23, 24, 25, 28, 30, 31, 32], "comm_world": [1, 8, 18, 21, 24], "tacs_model": 1, "csm_file": 1, "next": [1, 2, 7, 9, 10, 11, 24], "gener": [1, 2, 3, 5, 6, 8, 10, 13, 16, 17, 19, 22, 23, 25, 28, 30, 31, 32, 34], "global": [1, 2, 5, 6, 8, 15, 19, 28, 30, 31, 34], "depend": [1, 2, 5, 16, 17, 18, 19, 21, 22, 23, 24, 25, 28, 30, 31, 32, 34], "scale": [1, 2, 5, 8, 15, 19, 21, 22, 23, 28, 30, 31], "ll": [1, 10], "want": [1, 9, 11, 13, 17, 19, 22, 23, 25, 28, 30, 31, 32], "tune": 1, "hyperparamet": 1, "small": [1, 5, 24, 34], "egadsaim": 1, "routin": [1, 2, 13, 15, 17, 19, 22, 23, 25, 30, 31, 32], "get": [1, 2, 3, 5, 7, 8, 10, 11, 13, 15, 17, 18, 19, 21, 22, 23, 24, 25, 28, 30, 31, 32], "qualiti": 1, "mesh_aim": 1, "set_mesh": 1, "edge_pt_min": 1, "15": [1, 3, 19, 23, 30], "edge_pt_max": 1, "20": [1, 3, 8, 15, 17, 22, 30, 32], "global_mesh_s": 1, "25": [1, 5, 7, 9, 24], "max_surf_offset": 1, "01": [1, 11, 24, 28], "max_dihedral_angl": 1, "register_to": 1, "There": [1, 3, 6, 10, 13, 14, 28, 34], "certain": [1, 19, 24, 28, 30, 31], "regist": 1, "befor": [1, 2, 3, 6, 10, 15, 18, 19, 21, 24, 28, 30, 31], "If": [1, 2, 3, 6, 11, 13, 17, 19, 21, 22, 23, 24, 25, 28, 30, 31, 32], "correctli": 1, "throw": 1, "error": [1, 3, 13, 15], "check": [1, 11, 15, 17, 19, 22, 23, 25, 28, 30, 31, 32], "phase": [1, 3, 5], "materi": [1, 5, 7, 8, 9, 10, 11, 15, 28, 34], "element": [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 15, 17, 19, 22, 25, 27, 28, 30, 31, 32, 35], "definit": [1, 3, 6, 22, 28, 34], "type": [1, 2, 3, 5, 6, 10, 11, 13, 15, 17, 18, 19, 21, 22, 23, 24, 25, 28, 30, 31, 32], "isotrop": [1, 3, 5, 7], "orthotrop": [1, 3, 5, 34], "anisotrop": [1, 3, 5], "ad": [1, 2, 5, 7, 15, 17, 18, 19, 21, 22, 23, 24, 25, 28, 30, 31, 32, 34], "underli": [1, 15], "sever": [1, 2, 3, 6, 11, 13, 14, 28, 34], "common": [1, 2, 17, 19, 27, 28, 30, 31, 32], "save": [1, 2, 17, 18, 19, 22, 23, 24, 25, 30, 31, 32], "class": [1, 2, 6, 7, 8, 9, 10, 11, 14, 16, 17, 19, 21, 22, 23, 24, 25, 27, 30, 31, 32], "method": [1, 2, 5, 6, 10, 11, 12, 13, 14, 15, 17, 18, 19, 21, 22, 23, 24, 25, 27, 28, 30, 31, 32, 34], "aluminum": [1, 10, 11], "steel": 1, "titanium": 1, "carbon": 1, "fiber": 1, "current": [1, 2, 3, 6, 7, 9, 14, 15, 17, 18, 19, 21, 22, 23, 24, 25, 28, 30, 31, 32], "shell": [1, 3, 5, 9, 10, 12, 15, 19, 23, 28, 30, 31, 32, 35], "shellproperti": 1, "indirectli": 1, "thicknessvari": 1, "name": [1, 10, 11, 13, 15, 17, 18, 19, 21, 22, 23, 24, 25, 28, 30, 31, 32], "thick": [1, 2, 3, 7, 8, 9, 10, 11, 17, 22, 34], "thermal": [1, 3, 12, 15], "instanc": [1, 2, 6, 11, 15, 17, 18, 19, 21, 23, 24, 27, 28, 30, 31, 32], "pinconstraint": 1, "temperatureconstraint": 1, "input": [1, 2, 6, 7, 9, 10, 11, 15, 28, 30], "match": [1, 22, 28], "static": [1, 2, 6, 7, 9, 12, 19, 28, 30, 34], "problem": [1, 2, 5, 6, 7, 8, 9, 10, 11, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 27, 28, 30, 31, 32], "gridforc": 1, "pressur": [1, 9, 19, 30, 31], "whose": 1, "softwar": [1, 7, 13], "repo": 1, "function": [1, 2, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 21, 23, 24, 27, 28, 30, 31, 32, 34], "ksfailur": [1, 2, 6, 7, 8, 10, 15], "mass": [1, 2, 3, 5, 6, 7, 8, 10, 15, 28, 30, 31, 34], "complianc": [1, 6, 9], "onc": [1, 2, 7, 9, 13, 17, 18, 19, 21, 22, 23, 24, 25, 28, 30, 31, 32], "all": [1, 2, 3, 6, 8, 9, 10, 11, 13, 14, 15, 17, 18, 19, 21, 22, 23, 24, 25, 28, 30, 31, 32], "abov": [1, 7, 9, 13, 28], "readi": 1, "complet": [1, 2, 7, 9, 13, 28, 34], "pre_analysi": 1, "run_analysi": 1, "solut": [1, 7, 8, 9, 10, 11, 15, 17, 18, 19, 21, 23, 24, 28, 30, 31, 32], "final": [1, 2, 7, 8, 9, 10, 11, 21, 28], "post_analysi": 1, "valu": [1, 2, 3, 6, 7, 8, 9, 11, 15, 17, 18, 19, 21, 22, 23, 24, 25, 27, 28, 30, 31, 32, 34], "deriv": [1, 2, 8, 13, 15, 17, 18, 19, 22, 23, 25, 30, 31, 32, 34], "adjoint": [1, 2, 8, 30], "include_aim": 1, "true": [1, 6, 7, 8, 9, 10, 15, 17, 19, 23, 24, 25, 28, 30, 31, 32], "five": 1, "coars": 1, "symmetr": [1, 3], "naca": 1, "0012": 1, "wing": [1, 12], "1": [1, 2, 3, 5, 6, 7, 8, 9, 11, 13, 15, 17, 19, 21, 22, 23, 24, 25, 28, 30, 31, 32, 34], "steadi": [1, 5], "egad": 1, "vertic": 1, "2": [1, 2, 3, 5, 6, 8, 9, 11, 13, 15, 21, 23, 24, 25, 28, 30, 31, 34], "unsteadi": 1, "vari": [1, 2, 11, 15, 17, 34], "sinusoid": 1, "time": [1, 2, 7, 11, 15, 17, 19, 23, 24, 28, 30, 31, 32, 34], "3": [1, 3, 5, 7, 8, 9, 10, 11, 13, 15, 17, 19, 22, 23, 25, 28, 30, 31, 32, 34], "find": [1, 24, 34], "panel": [1, 3, 17, 22, 25, 28], "hold": [1, 3, 15, 17, 18, 19, 21, 22, 23, 24, 25, 28, 30, 31, 32, 34], "aero": 1, "4": [1, 2, 3, 5, 19, 27, 28, 30, 31], "rib": [1, 28], "spar": [1, 28], "insid": [1, 28], "aflr": 1, "shown": [1, 3, 7, 9, 11, 30], "result": [1, 2, 6, 7, 9, 17, 18, 19, 21, 22, 23, 24, 25, 30, 31, 32, 34], "about": [1, 3, 6, 15, 28, 34], "40": [1, 24], "drop": 1, "weight": [1, 2, 3, 5, 6, 22, 28], "equal": [1, 3, 8, 9, 11, 25], "notic": 1, "ha": [1, 2, 6, 10, 11, 12, 13, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 27, 28, 30, 31, 32], "largest": 1, "root": [1, 13, 17, 18, 19, 21, 22, 23, 24, 25, 28, 30, 31, 32], "relat": [1, 9, 18, 24, 28], "beam": [1, 2, 3, 5, 12, 35], "bend": [1, 34], "clamp": [1, 9], "27": [1, 5], "suggest": 1, "placement": 1, "veri": [1, 2, 24], "good": [1, 3, 21], "In": [1, 2, 9, 10, 11, 13, 19, 24, 28, 30, 31, 34], "case": [1, 2, 6, 10, 11, 17, 18, 19, 21, 22, 23, 24, 25, 28, 30, 31, 32, 34], "move": 1, "toward": 1, "lead": [1, 11, 28], "edg": [1, 5, 9, 28], "higher": [1, 24, 34], "curvatur": 1, "two": [1, 2, 5, 6, 10, 11, 13, 17, 21, 27, 28, 34], "unittest": 1, "verifi": 1, "integration_test": 1, "test_caps_shape_deriv": 1, "py": [1, 13, 28], "test_caps_thick_deriv": 1, "respons": [2, 3, 10, 15, 17, 19, 22, 23, 25, 28, 30, 31, 32, 34], "up": [2, 7, 8, 9, 10, 11, 13, 15, 21, 28], "bookkeep": 2, "most": [2, 3, 6, 14, 19, 27, 28, 30, 31], "like": [2, 3, 5, 6, 7, 9, 11, 13, 17, 19, 22, 23, 25, 30, 31, 32], "state": [2, 5, 8, 17, 18, 19, 21, 22, 23, 24, 25, 28, 30, 31, 32, 34], "vector": [2, 5, 6, 15, 17, 18, 19, 21, 22, 23, 24, 25, 28, 30, 31, 32, 34], "fe": [2, 19, 30, 31], "matric": 2, "approach": [2, 10, 14, 27, 28, 34], "allow": [2, 10, 15, 18, 21, 24, 28], "visibl": 2, "c": [2, 3, 8, 14, 16, 17, 22, 28, 30, 34], "code": [2, 12], "daunt": 2, "new": [2, 7, 8, 9, 13, 15, 17, 18, 19, 21, 22, 23, 24, 25, 28, 30, 31, 32], "simplifi": [2, 34], "where": [2, 3, 6, 10, 11, 17, 18, 19, 21, 22, 23, 24, 25, 28, 30, 31, 32, 34], "been": [2, 10, 11, 12, 13, 15, 17, 18, 19, 21, 22, 23, 24, 25, 28, 30, 31, 32, 34], "autom": [2, 27], "usag": [2, 27], "evalu": [2, 3, 6, 7, 8, 9, 10, 11, 13, 15, 17, 18, 19, 21, 22, 23, 24, 25, 27, 30, 31, 32, 34], "gradient": [2, 3, 6, 7, 8, 9, 10, 12, 13, 24, 27, 28, 34], "desir": [2, 8, 19, 23, 27, 28, 30, 31], "respect": [2, 6, 7, 8, 9, 10, 11, 13, 17, 19, 22, 23, 25, 27, 30, 31, 32, 34], "finit": [2, 6, 12, 13, 27, 34], "form": [2, 15, 17, 21, 22, 27, 28, 34], "style": [2, 27], "compon": [2, 5, 6, 7, 8, 9, 11, 15, 17, 19, 22, 30, 31], "constitut": [2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 25, 28, 30], "creat": [2, 7, 8, 9, 10, 11, 13, 14, 15, 17, 18, 19, 21, 22, 23, 24, 25, 27, 28, 30, 31, 32, 34], "appli": [2, 5, 6, 7, 8, 9, 10, 11, 19, 22, 25, 27, 28, 30, 31], "boundari": [2, 10, 15, 17, 28], "condit": [2, 10, 15, 28, 30, 31], "solv": [2, 8, 9, 10, 11, 17, 18, 19, 21, 22, 23, 24, 25, 27, 28, 30, 31, 32], "system": [2, 5, 8, 13, 30, 34], "pass": [2, 3, 6, 7, 9, 10, 11, 15, 18, 24, 25, 27, 28, 30, 31], "paropt": [2, 8, 27], "order": [2, 3, 9, 13, 15, 16, 18, 19, 24, 27, 28, 30, 31, 34], "minim": [2, 7, 8, 9, 27], "particular": [2, 6, 9, 27, 28], "subject": [2, 7, 8, 9, 27], "some": [2, 5, 6, 10, 27, 28, 34], "improv": [2, 24, 27], "iter": [2, 7, 8, 9, 15, 17, 18, 19, 21, 22, 23, 24, 25, 27, 30, 31, 32], "repeat": [2, 27], "criteria": [2, 6, 10, 21, 24, 27], "satisfi": [2, 24, 27, 34], "It": [2, 5, 10, 17, 18, 19, 22, 23, 25, 28, 30, 31, 32, 34], "contain": [2, 3, 5, 7, 8, 9, 13, 14, 15, 17, 19, 22, 23, 25, 28, 30, 31, 32, 34], "its": [2, 6, 9, 10, 11, 15, 16, 34], "typic": [2, 3, 17, 19, 22, 23, 25, 27, 28, 30, 31, 32, 34], "applybc": [2, 8], "solver": [2, 8, 15, 16, 17, 19, 22, 23, 25, 27, 28, 31, 32], "createvec": [2, 8, 28], "createfemat": [2, 8], "setdesignvar": [2, 8, 17, 19, 22, 23, 25, 30, 31, 32], "vale": 2, "evalfunct": [2, 8, 10, 11, 19, 23, 28, 30, 31], "call": [2, 3, 7, 8, 10, 11, 13, 15, 16, 18, 19, 21, 23, 24, 27, 28, 30, 31, 34], "adddvsen": [2, 19, 30], "addsvsen": [2, 30], "addadjointresproduct": [2, 30], "adjlist": 2, "dfdxlist": 2, "alpha": [2, 3, 8, 24], "loadscal": [2, 30], "collect": [2, 15, 28, 34], "tacsassembl": 2, "product": [2, 3, 5, 6, 8, 13, 30], "residu": [2, 8, 15, 18, 19, 21, 23, 24, 28, 30, 31], "w": [2, 3, 7, 8, 11, 13, 25, 28], "r": [2, 7, 8, 18, 21, 24, 25, 28, 30, 34], "simultan": 2, "reus": 2, "perform": [2, 3, 7, 9, 12, 18, 21, 24, 28], "task": 2, "evaladjointresproduct": [2, 8], "memori": 2, "than": [2, 8, 11, 17, 18, 19, 21, 22, 23, 24, 25, 30, 31, 32], "arrai": [2, 3, 5, 6, 7, 9, 10, 11, 15, 17, 19, 22, 23, 25, 28, 30, 31, 32], "dvsen": 2, "num_dv": 2, "factor": [2, 3, 5, 6, 8, 15, 19, 21, 22, 23, 28, 30, 31], "aux": [2, 30], "contribut": [2, 3, 9, 19, 30, 34], "default": [2, 3, 5, 6, 10, 13, 15, 17, 18, 19, 21, 22, 23, 24, 25, 28, 30, 31, 32], "addadjointresxptsensproduct": [2, 30], "node": [2, 3, 5, 8, 10, 11, 15, 17, 19, 22, 23, 25, 28, 30, 31, 32, 34], "funclist": 2, "list": [2, 3, 8, 9, 15, 17, 19, 21, 22, 23, 24, 25, 28, 30, 31, 32], "addjacobianvecproduct": 2, "beta": [2, 8], "gamma": [2, 8, 24], "x": [2, 3, 5, 6, 7, 8, 9, 10, 17, 19, 22, 23, 25, 28, 30, 31, 32, 34], "y": [2, 3, 5, 6, 7, 8, 10, 15, 34], "mator": 2, "jacobian": [2, 8, 21, 24, 30, 31, 34], "addmatdvsensinnerproduct": 2, "mattyp": 2, "psi": 2, "phi": [2, 30], "dfdx": [2, 8], "inner": [2, 3, 21], "matrix": [2, 3, 5, 8, 17, 19, 21, 22, 23, 24, 25, 30, 31, 32, 34], "sensit": [2, 10, 11, 17, 18, 19, 21, 22, 23, 24, 25, 28, 30, 31, 32], "dfdulist": 2, "pointer": 2, "vec": [2, 17, 18, 19, 21, 22, 23, 24, 25, 28, 30, 31, 32], "addxptsen": [2, 19, 30], "applymatbc": 2, "mat": [2, 3, 8], "assemblejacobian": [2, 8], "dirichlet": [2, 28], "zero": [2, 3, 8, 18, 19, 21, 24, 25, 28, 30, 31], "row": [2, 17, 22, 25, 32], "associ": [2, 3, 5, 19, 23, 28, 30, 31], "diagon": [2, 5, 11, 19, 23, 30, 31], "uniti": [2, 6, 9], "assembli": 2, "ani": [2, 7, 8, 10, 13, 15, 18, 21, 24, 28, 30, 31], "commun": [2, 15], "requir": [2, 3, 5, 6, 7, 8, 9, 10, 11, 13, 18, 19, 21, 24, 30, 31, 34], "coeffici": [2, 3, 34], "term": [2, 30, 34], "second": [2, 5, 6, 10, 11, 28, 31, 34], "govern": [2, 34], "equat": [2, 17, 18, 19, 21, 22, 24, 25, 30, 31, 32], "orient": [2, 5, 13, 34], "normal": [2, 5, 6, 34], "transpos": [2, 30], "assemblematcombo": 2, "mattype1": 2, "scale1": 2, "mattype2": 2, "scale2": 2, "combin": [2, 3, 28, 34], "assemblemattyp": 2, "assembler": 2, "traction": [2, 19, 30, 31], "tacssurfacetract": 2, "point": [2, 3, 5, 7, 8, 9, 10, 15, 19, 24, 28, 30, 31, 34], "entri": [2, 3, 10, 15, 19, 30, 31], "first": [2, 3, 5, 6, 7, 8, 9, 10, 11, 19, 24, 28, 30, 31, 34], "rh": [2, 19, 30, 31], "computereord": 2, "order_typ": 2, "mat_typ": 2, "reorder": 2, "unknown": 2, "initi": [2, 3, 7, 8, 9, 10, 11, 15, 17, 18, 19, 21, 22, 23, 24, 25, 27, 30, 31, 32, 34], "copyvari": 2, "none": [2, 5, 8, 10, 15, 17, 18, 19, 21, 22, 23, 24, 25, 28, 30, 31, 32], "dvec": 2, "ddvec": 2, "varspernod": [2, 5, 19, 30, 31], "numownednod": [2, 31], "numel": 2, "numdependentnod": 2, "factori": 2, "createdesignvec": [2, 28], "createmat": 2, "createnodevec": [2, 28], "createschurmat": 2, "special": [2, 28], "suit": 2, "On": [2, 9], "scheme": [2, 15, 21, 31], "subsequ": 2, "": [2, 3, 5, 7, 8, 9, 10, 11, 13, 15, 18, 19, 21, 22, 23, 24, 25, 28, 30, 31, 34], "femat": 2, "non": [2, 28], "togeth": 2, "easier": [2, 28], "eigenvalu": [2, 19, 23, 28], "determin": [2, 3, 5, 6, 15, 19, 23, 28, 30, 31, 34], "serial": 2, "other": [2, 5, 7, 11, 13, 16, 18, 28, 30, 31], "separ": [2, 6, 15, 28], "end": [2, 13, 15, 28, 31, 34], "block": [2, 11], "while": [2, 6, 28], "local": [2, 3, 5, 7, 9, 28], "impos": [2, 34], "kludg": 2, "within": [2, 3, 6, 9, 11, 13, 16, 22, 28, 34], "hopefulli": 2, "reduc": [2, 21, 34], "fill": [2, 30], "ins": 2, "although": 2, "firm": 2, "proof": 2, "back": [2, 7, 9, 10, 11], "place": [2, 3, 8, 13, 19, 22, 23, 30, 31], "fematbindic": 2, "fematcindic": 2, "map": 2, "mathemat": 2, "written": [2, 13, 28, 34], "a1": 2, "p": [2, 9], "permut": 2, "column": 2, "thei": [2, 7, 8, 13, 25, 28, 34], "share": [2, 28], "exactli": 2, "layout": 2, "evalenergi": 2, "kinet": [2, 34], "potenti": [2, 34], "energi": [2, 6, 9, 11, 24, 34], "getbcmap": 2, "getdesignvarrang": [2, 8, 17, 19, 22, 23, 25, 28, 30, 31, 32], "lb": [2, 8], "ub": [2, 8], "retriev": [2, 28], "rang": [2, 8, 31], "individu": [2, 19, 30, 31], "mai": [2, 5, 6, 13, 15, 18, 21, 24, 28], "consist": [2, 3, 16, 21, 25, 27, 34], "someon": 2, "incorrect": 2, "data": [2, 8, 18, 19, 21, 23, 24, 28, 30, 31, 34], "could": [2, 11], "best": [2, 13], "guess": [2, 18, 19, 21, 23, 24, 28], "take": [2, 10, 11, 17, 19, 21, 24, 28, 30, 31, 34], "minimum": [2, 3, 10, 13, 21, 24], "upper": [2, 3, 7, 8, 9, 15, 17, 19, 22, 23, 24, 25, 28, 30, 31, 32], "bound": [2, 3, 8, 15, 17, 19, 22, 23, 24, 25, 28, 30, 31, 32], "maximum": [2, 6, 8, 10, 11, 21, 24], "lower": [2, 3, 7, 8, 9, 15, 17, 19, 22, 23, 24, 25, 28, 30, 31, 32], "lowerbound": [2, 3], "upperbound": [2, 3], "numdv": 2, "getdesignvar": [2, 8, 17, 19, 22, 23, 25, 30, 31, 32], "assign": [2, 3, 7, 8, 9, 10, 15, 28, 30], "doe": [2, 28], "ensur": [2, 13, 15, 17, 28, 32], "between": [2, 3, 24, 28, 34], "inconsist": [2, 6], "begin": [2, 9, 34], "return": [2, 3, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 18, 19, 21, 22, 23, 24, 25, 28, 30, 31, 32], "them": [2, 3, 6, 8, 11], "maintain": 2, "multipli": [2, 5, 15, 19, 23, 28, 30, 31, 34], "correspond": [2, 3, 11, 13, 15, 17, 19, 22, 23, 25, 28, 30, 31, 32], "undefin": 2, "behaviour": [2, 28], "getelementdata": 2, "num": [2, 28], "getelementnod": 2, "given": [2, 5, 6, 11, 15, 19, 28, 30, 31, 34], "getel": 2, "getinitcondit": 2, "getmpicomm": 2, "getnod": [2, 17, 19, 22, 23, 25, 30, 31, 32], "getnumdependentnod": 2, "getnumel": 2, "getnumnod": 2, "getnumownednod": [2, 17, 19, 22, 23, 25, 28, 30, 31, 32], "getownerrang": 2, "processor": [2, 8, 15, 17, 18, 19, 21, 22, 23, 24, 25, 28, 30, 31, 32], "getreord": 2, "getsimulationtim": 2, "simul": [2, 11], "getvari": [2, 19, 23, 30, 31], "getvarspernod": [2, 17, 19, 22, 23, 25, 28, 30, 31, 32], "per": [2, 17, 19, 22, 23, 25, 28, 30, 31, 32], "when": [2, 11, 13, 15, 21, 24, 27, 28, 30, 34], "tacscreat": 2, "reordervec": 2, "base": [2, 3, 5, 6, 8, 9, 10, 12, 13, 15, 17, 19, 21, 23, 24, 28, 30, 31, 32, 34], "setauxel": 2, "elem": [2, 7, 9, 10, 11, 15], "auxiliari": 2, "setbcvaluesfromvec": 2, "bc": 2, "setbc": 2, "setdependentnod": 2, "ptr": 2, "conn": 2, "connect": [2, 5, 7, 9, 16, 28], "howev": [2, 28, 34], "setelementconnect": 2, "setel": [2, 8], "setinitcondit": [2, 31], "setnod": [2, 17, 19, 22, 23, 25, 30, 31, 32], "setnumthread": 2, "thread": 2, "setsimulationtim": 2, "setvari": [2, 8, 30], "testel": 2, "elemnum": 2, "print_level": 2, "dh": 2, "1e": [2, 3, 8, 15, 17, 19, 21, 22, 23, 24, 28, 30, 31, 32], "06": 2, "rtol": 2, "08": [2, 21, 24], "atol": 2, "implement": [2, 6, 12, 13, 14, 18, 19, 21, 23, 24, 25, 28, 30, 31, 35], "stiff": [2, 3, 5, 8, 9, 10, 19, 23, 30, 31, 34], "variou": [2, 30, 31], "part": [2, 19, 25, 28, 30, 31, 34], "strain": [2, 3, 5, 6, 8, 28], "nodal": [2, 19, 28, 30, 32, 34], "coordin": [2, 5, 15, 17, 19, 22, 23, 25, 28, 30, 31, 32, 34], "print": [2, 7, 9, 11, 17, 18, 19, 21, 22, 23, 24, 25, 28, 30, 31, 32], "level": [2, 14, 19, 23, 30, 31], "testfunct": 2, "func": [2, 8, 10, 11, 17, 19, 22, 23, 25, 30, 31, 32], "interest": [2, 10, 11, 13, 27], "random": 2, "perturb": 2, "should": [2, 3, 5, 6, 7, 9, 10, 13, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 28, 30, 31, 32, 34], "randomli": 2, "otherwis": [2, 11, 30], "produc": [2, 10, 11, 34], "unrealist": 2, "central": 2, "compil": 2, "complex": [2, 3, 17, 22, 25, 30, 32], "approxim": [2, 6, 8, 11, 13, 19, 30, 34], "zeroddotvari": 2, "2nd": 2, "zerodotvari": 2, "zerovari": [2, 8, 30], "read": [2, 8, 10, 15, 18, 19, 21, 23, 24, 28, 30, 31], "fem": [2, 7], "scanbdffil": [2, 8], "getnumcompon": [2, 8, 28], "addauxel": 2, "comp_num": 2, "addfunctiondomain": 2, "comp_list": 2, "domain": [2, 6, 11, 15, 28], "createtac": [2, 8], "distribtu": 2, "getbc": 2, "getcomponentdescript": 2, "descript": [2, 10, 15, 17, 19, 21, 23, 24, 28, 30, 31, 32], "getconnect": 2, "getelementdescript": [2, 8], "fname": 2, "scan": 2, "bulk": 2, "elem_typ": 2, "grid": [2, 5, 11, 15, 19, 28, 30, 31], "similar": [2, 15], "manual": [2, 13, 16], "rather": [2, 8, 18, 21, 24], "setboundarycondit": 2, "getelementpartit": 2, "partit": [2, 28, 30], "bcptr": 2, "bcvar": 2, "bcval": 2, "setglobalconnect": 2, "num_nod": [2, 5, 34], "node_ptr": 2, "node_conn": 2, "id_num": 2, "id": [2, 3, 10, 11, 15, 19, 28, 30, 31], "natur": [2, 5, 9, 28], "frequenc": [2, 23, 28, 30], "eigenproblem": 2, "extract": 2, "eigenvector": [2, 19, 23], "mode": [2, 3, 7, 9, 15, 19, 23, 28], "lowest": [2, 19, 23, 28], "forward": [2, 15], "dirk": [2, 31], "abm": 2, "nbg": 2, "inherit": [2, 6, 34], "checkgradi": [2, 8], "self": [2, 7, 8, 9, 17, 19, 22, 23, 25, 30, 31, 32], "doubl": [2, 5, 6, 28, 34], "fd": 2, "csd": 2, "verif": 2, "getadjoint": 2, "int": [2, 3, 5, 6, 15, 17, 18, 19, 21, 22, 23, 24, 25, 28, 30, 31, 32, 34], "step_num": 2, "func_num": 2, "getgradi": 2, "getnumtimestep": [2, 31], "getstat": 2, "time_step": 2, "getxptgradi": 2, "initadjoint": 2, "integrateadjoint": 2, "backward": 2, "forc": [2, 5, 7, 8, 9, 10, 19, 21, 24, 28, 30, 31], "nonlinear": [2, 5, 28, 32, 34], "iterateadjoint": 2, "revers": [2, 15], "loadstat": 2, "prefix": 2, "disk": 2, "string": [2, 17, 19, 22, 23, 25, 28, 30, 31, 32], "argument": [2, 3, 6, 10, 11, 13, 28, 30, 31], "put": 2, "binari": 2, "persistst": 2, "postadjoint": 2, "finish": 2, "calcul": [2, 6, 28], "setabstol": 2, "absolut": [2, 18, 19, 21, 23, 24, 30, 31], "toler": [2, 18, 19, 21, 23, 24, 28, 30, 31, 32], "newton": [2, 21, 30], "setfh5": 2, "tofh5": [2, 8], "rigid": [2, 5, 34], "setfunct": 2, "start_plan": 2, "end_plan": 2, "obtain": 2, "setinitnewtondeltafract": 2, "frac": [2, 7, 34], "setjacassemblyfreq": 2, "freq": 2, "frequent": [2, 31], "setkrylovsubspacemethod": 2, "ksm": [2, 8, 21, 24], "linear": [2, 5, 6, 8, 9, 17, 19, 21, 22, 24, 28, 30, 34], "setmaxnewtonit": 2, "max_newton_it": 2, "setoutputfrequ": 2, "write_freq": 2, "setoutputprefix": 2, "_prefix": 2, "setprintlevel": 2, "tacsintegr": 2, "off": [2, 9], "summari": 2, "setreltol": 2, "rel": [2, 3, 18, 19, 21, 23, 24, 30, 31, 32], "settimeinterv": 2, "tinit": [2, 11, 28, 31], "tfinal": [2, 11, 28, 31], "interv": [2, 31], "setuselapack": 2, "use_lapack": 2, "lapack": [2, 13], "slow": [2, 24], "setuseschurmat": 2, "use_schur_mat": 2, "orderingtyp": [2, 30], "tacsschurmat": [2, 30], "execut": [2, 13], "behavior": [3, 34], "materialproperti": [3, 7, 9, 10, 11, 15, 28], "mechan": [3, 34], "goal": [3, 9, 34], "queri": 3, "plane": [3, 34], "stress": [3, 5, 6, 7, 8, 10, 15, 28, 34], "expans": [3, 34], "describ": [3, 13, 24, 28, 34], "possibl": [3, 28], "appropri": [3, 5, 6, 7, 9, 10, 11, 13, 34], "situat": [3, 24], "rho": [3, 7, 8, 9, 10, 11, 15], "specific_heat": [3, 11], "kappa": [3, 11, 34], "densiti": [3, 7, 8, 10, 11, 15], "specif": [3, 11, 17, 18, 19, 21, 22, 23, 24, 25, 28, 30, 31, 32], "heat": [3, 5, 11, 19, 30, 31], "conduct": [3, 5, 10, 11, 15, 19, 30, 31], "2d": [3, 5, 19, 28, 30, 31], "3d": [3, 5, 6], "kappa1": 3, "kappa2": 3, "kappa3": 3, "nu": [3, 7, 8, 10, 15], "young": [3, 7, 10, 15], "modulu": [3, 7, 8, 10, 15], "poisson": [3, 7, 8, 10, 15], "ratio": [3, 7, 8, 10, 15, 30], "yield": [3, 7, 8, 10, 15], "strength": [3, 6], "e1": [3, 9], "e2": [3, 9], "nu12": [3, 9], "g12": [3, 9], "t1": 3, "t2": 3, "c1": [3, 5, 17, 19, 22, 23, 25, 30, 31, 32], "c2": [3, 5], "s12": [3, 9], "moduli": 3, "e3": 3, "nu13": 3, "nu23": 3, "g13": [3, 9], "g23": [3, 9], "t3": 3, "c3": 3, "s13": 3, "s23": 3, "alpha1": 3, "alpha2": 3, "alpha3": 3, "keyword": [3, 6, 10, 11, 30, 31], "arg": [3, 15, 19, 23, 30, 31], "format": [3, 10, 11, 13, 15, 17, 18, 19, 21, 22, 23, 24, 25, 30, 31, 32], "float": [3, 5, 6, 15, 17, 18, 19, 21, 22, 23, 24, 25, 28, 30, 31, 32], "direct": [3, 5, 6, 7, 8, 9, 12, 13, 14, 27, 28, 34], "coeefici": 3, "shear": [3, 5, 7, 8, 34], "tension": 3, "compress": [3, 17, 22, 25, 32], "generatebdfcard": 3, "pynastran": [3, 15, 28, 30], "card": [3, 10, 28], "mat1": [3, 28], "mat8": [3, 28], "getmaterialproperti": 3, "dictionari": [3, 15, 17, 18, 19, 21, 22, 23, 24, 25, 28, 30, 31, 32], "dict": [3, 15, 17, 18, 19, 21, 22, 23, 24, 25, 28, 30, 31, 32], "getnastranid": 3, "setdens": 3, "setnastranid": 3, "setspecificheat": 3, "orthotropicpli": [3, 9], "ply": [3, 9, 22], "interact": [3, 28], "tsai": 3, "wu": 3, "failur": [3, 6, 7, 10, 11, 18, 21, 24], "criterion": [3, 24], "suppli": [3, 5, 17, 19, 22, 23, 25, 28, 30, 31, 32], "Be": 3, "care": 3, "easili": [3, 13, 16], "fall": 3, "outsid": 3, "accept": [3, 6, 13, 19, 23, 28, 30, 31], "ply_thick": [3, 9], "prop": [3, 7, 10, 11, 15, 28], "max_strain_criterion": 3, "bool": [3, 5, 6, 15, 17, 18, 19, 21, 22, 23, 24, 25, 28, 30, 31, 32], "flag": [3, 5, 6, 8, 13, 15, 17, 18, 19, 21, 22, 23, 24, 25, 28, 30, 31, 32], "max": [3, 7, 8, 19, 23, 24, 30], "fals": [3, 5, 6, 7, 9, 15, 17, 19, 21, 22, 23, 24, 25, 28, 30, 31, 32], "procedur": [3, 5, 10, 11, 19, 23, 28, 30, 31], "buckl": [3, 15, 19, 28], "basicbeamconstitut": [3, 28], "beamconstitut": [3, 5], "timoshenko": [3, 5], "theori": [3, 7, 12, 34], "neg": [3, 6, 28], "sign": [3, 6], "convent": [3, 6], "inertia": [3, 6, 28, 34], "iyz": [3, 6], "z": [3, 5, 6, 8, 34], "da": 3, "moment": [3, 5, 6, 7, 19, 28, 30, 31], "area": 3, "alwai": [3, 5, 6, 10, 15, 34], "posit": [3, 6, 19, 30, 34], "iyi": [3, 6], "cross": [3, 5, 7], "j": [3, 9, 11, 30, 34], "polar": 3, "axi": [3, 5, 6, 9], "ii": 3, "iz": 3, "yz": 3, "ky": 3, "correct": [3, 8, 28, 30], "5": [3, 7, 8, 10, 11, 13, 15, 21, 24, 28, 30, 34], "6": [3, 5, 7, 8, 10, 19, 28, 30, 31], "kz": 3, "bar": 3, "pbar": [3, 28], "bladestiffenedshellconstitut": 3, "shellconstitut": [3, 5], "stiffen": [3, 5, 22, 28], "explicitli": 3, "instead": [3, 9, 17, 18, 19, 22, 23, 25, 28, 30, 31, 32], "smear": [3, 9], "across": [3, 15, 17, 19, 22, 28, 30, 31, 34], "panelpli": 3, "stiffenerpli": 3, "kcorr": [3, 8], "panellength": 3, "length": [3, 7, 11, 19, 22, 25, 28, 30, 31, 34], "dv": [3, 7, 9, 15, 17, 22, 25, 28], "panellengthnum": 3, "lenth": 3, "tell": [3, 10], "treat": [3, 28, 34], "stiffenerpitch": 3, "pitch": [3, 28], "stiffenerpitchnum": 3, "panelthick": 3, "panelthicknum": 3, "numpanelpli": 3, "distinct": 3, "angl": [3, 9], "panelplyangl": 3, "numpi": [3, 5, 7, 8, 9, 10, 11, 13, 17, 19, 22, 23, 25, 28, 30, 31, 32], "ndarrai": [3, 5, 15, 17, 19, 22, 23, 25, 28, 30, 31, 32], "panelplyfrac": 3, "fraction": [3, 9, 22, 24], "panelplyfracnum": 3, "np": [3, 7, 8, 9, 10, 11, 15], "intc": [3, 9], "stiffenerheight": 3, "height": 3, "stiffenerheightnum": 3, "stiffenerthick": 3, "stiffenerthicknum": 3, "numstiffenerpli": 3, "stiffenerplyangl": 3, "stiffenerplyfrac": 3, "stiffenerplyfracnum": 3, "flangefract": 3, "width": [3, 7], "rais": [3, 10, 15], "valueerror": [3, 10, 15], "setksweight": 3, "ksweight": [3, 6, 7, 8, 10, 11, 15], "k": [3, 6, 8, 11, 19, 28, 30, 31, 34], "aggreg": [3, 6, 7, 8, 11], "setpanelplyfractionbound": 3, "pli": [3, 9], "setpanelthicknessbound": 3, "1e20": [3, 17, 22, 25, 32], "setstiffenerheightbound": 3, "setstiffenerpitchbound": 3, "setstiffenerplyfractionbound": 3, "setstiffenerthicknessbound": 3, "compositeshellconstitut": [3, 28], "composit": [3, 12, 13, 22], "lamin": [3, 9, 34], "deform": [3, 34], "fsdt": 3, "ply_list": 3, "layup": [3, 9], "ply_angl": [3, 9], "radian": 3, "toffset": 3, "offset": [3, 28, 34], "distanc": 3, "mid": [3, 34], "measur": [3, 8, 18, 21, 24], "plate": [3, 11, 12, 15, 28, 34], "bottom": 3, "pcomp": [3, 28], "dofspringconstitut": [3, 28], "generalspringconstitut": [3, 5], "tradit": 3, "spring": [3, 5], "dof": [3, 5, 19, 28, 30, 31], "assum": [3, 16, 28, 31, 34], "bush": 3, "pbush": [3, 28], "generalmassconstitut": [3, 5], "translat": 3, "rotat": [3, 5, 19, 30, 31], "m": [3, 7, 8, 9, 10, 11, 15, 25, 28, 31, 34], "8": [3, 5, 9, 13, 21, 28], "9": [3, 5, 11, 15, 24, 28, 34], "11": [3, 13], "12": [3, 7, 11, 19, 23, 24, 30, 31, 32], "13": [3, 13], "14": [3, 19, 23, 28, 30, 31], "16": [3, 5, 7], "17": 3, "18": 3, "19": 3, "flatten": [3, 31], "side": [3, 11, 19, 30, 31], "evalmassmatrix": 3, "6x6": 3, "21": [3, 13], "repres": [3, 11, 15, 19, 23, 30, 31, 34], "uniqu": [3, 9, 19, 28, 30, 31], "isorectanglebeamconstitut": [3, 7], "rectangular": [3, 7], "dimens": 3, "along": [3, 6, 7, 16, 19, 23, 30, 31], "perpindicular": 3, "wnum": 3, "wlb": 3, "wub": 3, "diamet": 3, "tnum": [3, 7, 10, 11, 15], "tlb": 3, "tub": 3, "woffset": 3, "pbarl": 3, "isoshellconstitut": [3, 10, 15, 28], "pshell": [3, 28], "isotubebeamconstitut": 3, "hollow": 3, "circular": 3, "d": [3, 8, 30, 34], "tube": 3, "dnum": 3, "dlb": 3, "dub": 3, "wall": 3, "lamparamshellconstitut": 3, "phasechangematerialconstitut": [3, 5], "solid_prop": 3, "liquid_prop": 3, "liquid": 3, "lh": 3, "latent": 3, "mt": 3, "melt": 3, "planestressconstitut": [3, 5, 11], "util": [3, 9, 27, 34], "pointmassconstitut": 3, "i12": [3, 28], "x1": 3, "x2": 3, "dm": [3, 6], "i11": [3, 28], "x3": 3, "i22": [3, 28], "i33": 3, "i13": 3, "i23": 3, "mnum": 3, "mlb": 3, "mub": 3, "i11num": 3, "i11lb": 3, "i11ub": 3, "i22num": 3, "i22lb": 3, "i22ub": 3, "i33num": 3, "i33lb": 3, "i33ub": 3, "i12num": 3, "i12lb": 3, "i12ub": 3, "i13num": 3, "i13lb": 3, "i13ub": 3, "i23num": 3, "i23lb": 3, "i23ub": 3, "setdrillingregular": 3, "kpenalti": 3, "regular": 3, "drill": 3, "smearedcompositeshellconstitut": [3, 9], "homogen": [3, 9], "continu": [3, 6, 12, 30], "parametr": [3, 5, 9], "stack": [3, 9], "sequenc": [3, 9, 15, 28], "effect": [3, 5, 9, 24], "total": [3, 5, 8, 9, 11, 15, 19, 28, 30, 31, 34], "ply_fract": [3, 9], "thickness_dv_num": 3, "ply_fraction_dv_num": [3, 9], "thickness_lb": 3, "thickness_ub": 3, "ply_fraction_lb": 3, "ply_fraction_ub": 3, "t_offset": 3, "solidconstitut": [3, 5, 28], "topologi": [3, 12], "void": [3, 34], "present": [3, 13], "intermedi": [3, 21, 31], "psolid": [3, 28], "librari": [5, 7, 8, 9, 10, 11], "capabl": [5, 7, 9, 27, 34], "parameter": [5, 34], "elementbasi": 5, "lineartetrahedralbasi": [5, 28], "tetrahedr": 5, "numnod": 5, "quadratictetrahedralbasi": 5, "quadrat": [5, 34], "linearhexabasi": [5, 28], "hexahedr": 5, "quadratichexabasi": 5, "cubichexabasi": 5, "cubic": 5, "64": [5, 13], "linearquadbasi": [5, 11], "quad": [5, 9], "quadraticquadbasi": 5, "cubicquadbasi": 5, "quarticquadbasi": 5, "quartic": 5, "quinticquadbasi": 5, "quintic": 5, "36": 5, "lineartrianglebasi": [5, 11], "triangular": 5, "quadratictrianglebasi": 5, "cubictrianglebasi": 5, "elementmodel": 5, "heatconduction2d": [5, 11], "con": [5, 7, 8, 9, 10, 11, 15], "heatconduction3d": 5, "pcmheatconduction2d": 5, "linearelasticity2d": 5, "linearelasticity3d": [5, 28], "linearthermoelasticity2d": 5, "steady_flag": 5, "linearthermoelasticity3d": 5, "shellnaturaltransform": 5, "shelltransform": 5, "align": [5, 34], "who": 5, "shellrefaxistransform": [5, 9], "project": [5, 6, 28], "surfac": [5, 32, 34], "getrefaxi": 5, "beamrefaxistransform": [5, 7], "beamtransform": 5, "springidentitytransform": 5, "springtransform": 5, "stif": 5, "ident": [5, 28], "ax": [5, 34], "springrefaxistransform": 5, "Not": [5, 25, 28], "coincid": 5, "springrefframetransform": 5, "arbritrari": 5, "frame": [5, 28], "axis1": 5, "axis2": 5, "getrefax": 5, "axis_j": 5, "axis_i": 5, "element2d": [5, 11], "outputel": [5, 28], "plane_stress_el": [5, 28], "physic": [5, 11, 16, 19, 30, 31], "element3d": [5, 28], "solid_el": [5, 28], "quad4shel": [5, 9, 10, 15, 28], "emploi": 5, "mix": 5, "interpol": 5, "tensori": 5, "mitc": [5, 34], "avoid": 5, "lock": [5, 34], "beam_or_shell_el": [5, 28], "equival": [5, 28], "quad9shel": [5, 28], "quad16shel": 5, "tri3shel": [5, 28], "quad4nonlinearshel": 5, "geometr": [5, 28, 34], "relationship": 5, "retain": 5, "treatment": 5, "therefor": [5, 13, 28, 34], "captur": [5, 34], "remain": [5, 19, 30, 31], "director": [5, 12, 13, 35], "quad9nonlinearshel": 5, "quad16nonlinearshel": 5, "tri3nonlinearshel": 5, "quad4nonlinearthermalshel": 5, "quad9nonlinearthermalshel": 5, "quad16nonlinearthermalshel": 5, "tri3nonlinearthermalshel": 5, "quad4thermalshel": [5, 28], "quad9thermalshel": 5, "quad16thermalshel": 5, "tri3thermalshel": 5, "beam2": [5, 7, 28], "beam3": 5, "beam2modrot": 5, "moder": [5, 34], "beam3modrot": 5, "rbe2": [5, 28], "arbitrari": 5, "independ": [5, 7, 9], "degre": [5, 10, 11, 13, 15, 17, 19, 22, 23, 25, 30, 31, 32, 34], "freedom": [5, 10, 11, 15, 17, 19, 22, 23, 25, 30, 31, 32, 34], "six": 5, "motion": 5, "singl": [5, 6, 11, 21, 28, 31, 34], "n_dep": 5, "rigid_el": [5, 28], "constrained_dof": 5, "attach": [5, 17, 19, 23, 30, 31, 32], "classmethod": [5, 17, 18, 19, 21, 22, 23, 24, 25, 28, 30, 31, 32], "setscalingparamet": 5, "1000": [5, 7, 8, 19, 23, 30, 31], "lagrang": [5, 15, 19, 23, 28, 30, 31, 34], "formul": [5, 17, 28, 32], "rbe": [5, 19, 23, 30, 31], "artifici": [5, 19, 23, 30, 31, 34], "constant": [5, 6, 7, 9, 19, 23, 30, 31], "precondition": [5, 19, 21, 23, 24, 30, 31], "stabil": [5, 19, 23, 30, 31], "rbe3": [5, 28], "power": 5, "unlik": 5, "rbar": 5, "doesn": [5, 28], "addit": [5, 9, 10, 13, 16, 18, 19, 24, 30, 34], "n_indep": 5, "dep_constrained_dof": 5, "eleemnt": 5, "indep_constrained_dof": 5, "massel": [5, 28], "mass_el": [5, 28], "springel": [5, 28], "spring_el": [5, 28], "assembl": [6, 8, 10, 15, 17, 18, 19, 22, 23, 24, 25, 27, 28, 30, 31, 32, 34], "ever": [6, 34], "handl": [6, 10, 15, 19, 23, 30, 31, 34], "averagetemperatur": 6, "spatial": [6, 34], "averag": [6, 19, 30, 31], "volum": [6, 15, 28, 32], "centerofmass": 6, "center": [6, 10, 15, 19, 30, 31], "give": [6, 11, 34], "transient": [6, 11, 28, 31, 34], "cg": 6, "onto": [6, 34], "integr": [6, 28, 31, 34], "displac": [6, 8, 19, 28, 30], "setcompliancetyp": 6, "compliance_typ": 6, "enclosedvolum": 6, "enclos": [6, 15, 28, 32], "ksdisplac": 6, "kreisselmei": 6, "steinhaus": 6, "over": [6, 8, 11, 19, 27, 30, 31, 34], "smooth": 6, "80": 6, "ftype": 6, "str": [6, 15, 17, 18, 19, 21, 22, 23, 24, 25, 28, 30, 31, 32], "discret": [6, 7, 9, 31], "pnorm": 6, "insensit": [6, 17, 18, 19, 21, 22, 23, 24, 25, 28, 30, 31, 32], "necessari": [6, 10, 13, 24, 28, 31], "either": [6, 11, 13, 34], "consid": [6, 10, 28, 34], "threshold": 6, "mean": [6, 30], "least": 6, "exceed": [6, 11], "impli": [6, 28], "safetyfactor": [6, 7, 15], "safeti": 6, "kstemperatur": [6, 11], "momentofinertia": 6, "origin": [6, 9, 12, 28], "i_out": 6, "vec1": 6, "i_tensor": 6, "vec2": 6, "tensor": 6, "ixx": 6, "ixi": 6, "ixz": 6, "iyx": 6, "izx": 6, "izi": 6, "izz": 6, "direction1": 6, "direction2": 6, "aboutcm": 6, "whether": [6, 15, 18, 19, 21, 24, 28, 30, 31], "taken": [6, 21, 34], "structuralmass": [6, 7, 8, 10, 15], "script": [7, 9, 10, 11, 13], "demonstr": [7, 8, 9, 11], "act": [7, 10, 30], "wrapper": [7, 19, 23, 24, 28, 30, 31], "openmdao": [7, 9, 15, 16], "cantilev": 7, "tip": 7, "100": [7, 8, 9, 10, 11, 15, 17, 22, 25, 28, 32], "dictat": [7, 18, 21, 24], "By": [7, 11, 19, 28, 30], "realiz": 7, "spanwis": 7, "sigma": [7, 8, 15, 19, 23, 28], "analyt": 7, "sqrt": 7, "6v": 7, "cdot": 7, "l": [7, 34], "sigma_i": 7, "o": [7, 8, 9, 11, 34], "matplotlib": 7, "pyplot": 7, "plt": [7, 10, 11, 13], "api": [7, 9], "om": [7, 9], "multipoint": [7, 9, 15], "scenario_structur": [7, 9], "scenariostructur": [7, 9], "tacsbuild": [7, 9, 16], "bdf_file": [7, 9], "path": [7, 9, 11, 13, 21, 30], "join": [7, 9, 11], "dirnam": [7, 9, 11], "__file__": [7, 9, 11], "beam_opt": 7, "05": [7, 9], "2500": [7, 8, 10, 15], "kg": [7, 8, 10, 11, 15], "70": 7, "0e9": 7, "pa": [7, 8, 10, 15], "350e6": [7, 8], "v": 7, "1e3": 7, "elemcallback": [7, 10, 11, 15], "callback": [7, 9, 10, 11, 15, 18, 21, 24], "def": [7, 8, 9, 10, 11, 15, 28], "element_callback": [7, 9, 15], "dvnum": [7, 9, 10, 11, 28], "compid": [7, 9, 10, 11, 17, 19, 22, 23, 25, 28, 30, 31, 32], "compdescript": [7, 9, 10, 11, 28], "elemdescript": [7, 9, 10, 11, 15, 28], "specialdv": [7, 9, 10], "kwarg": [7, 9, 10, 11, 15, 19, 23, 28, 30, 31], "everi": [7, 8, 10, 11, 15, 25, 28, 30, 31], "group": [7, 12, 15, 17, 22, 25, 27, 32], "refaxi": [7, 9], "transform": [7, 9, 10, 15], "problem_setup": [7, 9, 15], "scenario": [7, 9, 15], "staticproblem": [7, 10, 26, 28], "modifi": [7, 13, 15, 17, 18, 19, 21, 22, 23, 24, 25, 28, 30, 31, 32, 34], "eval": [7, 9, 15, 30, 31], "our": [7, 9, 10, 11], "kn": [7, 10], "scenario_nam": [7, 9, 15], "fea_assembl": [7, 9, 15], "helper": [7, 9], "builder": [7, 9, 15, 16], "addfunct": [7, 9, 10, 11, 15, 19, 23, 30, 31], "ks_vmfailur": [7, 10, 15], "addloadtonod": [7, 10, 19, 30, 31], "101": [7, 28], "nastranord": [7, 10, 19, 28, 30, 31], "essenti": [7, 28], "To": [7, 9, 10, 11, 13, 24, 30, 34], "instanti": [7, 9, 11], "feed": [7, 9], "structuralscenario": [7, 9], "beammodel": 7, "struct_build": [7, 9], "mesh_fil": [7, 9, 15], "write_solut": [7, 15], "dv_arrai": [7, 9], "get_initial_dv": [7, 9, 15], "control": [7, 24, 28, 30], "add_subsystem": [7, 9], "indepvarcomp": [7, 9], "promot": [7, 9], "add_output": [7, 9], "dv_struct": [7, 9], "get_mesh_coordinate_subsystem": [7, 9, 15], "mphys_add_scenario": [7, 9], "tip_shear": 7, "mphys_connect_scenario_coordinate_sourc": [7, 9], "struct": [7, 9, 17, 19, 22, 23, 25, 30, 31, 32], "At": [7, 9, 13, 34], "scipyoptimizedriv": [7, 9], "driver": [7, 9], "prob": [7, 9], "declar": [7, 9, 11], "add_design_var": [7, 9], "001": [7, 19, 23, 30, 31], "scaler": 7, "add_object": [7, 9], "add_constraint": [7, 9], "debug_print": [7, 9], "obj": [7, 9], "nl_con": [7, 9], "maxit": [7, 9, 21, 24], "slsqp": [7, 9], "n2": [7, 9], "represent": [7, 9], "show_brows": [7, 9], "outfil": [7, 9], "beam_opt_n2": 7, "html": [7, 9], "run_driv": [7, 9], "out": [7, 8, 9, 10, 11, 15, 17, 18, 19, 21, 22, 23, 24, 25, 28, 30, 31, 32, 34], "screen": [7, 9, 18, 21, 24], "termin": [7, 9, 13], "successfulli": [7, 9], "exit": [7, 9], "5534716448382722": 7, "138": 7, "372": 7, "post": [7, 9, 10, 11], "commonli": [7, 19, 30, 31], "convert": [7, 9, 10, 11, 13, 17, 19, 22, 23, 25, 30, 31, 32], "tecplot": [7, 9, 10, 11, 13, 17, 32], "paraview": [7, 9, 10, 11, 13], "f5totec": [7, 9, 10, 11, 13], "f5tovtk": [7, 9, 10, 11, 13], "bdf_out": 7, "beam_sol": 7, "write_bdf": 7, "plot": [7, 9], "compar": 7, "against": 7, "expect": [7, 24, 28], "get_val": 7, "x_struct0": 7, "get_remot": 7, "t_opt": 7, "m_opt": 7, "t_exact": 7, "t0": 7, "legend": 7, "ylabel": 7, "t_0": 7, "fontsiz": 7, "xlabel": 7, "labelpad": 7, "titl": 7, "profil": 7, "text": 7, "6vl": 7, "show": [7, 10, 11, 28], "enforc": [8, 9, 22, 25, 28, 34], "quadratur": [8, 34], "less": [8, 11], "mpi4pi": [8, 11, 13, 17, 18, 19, 21, 22, 23, 24, 25, 28, 30, 31, 32], "ucrm_vonmisesmassmin": 8, "pyparoptproblem": 8, "__init__": 8, "bdf_name": 8, "meshload": [8, 17, 19, 22, 23, 25, 28, 30, 31, 32], "struct_mesh": 8, "70e9": [8, 10, 15], "min_thick": 8, "002": [8, 9], "max_thick": 8, "02": 8, "loop": [8, 11, 31], "num_compon": 8, "descriptor": 8, "index": [8, 11, 12, 17, 19, 22, 23, 25, 28, 30, 31, 32], "design_variable_index": 8, "isofsdt": 8, "cquad": 8, "cquadr": [8, 11, 28], "cquad4": [8, 10, 11, 15, 28], "mitcshel": 8, "component_num": 8, "loader": [8, 28], "50": [8, 11, 24], "force_arrai": 8, "getarrai": 8, "uniform": [8, 9, 19, 30, 31], "re": [8, 18, 21, 24, 28, 30], "dfdu": 8, "pc": 8, "subspac": [8, 19, 23, 30], "restart": [8, 30], "gmre": [8, 30], "mass_scal": 8, "mm": [8, 10, 15], "meter": 8, "thickness_scal": 8, "nvar": 8, "ncon": 8, "super": 8, "comm_self": 8, "inequ": 8, "dens": 8, "both": [8, 13, 25, 28, 30, 34], "setinequalityopt": 8, "dense_ineq": 8, "use_low": 8, "use_upp": 8, "visual": [8, 9, 10, 11, 17, 32, 34], "extra": [8, 28], "py_shel": 8, "iter_count": 8, "getvarsandbound": 8, "xval": 8, "dtype": [8, 9, 17, 18, 19, 21, 22, 23, 24, 25, 28, 30, 31, 32], "xlb": [8, 17, 19, 22, 23, 25, 28, 30, 31, 32], "xub": [8, 17, 19, 22, 23, 25, 28, 30, 31, 32], "evalobjcon": 8, "fail": [8, 18, 21, 24], "varaibl": 8, "fval": 8, "fobj": 8, "von": 8, "mise": 8, "evalobjcongradi": 8, "gx": 8, "evaldvsen": 8, "evalsvsen": [8, 19], "writetofil": 8, "ucrm_it": 8, "pyparopt": 8, "tacs_comm": 8, "crm_box_2nd": 8, "crm_opt": 8, "max_lbfg": 8, "opt": 8, "bfg": 8, "setoutputfil": 8, "setarmijoparam": 8, "zw": 8, "zl": 8, "zu": 8, "getoptimizedpoint": 8, "further": [9, 10, 11], "propos": 9, "lund": 9, "stegmann": 9, "kpa": 9, "diagram": 9, "tractabl": 9, "simplif": 9, "oni": 9, "select": [9, 10, 11, 17, 19, 22, 28, 30, 31, 32, 34], "circ": 9, "45": 9, "90": 9, "neglect": 9, "proport": 9, "summar": 9, "partitioned_pl": 9, "1550": 9, "54e9": 9, "18e9": 9, "9e9": 9, "xt": 9, "2410": 9, "0e6": [9, 10, 15], "xc": 9, "1040": 9, "yt": 9, "73": 9, "yc": 9, "173": 9, "71": 9, "25e": 9, "plate_thick": 9, "tmin": 9, "tmax": 9, "deg2rad": 9, "100e3": 9, "four": 9, "ortho_prop": 9, "ortho_pli": 9, "ortho_layup": 9, "deg": 9, "allcompon": 9, "selectcompid": [9, 11, 15, 19, 28, 30, 31], "addpressuretocompon": [9, 19, 30, 31], "last": [9, 28], "constraint_setup": [9, 15], "sum": 9, "accomplish": [9, 10], "dvconstraint": [9, 20, 28], "constraint_list": 9, "constr": [9, 15], "createdvconstraint": [9, 22, 28], "addconstraint": [9, 15, 17, 22, 25, 32], "dvindic": [9, 22], "dvweight": [9, 22], "append": [9, 11, 15, 28, 30], "fianlli": 9, "platemodel": 9, "check_parti": [9, 15], "pressure_load": 9, "tacs_struct": 9, "571649588963465": 9, "34": 9, "contour": 9, "dv2": 9, "dv3": 9, "dv4": 9, "dv5": 9, "wind": 9, "vol": 9, "No": [9, 13, 19, 23, 28, 30, 31], "2005": 9, "pp": 9, "109": [9, 28], "124": 9, "advanc": [10, 12], "nomin": 10, "1m": 10, "flat": 10, "perimet": 10, "compris": 10, "900": 10, "submodul": 10, "purpos": [10, 17, 19, 22, 23, 28, 30, 31, 32], "bdffile": [10, 11, 30], "feaassembl": [10, 11], "automat": [10, 28, 30], "itself": [10, 34], "long": 10, "exist": [10, 28], "done": [10, 11, 28], "464": [10, 15], "tplate": [10, 11, 15], "005": [10, 15], "naturalshelltransform": [10, 15], "accord": [10, 15], "elemlist": [10, 11], "els": [10, 11, 15], "catch": [10, 15], "unexpect": [10, 15], "f": [10, 15, 19, 30, 31], "pretti": 10, "those": [10, 11, 28], "createstaticproblem": [10, 28, 30], "staticprob": 10, "point_forc": 10, "ve": [10, 11], "uniniti": [10, 11, 15], "minu": 10, "let": [10, 15], "vonmis": 10, "481": 10, "1e4": 10, "evalfunctionssen": [10, 11, 19, 23, 30, 31], "funcssen": [10, 11, 17, 19, 22, 23, 25, 30, 31, 32], "writesolut": [10, 11, 19, 23, 30, 31], "point_force_000": 10, "runscript": [10, 11], "vtk": [10, 11, 13], "cell": 11, "undergo": 11, "cylindr": 11, "embed": 11, "corner": 11, "releas": [11, 13], "larg": [11, 12], "amount": 11, "nearest": 11, "adjac": [11, 17, 28], "prevent": 11, "go": [11, 13], "cascad": 11, "figur": [11, 30], "label": [11, 15], "hand": [11, 19, 30, 31], "multipl": [11, 15, 17, 18, 19, 21, 22, 23, 24, 25, 28, 30, 31, 32], "easi": [11, 28], "enabl": [11, 13, 21, 24, 34], "previou": [11, 21], "three": [11, 12, 21], "item": [11, 28], "pprint": 11, "mateteri": 11, "propertiesfor": 11, "battery_pack": 11, "065": 11, "battery_rho": 11, "1460": 11, "battery_kappa": 11, "battery_cp": 11, "880": 11, "alum_rho": 11, "2700": 11, "alum_kappa": 11, "204": 11, "alum_cp": 11, "883": 11, "globaldv": [11, 28], "basi": [11, 19, 30, 31], "elif": [11, 15], "ctria3": [11, 15, 28], "ctriar": [11, 28], "recogn": 11, "transientproblem": [11, 26, 28], "numstep": [11, 28, 31], "createtransientproblem": [11, 28, 31], "flux": 11, "gettimestep": [11, 31], "addloadtocompon": [11, 19, 30, 31], "just": [11, 13, 18, 21, 24], "specifii": 11, "spread": 11, "sinc": [11, 12, 15, 28, 30, 31, 34], "transfer": [11, 15], "6000": 11, "indic": [11, 18, 19, 21, 23, 24, 28, 30, 31], "watt": 11, "000": 11, "joul": 11, "timestep": [11, 31], "enumer": 11, "00": [11, 28], "face": [11, 19, 28, 30, 31, 32], "closest": 11, "opert": 11, "event": 11, "wa": [11, 12], "withing": 11, "compids_00": 11, "compids_01": 11, "adjec": 11, "compids_04": 11, "04": [11, 28], "With": [11, 34], "ks_temp_corn": 11, "ks_temp_adjac": 11, "ks_temp_diagon": 11, "transient_000_000": 11, "transient_000_050": 11, "050": 11, "transient_000_": 11, "anim": 11, "what": [11, 28], "look": [11, 13, 17, 19, 22, 23, 25, 30, 31, 32], "toolkit": 12, "primarili": 12, "box": 12, "recent": 12, "extend": [12, 13, 34], "dimension": 12, "2010": 12, "multidisciplinari": [12, 15], "georgia": 12, "tech": 12, "lab": 12, "univers": 12, "michigan": 12, "anaconda": 12, "mphy": [12, 14, 15], "batteri": 12, "pack": 12, "runawai": 12, "core": 12, "search": [12, 24], "page": [12, 24], "readili": 13, "maco": 13, "window": 13, "recommend": [13, 19, 23, 28, 30, 31], "try": [13, 21], "access": [13, 14], "virtual": [13, 34], "vm": 13, "subsystem": [13, 15], "docker": 13, "mdolab": 13, "public": [13, 19, 23, 28, 30, 31], "imag": 13, "conda": [13, 16], "platform": 13, "start": [13, 24, 28, 31], "n": [13, 15, 17, 19, 22, 23, 24, 25, 28, 30, 31, 32, 34], "forg": [13, 16], "mamba": 13, "activ": 13, "smdogroup": 13, "bla": 13, "meti": 13, "cython": [13, 14, 17, 19, 22, 23, 25, 30, 31, 32], "suitespars": 13, "amd": 13, "tecio": 13, "fh5": 13, "compat": [13, 15, 28], "clone": 13, "git": 13, "repositori": 13, "copi": [13, 19, 30, 31], "makefil": 13, "info": [13, 15, 28], "edit": 13, "tacs_dir": 13, "cxx": 13, "lapack_lib": 13, "metis_dir": 13, "suitesparse_dir": 13, "tecio_dir": 13, "toolbox": 13, "mind": 13, "divid": [13, 19, 28, 30, 31, 34], "categori": 13, "checkout": 13, "com": 13, "sure": 13, "teciosrc": 13, "teciompisrc": 13, "cfg": 13, "wish": [13, 19, 30, 31], "extern": [13, 17, 19, 21, 23, 24, 28, 30, 31, 32], "inde": 13, "alreadi": [13, 16, 19, 28, 30, 31], "simpli": 13, "adjust": 13, "fedoraproject": 13, "org": 13, "lookasid": 13, "pkg": 13, "gz": 13, "5465e67079419a69e0116de24fce58f": 13, "cmake": 13, "drtimothyaldendavi": 13, "www": 13, "boost": 13, "sudo": 13, "apt": 13, "libboost": 13, "dev": 13, "debian": 13, "someth": 13, "rule": [13, 28], "target": [13, 21], "stop": 13, "leav": 13, "somedirectori": 13, "x86_64": 13, "subdirectori": 13, "bash": 13, "f5convert": 13, "f5clean": 13, "clean": 13, "date": 13, "remov": 13, "h": 13, "line": [13, 24, 28, 34], "sub": [13, 30, 31], "numer": 13, "pip": [13, 16], "shortcut": 13, "older": 13, "miss": [13, 28, 32], "libtac": 13, "tree": 13, "newer": 13, "publicli": 14, "member": 14, "wrap": 14, "document": 14, "around": [15, 24], "assembler_setup": 15, "abc": [15, 28], "callabl": [15, 18, 21, 24, 28], "prior": 15, "elem_callback": 15, "dv_num": 15, "comp_id": 15, "comp_descript": 15, "elem_descript": 15, "special_dv": 15, "counter": [15, 17, 19, 23, 28, 30, 31, 32], "propid": [15, 28], "comment": [15, 28], "belong": [15, 28], "ctetra": [15, 28], "global_dv": 15, "mani": [15, 28], "being": [15, 18, 19, 24, 30, 31], "baseproblem": 15, "seri": 15, "buckling_setup": 15, "pytacs_opt": 15, "partial": [15, 19, 21, 28, 30, 34], "without": [15, 34], "still": 15, "meaning": [15, 17, 22, 25, 30, 31, 32], "weather": 15, "turn": 15, "thermostructur": 15, "separate_mass_dv": 15, "lump": 15, "struct_dv": 15, "split": [15, 19, 28, 30, 31, 34], "res_ref": 15, "norm": [15, 18, 19, 21, 23, 24, 30, 31, 34], "disciplin": 15, "magnitud": [15, 24], "10401": 15, "10402": 15, "assignmassdv": [15, 28], "engine_mass": 15, "fuel_mass": 15, "elem_list": 15, "setopt": [15, 17, 18, 19, 21, 22, 23, 24, 25, 28, 30, 31, 32], "outputdir": [15, 17, 19, 23, 30, 31, 32], "skip": [15, 24, 28], "concentr": [15, 28], "ngroup": [15, 28], "struct_mass": 15, "maneuver_2_5g": 15, "maneuver_m1g": 15, "graviti": [15, 19, 30, 31], "81": 15, "addinertialload": [15, 19, 30, 31], "createvolumeconstraint": [15, 28, 32], "5g": 15, "maneuv": 15, "createbucklingproblem": [15, 19, 28], "numeig": [15, 19, 23, 28], "l2converg": [15, 19, 23, 30, 31], "l2convergencerel": [15, 19, 23, 30, 31], "xfer": 15, "get_coupling_group_subsystem": 15, "couplinggroup": 15, "get_pre_coupling_subsystem": 15, "get_post_coupling_subsystem": 15, "get_ndof": 15, "ndof": 15, "get_number_of_nod": 15, "get_dv_bound": 15, "add_design_vari": 15, "get_dv_scal": 15, "get_ndv": 15, "proc": [15, 19, 23, 25, 28, 30, 31], "get_solv": 15, "get_fea_assembl": 15, "get_tagged_indic": 15, "tag": 15, "grid_id": 15, "standard": [16, 24], "high": 16, "fidel": 16, "multiphys": 16, "conveni": [16, 28, 34], "disciplinari": 16, "would": [16, 19, 30, 31], "petsc4pi": 16, "doc": 16, "detail": [16, 27], "discuss": [16, 27], "constrain": [17, 28, 32], "dv_i": [17, 28], "dv_j": [17, 28], "abruptli": [17, 28], "delta_t": [17, 22], "t_i": 17, "t_j": 17, "createadjacencyconstraint": [17, 28], "creation": [17, 19, 23, 28, 30, 31, 32], "printopt": [17, 18, 19, 21, 22, 23, 24, 25, 28, 30, 31, 32], "writer": [17, 19, 23, 30, 31, 32], "numbersolut": [17, 19, 23, 30, 31, 32], "outputview": [17, 19, 22, 23, 25, 30, 31, 32], "intracomm": [17, 18, 19, 21, 22, 23, 24, 25, 28, 30, 31, 32], "tacstofh5": [17, 19, 22, 23, 25, 30, 31, 32], "postprocess": [17, 19, 22, 23, 25, 30, 31, 32], "pymeshload": [17, 19, 22, 23, 25, 30, 31, 32], "connam": [17, 22, 25, 32], "dvindex": [17, 25], "evalconstraint": [17, 22, 25, 32], "evalcon": [17, 22, 25, 32], "ignoremiss": [17, 19, 22, 23, 25, 30, 31, 32], "supress": [17, 19, 22, 23, 25, 30, 31, 32], "valid": [17, 19, 22, 23, 25, 30, 31, 32], "caution": [17, 19, 22, 23, 25, 30, 31, 32, 34], "adjconstraint": [17, 25], "le_spar": [17, 22, 25, 28, 32], "c1_le_spar": [17, 22, 25, 32], "12354": [17, 19, 22, 23, 30, 31, 32], "evalconstraintssen": [17, 22, 25, 32], "derivit": [17, 19, 22, 23, 25, 30, 31, 32], "50x242": [17, 22, 25, 32], "spars": [17, 22, 25, 30, 32], "float64": [17, 18, 19, 21, 22, 23, 24, 25, 28, 30, 31, 32], "writevisu": [17, 32], "basenam": [17, 19, 23, 30, 31, 32], "filenam": [17, 19, 23, 28, 30, 31, 32], "again": [17, 19, 23, 30, 31, 32, 34], "getconstraintbound": [17, 22, 25, 32], "tupl": [17, 22, 25, 30, 32], "conbound": [17, 22, 25, 32], "tacsconstraint": [17, 22, 25, 32], "getconstraintkei": [17, 22, 25, 32], "kei": [17, 18, 19, 21, 22, 23, 24, 25, 28, 30, 31, 32, 34], "far": [17, 19, 22, 23, 24, 25, 30, 31, 32], "getconstraints": [17, 22, 25, 32], "consiz": [17, 22, 25, 32], "funconsizesc": [17, 22, 25, 32], "coord": [17, 19, 22, 23, 25, 28, 30, 31, 32], "getnumcoordin": [17, 19, 22, 23, 25, 30, 31, 32], "ncoord": [17, 19, 22, 23, 25, 30, 31, 32], "getnumdesignvar": [17, 19, 22, 23, 25, 28, 30, 31, 32], "ndv": [17, 19, 22, 23, 25, 28, 30, 31, 32], "nnode": [17, 19, 22, 23, 25, 28, 30, 31, 32, 34], "getnumvari": [17, 19, 22, 23, 25, 30, 31, 32], "nstate": [17, 19, 22, 23, 25, 30, 31, 32], "getopt": [17, 18, 19, 21, 22, 23, 24, 25, 28, 30, 31, 32], "vpn": [17, 19, 22, 23, 25, 28, 30, 31, 32], "printdefaultopt": [17, 18, 19, 21, 22, 23, 24, 25, 28, 30, 31, 32], "nice": [17, 18, 19, 21, 22, 23, 24, 25, 28, 30, 31, 32], "stdout": [17, 18, 19, 21, 22, 23, 24, 25, 28, 30, 31, 32], "printmodifiedopt": [17, 18, 19, 21, 22, 23, 24, 25, 28, 30, 31, 32], "tabl": [17, 18, 19, 21, 22, 23, 24, 25, 28, 30, 31, 32], "varnam": [17, 19, 22, 23, 25, 30, 31, 32], "xpt": [17, 19, 22, 23, 25, 28, 30, 31, 32, 34], "setvarnam": [17, 19, 22, 23, 25, 30, 31, 32], "pyopt": [17, 19, 22, 23, 25, 30, 31, 32], "addvargroup": [17, 19, 22, 23, 25, 30, 31, 32], "abstract": 18, "setstatefunc": [18, 24], "resfunc": [18, 24], "statevec": [18, 24], "resvec": [18, 24], "signatur": [18, 21, 24], "alloc": [18, 24], "gethistoryvari": [18, 21, 24], "histori": [18, 21, 24, 28, 30], "logic": [18, 19, 21, 23, 24, 28, 30, 31], "anoth": [18, 21, 24], "boolean": [18, 21, 24], "hasconverg": [18, 21, 24], "converg": [18, 19, 21, 23, 24, 30, 31], "fatalfailur": [18, 21, 24], "meant": [18, 21, 24], "reflect": [18, 21, 24], "fatal": [18, 21, 24], "reset": [18, 19, 21, 23, 24], "iterationcount": [18, 21, 24], "u0": [18, 19, 21, 24], "u": [18, 19, 21, 24, 28, 30, 31, 34], "setconvergencetoler": [18, 21, 24], "abstol": [18, 21, 24], "reltol": [18, 21, 24], "initializesolv": [18, 21, 24], "futur": [18, 21, 24], "setrefnorm": [18, 21, 24], "setcallback": [18, 21, 24], "monitorvar": [18, 21, 24], "monitor": [18, 21, 24, 30], "nonlinearsolvermonitorvar": [18, 21, 24], "relev": [19, 23, 30, 31], "l2": [19, 23, 30, 31], "rbestiffnessscalefactor": [19, 23, 30, 31], "rbeartificialstiff": [19, 23, 30, 31], "subspaces": [19, 23, 30], "krylov": [19, 23, 30], "nrestart": [19, 23, 30], "suppress": [19, 23, 30, 31], "printtim": [19, 23, 28, 30, 31], "printlevel": [19, 23, 30, 31], "major": [19, 23, 31], "minor": [19, 23, 31], "isnonlinear": [19, 23, 28, 30, 31], "setvalnam": [19, 23], "valnam": [19, 23], "getnumeig": [19, 23], "request": [19, 23, 30, 31], "funcnam": [19, 23, 30, 31], "funchandl": [19, 23, 30, 31], "NOT": [19, 23, 28], "FOR": [19, 23], "evalfunc": [19, 23, 30, 31], "eigsm": [19, 23], "c1_eigsm": [19, 23], "234": [19, 23, 30, 31], "89": [19, 23, 30, 31], "59": [19, 23, 30, 31], "averageload": [19, 30, 31], "throughout": [19, 30, 31, 34], "1d": [19, 30, 31], "numcompid": [19, 30, 31], "uniformli": [19, 30, 31], "evenli": [19, 28, 30, 31], "unit": [19, 30, 31, 34], "necessarili": [19, 30, 31], "interpret": [19, 28, 30, 31], "qdot": [19, 30, 31], "rate": [19, 30, 31, 34], "fx": [19, 30, 31], "fy": [19, 30, 31], "fz": [19, 30, 31], "mx": [19, 30, 31], "my": [19, 30, 31], "mz": [19, 30, 31], "nodeid": [19, 28, 30, 31], "numnodeid": [19, 30, 31], "signal": [19, 28, 30, 31], "addloadtorh": [19, 30, 31], "fappli": [19, 30, 31], "addtractiontocompon": [19, 30, 31], "faceindex": [19, 30, 31], "addtractiontoel": [19, 30, 31], "elemid": [19, 30, 31], "fuel": [19, 28, 30, 31, 32], "addpressuretoel": [19, 30, 31], "presur": [19, 30, 31], "scalar": [19, 30, 31, 34], "inertiavector": [19, 30, 31], "inerti": [19, 30, 31], "due": [19, 30, 31, 34], "acceler": [19, 30, 31], "entir": [19, 28, 30, 31], "addcentrifugalload": [19, 30, 31], "omegavector": [19, 30, 31], "rotcent": [19, 30, 31], "firstord": [19, 30], "centrifug": [19, 30, 31], "veloc": [19, 30, 31], "rotor": [19, 30, 31], "roll": [19, 30, 31], "aircraft": [19, 30, 31], "rad": [19, 23, 28, 30, 31], "addloadfrombdf": [19, 30, 31], "loadid": [19, 30, 31], "grav": [19, 28, 30, 31], "rforc": [19, 28, 30, 31], "pload2": [19, 28, 30, 31], "pload4": [19, 28, 30, 31], "identif": [19, 30, 31], "zeroload": [19, 30, 31], "fext": [19, 21, 30, 31], "ex": [19, 28, 30], "eigval": [19, 23], "xptsenslist": [19, 30], "dvsenslist": [19, 30], "svsenslist": [19, 30], "intent": [19, 23, 30, 31], "program": [19, 23, 30, 31], "getfunctionkei": [19, 23, 30, 31], "writesensfil": [19, 23, 30, 31], "sen": [19, 23, 30, 31], "tacs_aim": [19, 23, 30, 31], "adjacencyconstraint": [20, 22, 25, 28], "panellengthconstraint": [20, 28], "volumeconstraint": [20, 28], "predictor": 21, "corrector": 21, "increment": [21, 28, 30], "extrapol": 21, "equilibrium": 21, "adapt": [21, 24, 30], "achiev": 21, "maxlambda": 21, "coarseabstol": 21, "0001": [21, 24], "larger": [21, 24], "speed": [21, 24], "coarsereltol": 21, "targetit": 21, "30": 21, "initialstep": 21, "minstep": 21, "maxstep": 21, "inf": 21, "minstepfactor": 21, "decreas": [21, 24], "maxstepfactor": 21, "increas": 21, "retractionfactor": 21, "usepredictor": 21, "numpredictorst": 21, "jacfunc": [21, 24], "pcupdatefunc": [21, 24], "linearsolv": [21, 24, 30], "setlambdafunc": 21, "getlambdafunc": 21, "innersolv": [21, 30], "basesolv": 21, "lambda": [21, 34], "newtonsolv": [21, 29, 30], "computeforcevector": 21, "assumpt": 21, "f_int": 21, "f_ext": 21, "fint": [21, 30], "a_0": [22, 28], "dv_0": [22, 28], "a_1": [22, 28], "dv_1": [22, 28], "a_n": [22, 28], "dv_n": [22, 28], "As": [22, 28], "pf_0": 22, "pf_45": 22, "pf_m45": 22, "pf_90": 22, "Or": 22, "blade": [22, 28], "too": [22, 28], "much": 22, "st": 22, "pt": [22, 34], "One": [22, 28], "modal": [23, 28], "createmodalproblem": [23, 28], "squar": [23, 28], "eigenfrequ": 23, "fairli": 24, "critic": [24, 28], "eisenstat": 24, "walker": 24, "variant": 24, "b": [24, 30], "paper": 24, "mo": 24, "liu": 24, "forcefirstit": 24, "even": 24, "divergencetol": 24, "10000000000": 24, "jugd": 24, "diverg": 24, "abslintol": 24, "rellintol": 24, "maxlinit": 24, "useew": 24, "ewmaxtol": 24, "ewgamma": 24, "ewalpha": 24, "618033988749895": 24, "uselinesearch": 24, "printlinesearchit": 24, "skipfirstnlinesearch": 24, "robust": [24, 27], "linesearchmaxit": 24, "linesearch": 24, "linesearchexpecteddecreas": 24, "expens": [24, 30], "linesearchmaxstep": 24, "linesearchminstep": 24, "linesearchmaxstepchang": 24, "secant": 24, "bounc": 24, "linesearchfallbacksteplimit": 24, "merit": 24, "greater": 24, "tri": 24, "meet": 24, "progress": 24, "combat": 24, "limit": 24, "backtrack": 24, "encourag": 24, "faster": 24, "linsolverit": 24, "linsolverr": 24, "linesearchstep": 24, "linesearchit": 24, "choos": 24, "ewtol": 24, "thin": 24, "author": 25, "alasdair": 25, "christison": 25, "grai": 25, "bladestiffenedshel": 25, "createpanellengthconstraint": [25, 28], "325": 25, "1983645": 25, "1415926": 25, "3x": 25, "modalproblem": [26, 28], "bucklingproblem": [26, 28], "offer": 27, "benefit": 27, "pars": [27, 28], "fewer": 27, "keep": 27, "track": 27, "layer": 28, "hook": 28, "nearli": 28, "custom": 28, "deal": 28, "dr": 28, "kenwai": 28, "gkk": 28, "brook": 28, "printdebug": 28, "debug": [28, 30], "infer": 28, "element_non": 28, "scalar_2d_el": 28, "scalar_3d_el": 28, "pcm_element": 28, "writeconnect": 28, "writenod": 28, "writedisplac": 28, "writestrain": 28, "writestress": 28, "writeextra": 28, "writeload": 28, "writecoordinatefram": 28, "familysepar": 28, "famili": 28, "charact": 28, "condens": 28, "linearitytol": 28, "close": [28, 32], "runtim": 28, "conm1": 28, "conm2": 28, "thumb": 28, "equivel": 28, "mat2": 28, "prod": [28, 30], "cquad9": 28, "cbar": 28, "crod": 28, "chexa": 28, "cbush": 28, "desvar": 28, "counterpart": 28, "might": 28, "organ": 28, "space": 28, "wing_spar": 28, "seg": 28, "3600": 28, "3310": 28, "3797": 28, "731": 28, "3798": 28, "732": 28, "3799": 28, "733": 28, "3800": 28, "734": 28, "3801": 28, "735": 28, "3802": 28, "736": 28, "97": 28, "3262": 28, "3882": 28, "782": 28, "3601": 28, "98": 28, "3881": 28, "781": 28, "99": 28, "3875": 28, "3888": 28, "3885": 28, "3874": 28, "3887": 28, "3884": 28, "3892": 28, "3899": 28, "3896": 28, "3891": 28, "102": 28, "3898": 28, "3895": 28, "replac": 28, "referenc": 28, "rod_1": 28, "3320": 28, "rod_2": 28, "6600": 28, "6310": 28, "6320": 28, "hmname": 28, "quot": 28, "hwcolor": 28, "28": 28, "rib2": 28, "29": 28, "scalelist": 28, "tripan": 28, "len": 28, "addglobaldv": 28, "affect": 28, "cleanli": 28, "intern": [28, 30, 32], "worri": 28, "elemcallbackfunct": 28, "unbound": 28, "getglobaldv": 28, "getglobaldvkei": 28, "globaldvkei": 28, "getglobaldvnum": 28, "globaldvnum": 28, "gettotalnumglobaldv": 28, "eid": 28, "dvname": 28, "exclud": [28, 30], "includebound": 28, "includeop": 28, "excludeop": 28, "projectvector": 28, "idea": 28, "ncomp": 28, "subgroup": 28, "oper": [28, 30], "boil": 28, "down": 28, "subset": 28, "attempt": 28, "effici": 28, "simplest": 28, "componentid": 28, "11th": 28, "fifth": 28, "probabl": 28, "advis": 28, "similarli": 28, "except": 28, "subtract": 28, "le_rib": 28, "convex": 28, "hull": 28, "concav": 28, "smaller": 28, "accumul": 28, "skin": 28, "trail": 28, "u_skin": 28, "te_spar": 28, "sort": 28, "alphabet": 28, "sequenti": 28, "includeopt": 28, "AND": 28, "getbdfinfo": 28, "bdfinfo": 28, "getcompnam": 28, "getglobalnodeidsforcomp": 28, "getlocalnodeidsforcomp": 28, "later": [28, 34], "getorigdesignvar": 28, "were": 28, "asbvec": 28, "gettotalnumdesignvar": 28, "getorignod": 28, "getnumownedmultipliernod": 28, "nmultnod": 28, "getlocalmultipliernodeid": 28, "var": [28, 30, 31, 34], "applybcstovec": 28, "setbcsinvec": 28, "identifi": 28, "createtacsprobsfrombdf": 28, "structproblem": 28, "predefin": 28, "tacsproblem": 28, "loadcas": [28, 30], "tload1": 28, "tload2": 28, "dload": 28, "sol": 28, "103": 28, "writebdf": 28, "actual": [28, 30, 31], "manifold": [28, 32], "water": [28, 32], "tight": [28, 32], "enough": [28, 32], "wingbox": [28, 32], "vol_w": [28, 32], "vol_fuel": [28, 32], "continuationsolv": [29, 30], "piec": [30, 31], "nonlinearsolv": 30, "natural_ord": 30, "rcm_order": 30, "nd_order": 30, "tacs_amd_ord": 30, "multicolor_ord": 30, "pcfilllevel": 30, "pcfillratio": 30, "flexibl": [30, 34], "usemonitor": 30, "monitorfrequ": 30, "writenlitersolut": 30, "setloadscal": 30, "getloadscal": 30, "reason": [30, 31], "updatejacobian": 30, "_jacobianupdaterequir": 30, "updateprecondition": 30, "lu": 30, "_preconditionerupdaterequir": 30, "occur": 30, "whenev": 30, "cl_mass": [30, 31], "c1_mass": [30, 31], "adjointlist": 30, "getresidu": 30, "getforc": 30, "externalforcevec": 30, "internalforcevec": 30, "thu": 30, "And": 30, "fi": 30, "bvec": 30, "getjacobian": 30, "scipi": 30, "bsr_matric": 30, "tacsparallelmat": 30, "bsr_matrix": 30, "addtransposejacvecproduct": 30, "solveadjoint": 30, "getoutputfilenam": 30, "count": 30, "extens": 30, "writesolutionhistori": 30, "writeloadtobdf": 30, "loadcaseid": 30, "nastaran": 30, "timeintegr": 31, "integrationord": 31, "march": 31, "jacassemblyfreq": 31, "reassembl": 31, "slice": 31, "getnumtimestag": 31, "stage": 31, "multi": 31, "numstag": 31, "gettimestag": 31, "timestag": 31, "applic": 31, "udotdot": 31, "dvar": 31, "ddvar": 31, "prepiterativesolv": 31, "prepar": 31, "aeroelast": 31, "tightli": 31, "fluid": 31, "outer": 31, "multistag": 31, "numvarspernod": 31, "tighli": 31, "externalcfdsolv": 31, "dstate": 31, "ddstate": 31, "volchecktol": 32, "closur": 32, "volconstraint": 32, "c1_wing": 32, "via": 34, "mathbf": 34, "induc": 34, "exact": 34, "left": 34, "q": 34, "undeform": 34, "tempor": 34, "focu": 34, "dot": 34, "omega": 34, "ddot": 34, "concret": 34, "explan": 34, "_": 34, "m_": 34, "mathbb": 34, "xi": 34, "lagrangian": 34, "dfrac": 34, "dt": 34, "engeri": 34, "sum_": 34, "w_": 34, "t_": 34, "n_": 34, "xi_": 34, "0i": 34, "accur": 34, "predict": 34, "quaternion": 34, "epsilon": 34, "eta": 34, "satisifi": 34, "construct": 34, "ref": 34, "perpendicular": 34, "centerlin": 34, "tangent": 34, "hat": 34, "preserv": 34, "zeta": 34, "bmatrix": 34, "xi_1": 34, "xi_2": 34, "eta_": 34, "ot": 34, "quantiti": 34, "introduc": 34, "systen": 34, "deflect": 34, "never": 34, "approx": 34, "zeroth": 34, "orthogon": 34, "mathcal": 34, "twist": 34, "theta": 34, "invari": 34, "transofrm": 34, "theta_": 34, "caus": 34, "epsilon_": 34, "alpha_": 34, "xx": 34, "xy": 34, "yy": 34, "aris": 34, "kappa_": 34, "penal": 34, "q_": 34, "penalti": 34, "cartesian": 34, "deviat": 34, "k_": 34, "v_": 34, "u_": 34, "suffer": 34, "phenomena": 34, "inabl": 34, "pure": 34, "allevi": 34, "ty": 34, "exhibit": 34, "free": 34, "context": 34, "tild": 34, "green": 34, "longer": 34, "du": 34, "dx": 34, "fg": 34, "dq": 34, "lamb": 34, "xf": 34, "computenodalfram": 34, "const": 34, "tacsscalar": 34, "xd": 34, "interpolatefram": 34, "xdz": 34, "computederiv": 34, "npt": 34, "computedirector": 34, "vars_per_nod": 34, "dir": 34, "computetransform": 34, "curvilinear": 34, "invers": 34, "3x3": 34, "xdinv": 34, "detxd": 34, "inv3x3": 34, "zxdinv": 34, "tmp": 34, "ux0": 34, "ueta": 34, "u0x": 34, "u0d": 34, "matmatmult": 34, "mattransmatmult": 34, "u1x": 34, "u1d": 34, "matmatmultadd": 34}, "objects": {"TACS": [[2, 0, 1, "", "Assembler"], [2, 0, 1, "", "Creator"], [2, 0, 1, "", "Integrator"], [2, 0, 1, "", "MeshLoader"]], "TACS.Assembler": [[2, 1, 1, "", "addAdjointResProducts"], [2, 1, 1, "", "addAdjointResXptSensProducts"], [2, 1, 1, "", "addDVSens"], [2, 1, 1, "", "addJacobianVecProduct"], [2, 1, 1, "", "addMatDVSensInnerProduct"], [2, 1, 1, "", "addSVSens"], [2, 1, 1, "", "addXptSens"], [2, 1, 1, "", "applyBCs"], [2, 1, 1, "", "applyMatBCs"], [2, 1, 1, "", "assembleJacobian"], [2, 1, 1, "", "assembleMatCombo"], [2, 1, 1, "", "assembleMatType"], [2, 1, 1, "", "assembleRes"], [2, 1, 1, "", "computeReordering"], [2, 1, 1, "", "copyVariables"], [2, 1, 1, "", "create"], [2, 1, 1, "", "createDesignVec"], [2, 1, 1, "", "createMat"], [2, 1, 1, "", "createNodeVec"], [2, 1, 1, "", "createSchurMat"], [2, 1, 1, "", "createVec"], [2, 1, 1, "", "evalEnergies"], [2, 1, 1, "", "evalFunctions"], [2, 1, 1, "", "getBcMap"], [2, 1, 1, "", "getDesignVarRange"], [2, 1, 1, "", "getDesignVars"], [2, 1, 1, "", "getElementData"], [2, 1, 1, "", "getElementNodes"], [2, 1, 1, "", "getElements"], [2, 1, 1, "", "getInitConditions"], [2, 1, 1, "", "getMPIComm"], [2, 1, 1, "", "getNodes"], [2, 1, 1, "", "getNumDependentNodes"], [2, 1, 1, "", "getNumElements"], [2, 1, 1, "", "getNumNodes"], [2, 1, 1, "", "getNumOwnedNodes"], [2, 1, 1, "", "getOwnerRange"], [2, 1, 1, "", "getReordering"], [2, 1, 1, "", "getSimulationTime"], [2, 1, 1, "", "getVariables"], [2, 1, 1, "", "getVarsPerNode"], [2, 1, 1, "", "initialize"], [2, 1, 1, "", "reorderVec"], [2, 1, 1, "", "setAuxElements"], [2, 1, 1, "", "setBCValuesFromVec"], [2, 1, 1, "", "setBCs"], [2, 1, 1, "", "setDependentNodes"], [2, 1, 1, "", "setDesignVars"], [2, 1, 1, "", "setElementConnectivity"], [2, 1, 1, "", "setElements"], [2, 1, 1, "", "setInitConditions"], [2, 1, 1, "", "setNodes"], [2, 1, 1, "", "setNumThreads"], [2, 1, 1, "", "setSimulationTime"], [2, 1, 1, "", "setVariables"], [2, 1, 1, "", "testElement"], [2, 1, 1, "", "testFunction"], [2, 1, 1, "", "zeroDDotVariables"], [2, 1, 1, "", "zeroDotVariables"], [2, 1, 1, "", "zeroVariables"]], "TACS.Creator": [[2, 1, 1, "", "getElementPartition"], [2, 1, 1, "", "setBoundaryConditions"], [2, 1, 1, "", "setElements"], [2, 1, 1, "", "setGlobalConnectivity"]], "TACS.Integrator": [[2, 1, 1, "", "checkGradients"], [2, 1, 1, "", "evalFunctions"], [2, 1, 1, "", "getAdjoint"], [2, 1, 1, "", "getGradient"], [2, 1, 1, "", "getNumTimeSteps"], [2, 1, 1, "", "getStates"], [2, 1, 1, "", "getXptGradient"], [2, 1, 1, "", "initAdjoint"], [2, 1, 1, "", "integrate"], [2, 1, 1, "", "integrateAdjoint"], [2, 1, 1, "", "iterate"], [2, 1, 1, "", "iterateAdjoint"], [2, 1, 1, "", "loadStates"], [2, 1, 1, "", "persistStates"], [2, 1, 1, "", "postAdjoint"], [2, 1, 1, "", "setAbsTol"], [2, 1, 1, "", "setFH5"], [2, 1, 1, "", "setFunctions"], [2, 1, 1, "", "setInitNewtonDeltaFraction"], [2, 1, 1, "", "setJacAssemblyFreq"], [2, 1, 1, "", "setKrylovSubspaceMethod"], [2, 1, 1, "", "setMaxNewtonIters"], [2, 1, 1, "", "setOutputFrequency"], [2, 1, 1, "", "setOutputPrefix"], [2, 1, 1, "", "setPrintLevel"], [2, 1, 1, "", "setRelTol"], [2, 1, 1, "", "setTimeInterval"], [2, 1, 1, "", "setUseLapack"], [2, 1, 1, "", "setUseSchurMat"]], "TACS.MeshLoader": [[2, 1, 1, "", "addAuxElement"], [2, 1, 1, "", "addFunctionDomain"], [2, 1, 1, "", "createTACS"], [2, 1, 1, "", "getBCs"], [2, 1, 1, "", "getComponentDescript"], [2, 1, 1, "", "getConnectivity"], [2, 1, 1, "", "getElementDescript"], [2, 1, 1, "", "getNumComponents"], [2, 1, 1, "", "scanBDFFile"], [2, 1, 1, "", "setElement"]], "tacs": [[3, 2, 0, "module-0", "constitutive"], [5, 2, 0, "module-2", "elements"], [6, 2, 0, "-", "functions"], [28, 2, 0, "-", "pytacs"]], "tacs.constitutive": [[3, 0, 1, "", "BasicBeamConstitutive"], [3, 0, 1, "", "BladeStiffenedShellConstitutive"], [3, 0, 1, "", "CompositeShellConstitutive"], [3, 0, 1, "", "DOFSpringConstitutive"], [3, 0, 1, "", "GeneralMassConstitutive"], [3, 0, 1, "", "GeneralSpringConstitutive"], [3, 0, 1, "", "IsoRectangleBeamConstitutive"], [3, 0, 1, "", "IsoShellConstitutive"], [3, 0, 1, "", "IsoTubeBeamConstitutive"], [3, 0, 1, "", "LamParamShellConstitutive"], [3, 0, 1, "", "MaterialProperties"], [3, 0, 1, "", "OrthotropicPly"], [3, 0, 1, "", "PhaseChangeMaterialConstitutive"], [3, 0, 1, "", "PlaneStressConstitutive"], [3, 0, 1, "", "PointMassConstitutive"], [3, 0, 1, "", "ShellConstitutive"], [3, 0, 1, "", "SmearedCompositeShellConstitutive"], [3, 0, 1, "", "SolidConstitutive"]], "tacs.constitutive.BasicBeamConstitutive": [[3, 1, 1, "", "generateBDFCard"]], "tacs.constitutive.BladeStiffenedShellConstitutive": [[3, 1, 1, "", "setKSWeight"], [3, 1, 1, "", "setPanelPlyFractionBounds"], [3, 1, 1, "", "setPanelThicknessBounds"], [3, 1, 1, "", "setStiffenerHeightBounds"], [3, 1, 1, "", "setStiffenerPitchBounds"], [3, 1, 1, "", "setStiffenerPlyFractionBounds"], [3, 1, 1, "", "setStiffenerThicknessBounds"]], "tacs.constitutive.CompositeShellConstitutive": [[3, 1, 1, "", "generateBDFCard"]], "tacs.constitutive.DOFSpringConstitutive": [[3, 1, 1, "", "generateBDFCard"]], "tacs.constitutive.GeneralMassConstitutive": [[3, 1, 1, "", "evalMassMatrix"]], "tacs.constitutive.IsoRectangleBeamConstitutive": [[3, 1, 1, "", "generateBDFCard"]], "tacs.constitutive.IsoShellConstitutive": [[3, 1, 1, "", "generateBDFCard"]], "tacs.constitutive.IsoTubeBeamConstitutive": [[3, 1, 1, "", "generateBDFCard"]], "tacs.constitutive.MaterialProperties": [[3, 1, 1, "", "generateBDFCard"], [3, 1, 1, "", "getMaterialProperties"], [3, 1, 1, "", "getNastranID"], [3, 1, 1, "", "setDensity"], [3, 1, 1, "", "setNastranID"], [3, 1, 1, "", "setSpecificHeat"]], "tacs.constitutive.OrthotropicPly": [[3, 1, 1, "", "getMaterialProperties"]], "tacs.constitutive.ShellConstitutive": [[3, 1, 1, "", "setDrillingRegularization"]], "tacs.constitutive.SmearedCompositeShellConstitutive": [[3, 1, 1, "", "generateBDFCard"]], "tacs.constitutive.SolidConstitutive": [[3, 1, 1, "", "generateBDFCard"]], "tacs.constraints": [[17, 0, 1, "", "AdjacencyConstraint"], [22, 0, 1, "", "DVConstraint"], [25, 0, 1, "", "PanelLengthConstraint"], [32, 0, 1, "", "VolumeConstraint"], [17, 2, 0, "-", "adjacency"], [22, 2, 0, "-", "dv"], [25, 2, 0, "-", "panel_length"], [32, 2, 0, "-", "volume"]], "tacs.constraints.AdjacencyConstraint": [[17, 1, 1, "", "addConstraint"], [17, 3, 1, "", "dtype"], [17, 1, 1, "", "evalConstraints"], [17, 1, 1, "", "evalConstraintsSens"], [17, 1, 1, "", "getConstraintBounds"], [17, 1, 1, "", "getConstraintKeys"], [17, 1, 1, "", "getConstraintSizes"], [17, 1, 1, "", "getDesignVarRange"], [17, 1, 1, "", "getDesignVars"], [17, 1, 1, "", "getNodes"], [17, 1, 1, "", "getNumCoordinates"], [17, 1, 1, "", "getNumDesignVars"], [17, 1, 1, "", "getNumOwnedNodes"], [17, 1, 1, "", "getNumVariables"], [17, 1, 1, "", "getOption"], [17, 1, 1, "", "getVarsPerNode"], [17, 1, 1, "", "printDefaultOptions"], [17, 1, 1, "", "printModifiedOptions"], [17, 1, 1, "", "printOptions"], [17, 1, 1, "", "setDesignVars"], [17, 1, 1, "", "setNodes"], [17, 1, 1, "", "setOption"], [17, 1, 1, "", "setOptions"], [17, 1, 1, "", "setVarName"], [17, 1, 1, "", "writeVisualization"]], "tacs.constraints.DVConstraint": [[22, 1, 1, "", "addConstraint"], [22, 3, 1, "", "dtype"], [22, 1, 1, "", "evalConstraints"], [22, 1, 1, "", "evalConstraintsSens"], [22, 1, 1, "", "getConstraintBounds"], [22, 1, 1, "", "getConstraintKeys"], [22, 1, 1, "", "getConstraintSizes"], [22, 1, 1, "", "getDesignVarRange"], [22, 1, 1, "", "getDesignVars"], [22, 1, 1, "", "getNodes"], [22, 1, 1, "", "getNumCoordinates"], [22, 1, 1, "", "getNumDesignVars"], [22, 1, 1, "", "getNumOwnedNodes"], [22, 1, 1, "", "getNumVariables"], [22, 1, 1, "", "getOption"], [22, 1, 1, "", "getVarsPerNode"], [22, 1, 1, "", "printDefaultOptions"], [22, 1, 1, "", "printModifiedOptions"], [22, 1, 1, "", "printOptions"], [22, 1, 1, "", "setDesignVars"], [22, 1, 1, "", "setNodes"], [22, 1, 1, "", "setOption"], [22, 1, 1, "", "setOptions"], [22, 1, 1, "", "setVarName"]], "tacs.constraints.PanelLengthConstraint": [[25, 1, 1, "", "addConstraint"], [25, 3, 1, "", "dtype"], [25, 1, 1, "", "evalConstraints"], [25, 1, 1, "", "evalConstraintsSens"], [25, 1, 1, "", "getConstraintBounds"], [25, 1, 1, "", "getConstraintKeys"], [25, 1, 1, "", "getConstraintSizes"], [25, 1, 1, "", "getDesignVarRange"], [25, 1, 1, "", "getDesignVars"], [25, 1, 1, "", "getNodes"], [25, 1, 1, "", "getNumCoordinates"], [25, 1, 1, "", "getNumDesignVars"], [25, 1, 1, "", "getNumOwnedNodes"], [25, 1, 1, "", "getNumVariables"], [25, 1, 1, "", "getOption"], [25, 1, 1, "", "getVarsPerNode"], [25, 1, 1, "", "printDefaultOptions"], [25, 1, 1, "", "printModifiedOptions"], [25, 1, 1, "", "printOptions"], [25, 1, 1, "", "setDesignVars"], [25, 1, 1, "", "setNodes"], [25, 1, 1, "", "setOption"], [25, 1, 1, "", "setOptions"], [25, 1, 1, "", "setVarName"]], "tacs.constraints.VolumeConstraint": [[32, 1, 1, "", "addConstraint"], [32, 3, 1, "", "dtype"], [32, 1, 1, "", "evalConstraints"], [32, 1, 1, "", "evalConstraintsSens"], [32, 1, 1, "", "getConstraintBounds"], [32, 1, 1, "", "getConstraintKeys"], [32, 1, 1, "", "getConstraintSizes"], [32, 1, 1, "", "getDesignVarRange"], [32, 1, 1, "", "getDesignVars"], [32, 1, 1, "", "getNodes"], [32, 1, 1, "", "getNumCoordinates"], [32, 1, 1, "", "getNumDesignVars"], [32, 1, 1, "", "getNumOwnedNodes"], [32, 1, 1, "", "getNumVariables"], [32, 1, 1, "", "getOption"], [32, 1, 1, "", "getVarsPerNode"], [32, 1, 1, "", "printDefaultOptions"], [32, 1, 1, "", "printModifiedOptions"], [32, 1, 1, "", "printOptions"], [32, 1, 1, "", "setDesignVars"], [32, 1, 1, "", "setNodes"], [32, 1, 1, "", "setOption"], [32, 1, 1, "", "setOptions"], [32, 1, 1, "", "setVarName"], [32, 1, 1, "", "writeVisualization"]], "tacs.elements": [[5, 0, 1, "", "Beam2"], [5, 0, 1, "", "Beam2ModRot"], [5, 0, 1, "", "Beam3"], [5, 0, 1, "", "Beam3ModRot"], [5, 0, 1, "", "BeamRefAxisTransform"], [5, 0, 1, "", "CubicHexaBasis"], [5, 0, 1, "", "CubicQuadBasis"], [5, 0, 1, "", "CubicTriangleBasis"], [5, 0, 1, "", "Element2D"], [5, 0, 1, "", "Element3D"], [5, 0, 1, "", "HeatConduction2D"], [5, 0, 1, "", "HeatConduction3D"], [5, 0, 1, "", "LinearElasticity2D"], [5, 0, 1, "", "LinearElasticity3D"], [5, 0, 1, "", "LinearHexaBasis"], [5, 0, 1, "", "LinearQuadBasis"], [5, 0, 1, "", "LinearTetrahedralBasis"], [5, 0, 1, "", "LinearThermoelasticity2D"], [5, 0, 1, "", "LinearThermoelasticity3D"], [5, 0, 1, "", "LinearTriangleBasis"], [5, 0, 1, "", "MassElement"], [5, 0, 1, "", "PCMHeatConduction2D"], [5, 0, 1, "", "Quad16NonlinearShell"], [5, 0, 1, "", "Quad16NonlinearThermalShell"], [5, 0, 1, "", "Quad16Shell"], [5, 0, 1, "", "Quad16ThermalShell"], [5, 0, 1, "", "Quad4NonlinearShell"], [5, 0, 1, "", "Quad4NonlinearThermalShell"], [5, 0, 1, "", "Quad4Shell"], [5, 0, 1, "", "Quad4ThermalShell"], [5, 0, 1, "", "Quad9NonlinearShell"], [5, 0, 1, "", "Quad9NonlinearThermalShell"], [5, 0, 1, "", "Quad9Shell"], [5, 0, 1, "", "Quad9ThermalShell"], [5, 0, 1, "", "QuadraticHexaBasis"], [5, 0, 1, "", "QuadraticQuadBasis"], [5, 0, 1, "", "QuadraticTetrahedralBasis"], [5, 0, 1, "", "QuadraticTriangleBasis"], [5, 0, 1, "", "QuarticQuadBasis"], [5, 0, 1, "", "QuinticQuadBasis"], [5, 0, 1, "", "RBE2"], [5, 0, 1, "", "RBE3"], [5, 0, 1, "", "ShellNaturalTransform"], [5, 0, 1, "", "ShellRefAxisTransform"], [5, 0, 1, "", "SpringElement"], [5, 0, 1, "", "SpringIdentityTransform"], [5, 0, 1, "", "SpringRefAxisTransform"], [5, 0, 1, "", "SpringRefFrameTransform"], [5, 0, 1, "", "Tri3NonlinearShell"], [5, 0, 1, "", "Tri3NonlinearThermalShell"], [5, 0, 1, "", "Tri3Shell"], [5, 0, 1, "", "Tri3ThermalShell"]], "tacs.elements.BeamRefAxisTransform": [[5, 1, 1, "", "getRefAxis"]], "tacs.elements.RBE2": [[5, 1, 1, "", "setScalingParameters"]], "tacs.elements.RBE3": [[5, 1, 1, "", "setScalingParameters"]], "tacs.elements.ShellRefAxisTransform": [[5, 1, 1, "", "getRefAxis"]], "tacs.elements.SpringRefAxisTransform": [[5, 1, 1, "", "getRefAxis"]], "tacs.elements.SpringRefFrameTransform": [[5, 1, 1, "", "getRefAxes"]], "tacs.functions": [[6, 0, 1, "", "AverageTemperature"], [6, 0, 1, "", "CenterOfMass"], [6, 0, 1, "", "Compliance"], [6, 0, 1, "", "EnclosedVolume"], [6, 0, 1, "", "KSDisplacement"], [6, 0, 1, "", "KSFailure"], [6, 0, 1, "", "KSTemperature"], [6, 0, 1, "", "MomentOfInertia"], [6, 0, 1, "", "StructuralMass"]], "tacs.functions.Compliance": [[6, 1, 1, "", "setComplianceType"]], "tacs.mphys.builder": [[15, 0, 1, "", "TacsBuilder"]], "tacs.mphys.builder.TacsBuilder": [[15, 1, 1, "", "get_coupling_group_subsystem"], [15, 1, 1, "", "get_dv_bounds"], [15, 1, 1, "", "get_dv_scalers"], [15, 1, 1, "", "get_fea_assembler"], [15, 1, 1, "", "get_initial_dvs"], [15, 1, 1, "", "get_mesh_coordinate_subsystem"], [15, 1, 1, "", "get_ndof"], [15, 1, 1, "", "get_ndv"], [15, 1, 1, "", "get_number_of_nodes"], [15, 1, 1, "", "get_post_coupling_subsystem"], [15, 1, 1, "", "get_pre_coupling_subsystem"], [15, 1, 1, "", "get_solver"], [15, 1, 1, "", "get_tagged_indices"], [15, 1, 1, "", "initialize"]], "tacs.problems": [[19, 0, 1, "", "BucklingProblem"], [23, 0, 1, "", "ModalProblem"], [30, 0, 1, "", "StaticProblem"], [31, 0, 1, "", "TransientProblem"], [19, 2, 0, "-", "buckling"], [23, 2, 0, "-", "modal"], [30, 2, 0, "-", "static"], [31, 2, 0, "-", "transient"]], "tacs.problems.BucklingProblem": [[19, 1, 1, "", "addCentrifugalLoad"], [19, 1, 1, "", "addDVSens"], [19, 1, 1, "", "addFunction"], [19, 1, 1, "", "addInertialLoad"], [19, 1, 1, "", "addLoadFromBDF"], [19, 1, 1, "", "addLoadToComponents"], [19, 1, 1, "", "addLoadToNodes"], [19, 1, 1, "", "addLoadToRHS"], [19, 1, 1, "", "addPressureToComponents"], [19, 1, 1, "", "addPressureToElements"], [19, 1, 1, "", "addTractionToComponents"], [19, 1, 1, "", "addTractionToElements"], [19, 1, 1, "", "addXptSens"], [19, 3, 1, "", "dtype"], [19, 1, 1, "", "evalFunctions"], [19, 1, 1, "", "evalFunctionsSens"], [19, 1, 1, "", "evalSVSens"], [19, 1, 1, "", "getDesignVarRange"], [19, 1, 1, "", "getDesignVars"], [19, 1, 1, "", "getFunctionKeys"], [19, 1, 1, "", "getNodes"], [19, 1, 1, "", "getNumCoordinates"], [19, 1, 1, "", "getNumDesignVars"], [19, 1, 1, "", "getNumEigs"], [19, 1, 1, "", "getNumOwnedNodes"], [19, 1, 1, "", "getNumVariables"], [19, 1, 1, "", "getOption"], [19, 1, 1, "", "getVariables"], [19, 1, 1, "", "getVarsPerNode"], [19, 4, 1, "", "isNonlinear"], [19, 1, 1, "", "printDefaultOptions"], [19, 1, 1, "", "printModifiedOptions"], [19, 1, 1, "", "printOptions"], [19, 1, 1, "", "setDesignVars"], [19, 1, 1, "", "setNodes"], [19, 1, 1, "", "setOption"], [19, 1, 1, "", "setOptions"], [19, 1, 1, "", "setValName"], [19, 1, 1, "", "setVarName"], [19, 1, 1, "", "solve"], [19, 1, 1, "", "writeSensFile"], [19, 1, 1, "", "writeSolution"], [19, 1, 1, "", "zeroLoads"]], "tacs.problems.ModalProblem": [[23, 1, 1, "", "addFunction"], [23, 3, 1, "", "dtype"], [23, 1, 1, "", "evalFunctions"], [23, 1, 1, "", "evalFunctionsSens"], [23, 1, 1, "", "getDesignVarRange"], [23, 1, 1, "", "getDesignVars"], [23, 1, 1, "", "getFunctionKeys"], [23, 1, 1, "", "getNodes"], [23, 1, 1, "", "getNumCoordinates"], [23, 1, 1, "", "getNumDesignVars"], [23, 1, 1, "", "getNumEigs"], [23, 1, 1, "", "getNumOwnedNodes"], [23, 1, 1, "", "getNumVariables"], [23, 1, 1, "", "getOption"], [23, 1, 1, "", "getVariables"], [23, 1, 1, "", "getVarsPerNode"], [23, 4, 1, "", "isNonlinear"], [23, 1, 1, "", "printDefaultOptions"], [23, 1, 1, "", "printModifiedOptions"], [23, 1, 1, "", "printOptions"], [23, 1, 1, "", "setDesignVars"], [23, 1, 1, "", "setNodes"], [23, 1, 1, "", "setOption"], [23, 1, 1, "", "setOptions"], [23, 1, 1, "", "setValName"], [23, 1, 1, "", "setVarName"], [23, 1, 1, "", "solve"], [23, 1, 1, "", "writeSensFile"], [23, 1, 1, "", "writeSolution"]], "tacs.problems.StaticProblem": [[30, 1, 1, "", "addAdjointResProducts"], [30, 1, 1, "", "addAdjointResXptSensProducts"], [30, 1, 1, "", "addCentrifugalLoad"], [30, 1, 1, "", "addDVSens"], [30, 1, 1, "", "addFunction"], [30, 1, 1, "", "addInertialLoad"], [30, 1, 1, "", "addLoadFromBDF"], [30, 1, 1, "", "addLoadToComponents"], [30, 1, 1, "", "addLoadToNodes"], [30, 1, 1, "", "addLoadToRHS"], [30, 1, 1, "", "addPressureToComponents"], [30, 1, 1, "", "addPressureToElements"], [30, 1, 1, "", "addSVSens"], [30, 1, 1, "", "addTractionToComponents"], [30, 1, 1, "", "addTractionToElements"], [30, 1, 1, "", "addTransposeJacVecProduct"], [30, 1, 1, "", "addXptSens"], [30, 3, 1, "", "dtype"], [30, 1, 1, "", "evalFunctions"], [30, 1, 1, "", "evalFunctionsSens"], [30, 1, 1, "", "getDesignVarRange"], [30, 1, 1, "", "getDesignVars"], [30, 1, 1, "", "getForces"], [30, 1, 1, "", "getFunctionKeys"], [30, 1, 1, "", "getJacobian"], [30, 1, 1, "", "getLoadScale"], [30, 1, 1, "", "getNodes"], [30, 1, 1, "", "getNumCoordinates"], [30, 1, 1, "", "getNumDesignVars"], [30, 1, 1, "", "getNumOwnedNodes"], [30, 1, 1, "", "getNumVariables"], [30, 1, 1, "", "getOption"], [30, 1, 1, "", "getOutputFileName"], [30, 1, 1, "", "getResidual"], [30, 1, 1, "", "getVariables"], [30, 1, 1, "", "getVarsPerNode"], [30, 4, 1, "", "isNonlinear"], [30, 4, 1, "", "loadScale"], [30, 1, 1, "", "printDefaultOptions"], [30, 1, 1, "", "printModifiedOptions"], [30, 1, 1, "", "printOptions"], [30, 1, 1, "", "setDesignVars"], [30, 1, 1, "", "setLoadScale"], [30, 1, 1, "", "setNodes"], [30, 1, 1, "", "setOption"], [30, 1, 1, "", "setOptions"], [30, 1, 1, "", "setVarName"], [30, 1, 1, "", "setVariables"], [30, 1, 1, "", "solve"], [30, 1, 1, "", "solveAdjoint"], [30, 1, 1, "", "updateJacobian"], [30, 1, 1, "", "updatePreconditioner"], [30, 1, 1, "", "writeLoadToBDF"], [30, 1, 1, "", "writeSensFile"], [30, 1, 1, "", "writeSolution"], [30, 1, 1, "", "writeSolutionHistory"], [30, 1, 1, "", "zeroLoads"], [30, 1, 1, "", "zeroVariables"]], "tacs.problems.TransientProblem": [[31, 1, 1, "", "addCentrifugalLoad"], [31, 1, 1, "", "addFunction"], [31, 1, 1, "", "addInertialLoad"], [31, 1, 1, "", "addLoadFromBDF"], [31, 1, 1, "", "addLoadToComponents"], [31, 1, 1, "", "addLoadToNodes"], [31, 1, 1, "", "addLoadToRHS"], [31, 1, 1, "", "addPressureToComponents"], [31, 1, 1, "", "addPressureToElements"], [31, 1, 1, "", "addTractionToComponents"], [31, 1, 1, "", "addTractionToElements"], [31, 3, 1, "", "dtype"], [31, 1, 1, "", "evalFunctions"], [31, 1, 1, "", "evalFunctionsSens"], [31, 1, 1, "", "getDesignVarRange"], [31, 1, 1, "", "getDesignVars"], [31, 1, 1, "", "getFunctionKeys"], [31, 1, 1, "", "getNodes"], [31, 1, 1, "", "getNumCoordinates"], [31, 1, 1, "", "getNumDesignVars"], [31, 1, 1, "", "getNumOwnedNodes"], [31, 1, 1, "", "getNumTimeStages"], [31, 1, 1, "", "getNumTimeSteps"], [31, 1, 1, "", "getNumVariables"], [31, 1, 1, "", "getOption"], [31, 1, 1, "", "getTimeStages"], [31, 1, 1, "", "getTimeSteps"], [31, 1, 1, "", "getVariables"], [31, 1, 1, "", "getVarsPerNode"], [31, 4, 1, "", "isNonlinear"], [31, 1, 1, "", "iterate"], [31, 1, 1, "", "prepIterativeSolve"], [31, 1, 1, "", "printDefaultOptions"], [31, 1, 1, "", "printModifiedOptions"], [31, 1, 1, "", "printOptions"], [31, 1, 1, "", "setDesignVars"], [31, 1, 1, "", "setInitConditions"], [31, 1, 1, "", "setNodes"], [31, 1, 1, "", "setOption"], [31, 1, 1, "", "setOptions"], [31, 1, 1, "", "setVarName"], [31, 1, 1, "", "solve"], [31, 1, 1, "", "writeSensFile"], [31, 1, 1, "", "writeSolution"], [31, 1, 1, "", "zeroLoads"]], "tacs.pytacs": [[28, 5, 1, "", "elemCallBack"], [28, 0, 1, "", "pyTACS"]], "tacs.pytacs.pyTACS": [[28, 1, 1, "", "addGlobalDV"], [28, 1, 1, "", "applyBCsToVec"], [28, 1, 1, "", "assignMassDV"], [28, 1, 1, "", "createAdjacencyConstraint"], [28, 1, 1, "", "createBucklingProblem"], [28, 1, 1, "", "createDVConstraint"], [28, 1, 1, "", "createDesignVec"], [28, 1, 1, "", "createModalProblem"], [28, 1, 1, "", "createNodeVec"], [28, 1, 1, "", "createPanelLengthConstraint"], [28, 1, 1, "", "createStaticProblem"], [28, 1, 1, "", "createTACSProbsFromBDF"], [28, 1, 1, "", "createTransientProblem"], [28, 1, 1, "", "createVec"], [28, 1, 1, "", "createVolumeConstraint"], [28, 3, 1, "", "dtype"], [28, 1, 1, "", "getBDFInfo"], [28, 1, 1, "", "getCompNames"], [28, 1, 1, "", "getDesignVarRange"], [28, 1, 1, "", "getGlobalDVKeys"], [28, 1, 1, "", "getGlobalDVNums"], [28, 1, 1, "", "getGlobalDVs"], [28, 1, 1, "", "getGlobalNodeIDsForComps"], [28, 1, 1, "", "getLocalMultiplierNodeIDs"], [28, 1, 1, "", "getLocalNodeIDsForComps"], [28, 1, 1, "", "getNumComponents"], [28, 1, 1, "", "getNumDesignVars"], [28, 1, 1, "", "getNumOwnedMultiplierNodes"], [28, 1, 1, "", "getNumOwnedNodes"], [28, 1, 1, "", "getOption"], [28, 1, 1, "", "getOrigDesignVars"], [28, 1, 1, "", "getOrigNodes"], [28, 1, 1, "", "getTotalNumDesignVars"], [28, 1, 1, "", "getTotalNumGlobalDVs"], [28, 1, 1, "", "getVarsPerNode"], [28, 1, 1, "", "initialize"], [28, 4, 1, "", "isNonlinear"], [28, 1, 1, "", "printDefaultOptions"], [28, 1, 1, "", "printModifiedOptions"], [28, 1, 1, "", "printOptions"], [28, 1, 1, "", "selectCompIDs"], [28, 1, 1, "", "setBCsInVec"], [28, 1, 1, "", "setOption"], [28, 1, 1, "", "setOptions"], [28, 1, 1, "", "writeBDF"]], "tacs.solvers": [[18, 0, 1, "", "BaseSolver"], [21, 0, 1, "", "ContinuationSolver"], [24, 0, 1, "", "NewtonSolver"], [18, 2, 0, "-", "base"], [21, 2, 0, "-", "continuation"], [24, 2, 0, "-", "newton"]], "tacs.solvers.BaseSolver": [[18, 3, 1, "", "dtype"], [18, 4, 1, "", "fatalFailure"], [18, 1, 1, "", "getHistoryVariables"], [18, 1, 1, "", "getOption"], [18, 4, 1, "", "hasConverged"], [18, 1, 1, "", "initializeSolve"], [18, 4, 1, "", "iterationCount"], [18, 1, 1, "", "printDefaultOptions"], [18, 1, 1, "", "printModifiedOptions"], [18, 1, 1, "", "printOptions"], [18, 1, 1, "", "reset"], [18, 1, 1, "", "setCallback"], [18, 1, 1, "", "setConvergenceTolerance"], [18, 1, 1, "", "setOption"], [18, 1, 1, "", "setOptions"], [18, 1, 1, "", "setRefNorm"], [18, 1, 1, "", "solve"]], "tacs.solvers.ContinuationSolver": [[21, 1, 1, "", "computeForceVectors"], [21, 3, 1, "", "dtype"], [21, 4, 1, "", "fatalFailure"], [21, 1, 1, "", "getHistoryVariables"], [21, 1, 1, "", "getOption"], [21, 4, 1, "", "hasConverged"], [21, 1, 1, "", "initializeSolve"], [21, 4, 1, "", "iterationCount"], [21, 1, 1, "", "printDefaultOptions"], [21, 1, 1, "", "printModifiedOptions"], [21, 1, 1, "", "printOptions"], [21, 1, 1, "", "reset"], [21, 1, 1, "", "setCallback"], [21, 1, 1, "", "setConvergenceTolerance"], [21, 1, 1, "", "setOption"], [21, 1, 1, "", "setOptions"], [21, 1, 1, "", "setRefNorm"], [21, 1, 1, "", "solve"]], "tacs.solvers.NewtonSolver": [[24, 3, 1, "", "dtype"], [24, 4, 1, "", "fatalFailure"], [24, 1, 1, "", "getHistoryVariables"], [24, 1, 1, "", "getOption"], [24, 4, 1, "", "hasConverged"], [24, 1, 1, "", "initializeSolve"], [24, 4, 1, "", "iterationCount"], [24, 1, 1, "", "printDefaultOptions"], [24, 1, 1, "", "printModifiedOptions"], [24, 1, 1, "", "printOptions"], [24, 1, 1, "", "reset"], [24, 1, 1, "", "setCallback"], [24, 1, 1, "", "setConvergenceTolerance"], [24, 1, 1, "", "setOption"], [24, 1, 1, "", "setOptions"], [24, 1, 1, "", "setRefNorm"], [24, 1, 1, "", "solve"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:module", "3": "py:attribute", "4": "py:property", "5": "py:function"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "module", "Python module"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "property", "Python property"], "5": ["py", "function", "Python function"]}, "titleterms": {"caps2tac": 0, "instal": [1, 13], "esp": 1, "cap": 1, "intro": 1, "exampl": [1, 12], "test": 1, "direct": 2, "workflow": [2, 27], "assembl": 2, "meshload": 2, "creator": 2, "frequencyanalysi": 2, "integr": 2, "constitut": [3, 34], "modul": [3, 4, 5, 6], "materi": 3, "class": [3, 5, 15, 18, 20, 26, 28, 29], "core": 4, "element": [5, 34], "basi": [5, 34], "model": 5, "transform": [5, 34], "function": 6, "beam": [7, 34], "optim": [7, 8, 9], "mphy": [7, 9, 16], "crm": 8, "composit": 9, "plate": [9, 10], "under": 10, "static": 10, "load": 10, "batteri": 11, "pack": 11, "dure": 11, "thermal": [11, 34], "runawai": 11, "tac": [12, 13, 18, 21, 24, 34], "overview": 12, "get": 12, "start": 12, "refer": [12, 15, 17, 18, 19, 21, 22, 23, 24, 25, 28, 30, 31, 32, 34], "indic": 12, "tabl": 12, "from": 13, "anaconda": 13, "sourc": 13, "prerequisit": 13, "basic": 13, "step": 13, "compil": 13, "detail": 13, "instruct": 13, "check": 13, "out": 13, "code": 13, "depend": 13, "make": 13, "c": 13, "librari": 13, "postprocess": 13, "tool": 13, "python": 13, "interfac": [13, 14], "tacsbuild": 15, "api": [15, 17, 18, 19, 21, 22, 23, 24, 25, 28, 30, 31, 32], "adjacencyconstraint": 17, "option": [17, 19, 21, 23, 24, 28, 30, 31, 32], "basesolv": 18, "base": 18, "solver": [18, 21, 24, 29, 30], "bucklingproblem": 19, "constraint": 20, "continuationsolv": 21, "nonlinear": [21, 24, 30], "continu": 21, "dvconstraint": 22, "modalproblem": 23, "newtonsolv": 24, "newton": 24, "panellengthconstraint": 25, "problem": 26, "pytac": [27, 28], "initi": 28, "elemcallback": 28, "without": 28, "tag": 28, "compon": [28, 34], "group": 28, "bdf": 28, "icem": 28, "label": 28, "format": 28, "femap": 28, "patran": 28, "hypermesh": 28, "staticproblem": 30, "transientproblem": 31, "volumeconstraint": 32, "shell": 34, "director": 34, "parametr": 34, "volum": 34, "displac": 34, "local": 34, "attach": 34, "frame": 34, "axi": 34, "project": 34, "natur": 34, "strain": 34, "express": 34, "formul": 34, "drill": 34, "rotat": 34, "mix": 34, "interpol": 34, "tensori": 34, "relationship": 34, "equat": 34, "motion": 34, "implement": 34, "field": 34, "comput": 34, "theori": 35}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 58}, "alltitles": {"caps2tacs": [[0, "caps2tacs"]], "Installation of ESP/CAPS": [[1, "installation-of-esp-caps"]], "Intro": [[1, "intro"]], "Examples": [[1, "examples"], [12, "examples"]], "Testing": [[1, "testing"]], "Direct": [[2, "direct"]], "Workflow": [[2, "workflow"], [27, "workflow"]], "Assembler": [[2, "assembler"]], "MeshLoader": [[2, "meshloader"]], "Creator": [[2, "creator"]], "FrequencyAnalysis": [[2, "frequencyanalysis"]], "Integrator": [[2, "integrator"]], "constitutive module": [[3, "constitutive-module"]], "Material classes": [[3, "material-classes"]], "Constitutive classes": [[3, "constitutive-classes"]], "Core modules": [[4, "core-modules"]], "elements module": [[5, "elements-module"]], "Basis classes": [[5, "basis-classes"]], "Model classes": [[5, "model-classes"]], "Transform classes": [[5, "transform-classes"]], "Element classes": [[5, "element-classes"]], "functions module": [[6, "functions-module"]], "Beam optimization with MPhys": [[7, "beam-optimization-with-mphys"]], "CRM Optimization": [[8, "crm-optimization"]], "Composite plate optimization with MPhys": [[9, "composite-plate-optimization-with-mphys"]], "Plate under static load": [[10, "plate-under-static-load"]], "Battery pack during thermal runaway": [[11, "battery-pack-during-thermal-runaway"]], "TACS Overview": [[12, "tacs-overview"]], "Getting Started": [[12, "getting-started"]], "References": [[12, "references"]], "Indices and tables": [[12, "indices-and-tables"]], "Install": [[13, "install"]], "From Anaconda": [[13, "from-anaconda"]], "From source": [[13, "from-source"]], "Prerequisites": [[13, "prerequisites"]], "Basic steps to compile TACS": [[13, "basic-steps-to-compile-tacs"]], "Detailed installation instructions": [[13, "detailed-installation-instructions"]], "Checking out the code": [[13, "checking-out-the-code"]], "Install dependencies": [[13, "install-dependencies"]], "Make the C++ TACS library": [[13, "make-the-c-tacs-library"]], "Install postprocessing tools": [[13, "install-postprocessing-tools"]], "Installing the python interface": [[13, "installing-the-python-interface"]], "Interfaces": [[14, "interfaces"]], "TacsBuilder class": [[15, "tacsbuilder-class"]], "API Reference": [[15, "api-reference"], [17, "api-reference"], [18, "api-reference"], [19, "api-reference"], [21, "api-reference"], [22, "api-reference"], [23, "api-reference"], [24, "api-reference"], [25, "api-reference"], [28, "api-reference"], [30, "api-reference"], [31, "api-reference"], [32, "api-reference"]], "MPhys": [[16, "mphys"]], "AdjacencyConstraint": [[17, "module-tacs.constraints.adjacency"]], "Options": [[17, "options"], [19, "options"], [21, "options"], [23, "options"], [24, "options"], [28, "options"], [30, "options"], [31, "options"], [32, "options"]], "BaseSolver": [[18, "module-tacs.solvers.base"]], "TACS: Base Solver Class": [[18, "tacs-base-solver-class"]], "BucklingProblem": [[19, "module-tacs.problems.buckling"]], "Constraint classes": [[20, "constraint-classes"]], "ContinuationSolver": [[21, "module-tacs.solvers.continuation"]], "TACS Nonlinear Continuation Solver": [[21, "tacs-nonlinear-continuation-solver"]], "DVConstraint": [[22, "module-tacs.constraints.dv"]], "ModalProblem": [[23, "module-tacs.problems.modal"]], "NewtonSolver": [[24, "module-tacs.solvers.newton"]], "TACS Nonlinear Newton Solver": [[24, "tacs-nonlinear-newton-solver"]], "PanelLengthConstraint": [[25, "module-tacs.constraints.panel_length"]], "Problem classes": [[26, "problem-classes"]], "pyTACS": [[27, "pytacs"]], "pyTACS class": [[28, "module-tacs.pytacs"]], "Initializing": [[28, "initializing"]], "Initializing with elemCallBack": [[28, "initializing-with-elemcallback"]], "Initializing without elemCallBack": [[28, "initializing-without-elemcallback"]], "Tagging component groups in BDF": [[28, "tagging-component-groups-in-bdf"]], "ICEM component label format": [[28, "icem-component-label-format"]], "FEMAP component label format": [[28, "femap-component-label-format"]], "Patran component label format": [[28, "patran-component-label-format"]], "HyperMesh component label format": [[28, "hypermesh-component-label-format"]], "Solver classes": [[29, "solver-classes"]], "StaticProblem": [[30, "module-tacs.problems.static"]], "Nonlinear solvers": [[30, "nonlinear-solvers"]], "TransientProblem": [[31, "module-tacs.problems.transient"]], "VolumeConstraint": [[32, "module-tacs.constraints.volume"]], "Beam and shell elements in TACS": [[34, "beam-and-shell-elements-in-tacs"]], "Director parametrization": [[34, "director-parametrization"]], "Beam volume parametrization": [[34, "beam-volume-parametrization"]], "Shell volume parametrization": [[34, "shell-volume-parametrization"]], "Displacement parametrization": [[34, "displacement-parametrization"]], "Transformation to local shell-attached frame": [[34, "transformation-to-local-shell-attached-frame"]], "Reference axis projection transform": [[34, "reference-axis-projection-transform"]], "Natural transform": [[34, "natural-transform"]], "Strain expressions": [[34, "strain-expressions"]], "Thermal strain formulation": [[34, "thermal-strain-formulation"]], "Drilling rotation": [[34, "drilling-rotation"]], "Mixed Interpolation of Tensorial Components": [[34, "mixed-interpolation-of-tensorial-components"]], "Constitutive relationships for the shell element": [[34, "constitutive-relationships-for-the-shell-element"]], "Equations of motion": [[34, "equations-of-motion"]], "Director implementation": [[34, "director-implementation"]], "Beam element implementation": [[34, "beam-element-implementation"]], "Shell element implementation": [[34, "shell-element-implementation"]], "Shell element basis": [[34, "shell-element-basis"]], "Director field parametrization": [[34, "director-field-parametrization"]], "Transformation": [[34, "transformation"]], "Strain computation": [[34, "strain-computation"]], "Theory": [[35, "theory"]]}, "indexentries": {"assembler (class in tacs)": [[2, "TACS.Assembler"]], "creator (class in tacs)": [[2, "TACS.Creator"]], "integrator (class in tacs)": [[2, "TACS.Integrator"]], "meshloader (class in tacs)": [[2, "TACS.MeshLoader"]], "addadjointresproducts() (tacs.assembler method)": [[2, "TACS.Assembler.addAdjointResProducts"]], "addadjointresxptsensproducts() (tacs.assembler method)": [[2, "TACS.Assembler.addAdjointResXptSensProducts"]], "addauxelement() (tacs.meshloader method)": [[2, "TACS.MeshLoader.addAuxElement"]], "adddvsens() (tacs.assembler method)": [[2, "TACS.Assembler.addDVSens"]], "addfunctiondomain() (tacs.meshloader method)": [[2, "TACS.MeshLoader.addFunctionDomain"]], "addjacobianvecproduct() (tacs.assembler method)": [[2, "TACS.Assembler.addJacobianVecProduct"]], "addmatdvsensinnerproduct() (tacs.assembler method)": [[2, "TACS.Assembler.addMatDVSensInnerProduct"]], "addsvsens() (tacs.assembler method)": [[2, "TACS.Assembler.addSVSens"]], "addxptsens() (tacs.assembler method)": [[2, "TACS.Assembler.addXptSens"]], "applybcs() (tacs.assembler method)": [[2, "TACS.Assembler.applyBCs"]], "applymatbcs() (tacs.assembler method)": [[2, "TACS.Assembler.applyMatBCs"]], "assemblejacobian() (tacs.assembler method)": [[2, "TACS.Assembler.assembleJacobian"]], "assemblematcombo() (tacs.assembler method)": [[2, "TACS.Assembler.assembleMatCombo"]], "assemblemattype() (tacs.assembler method)": [[2, "TACS.Assembler.assembleMatType"]], "assembleres() (tacs.assembler method)": [[2, "TACS.Assembler.assembleRes"]], "checkgradients() (tacs.integrator method)": [[2, "TACS.Integrator.checkGradients"]], "computereordering() (tacs.assembler method)": [[2, "TACS.Assembler.computeReordering"]], "copyvariables() (tacs.assembler method)": [[2, "TACS.Assembler.copyVariables"]], "create() (tacs.assembler static method)": [[2, "TACS.Assembler.create"]], "createdesignvec() (tacs.assembler method)": [[2, "TACS.Assembler.createDesignVec"]], "createmat() (tacs.assembler method)": [[2, "TACS.Assembler.createMat"]], "createnodevec() (tacs.assembler method)": [[2, "TACS.Assembler.createNodeVec"]], "createschurmat() (tacs.assembler method)": [[2, "TACS.Assembler.createSchurMat"]], "createtacs() (tacs.meshloader method)": [[2, "TACS.MeshLoader.createTACS"]], "createvec() (tacs.assembler method)": [[2, "TACS.Assembler.createVec"]], "evalenergies() (tacs.assembler method)": [[2, "TACS.Assembler.evalEnergies"]], "evalfunctions() (tacs.assembler method)": [[2, "TACS.Assembler.evalFunctions"]], "evalfunctions() (tacs.integrator method)": [[2, "TACS.Integrator.evalFunctions"]], "getadjoint() (tacs.integrator method)": [[2, "TACS.Integrator.getAdjoint"]], "getbcs() (tacs.meshloader method)": [[2, "TACS.MeshLoader.getBCs"]], "getbcmap() (tacs.assembler method)": [[2, "TACS.Assembler.getBcMap"]], "getcomponentdescript() (tacs.meshloader method)": [[2, "TACS.MeshLoader.getComponentDescript"]], "getconnectivity() (tacs.meshloader method)": [[2, "TACS.MeshLoader.getConnectivity"]], "getdesignvarrange() (tacs.assembler method)": [[2, "TACS.Assembler.getDesignVarRange"]], "getdesignvars() (tacs.assembler method)": [[2, "TACS.Assembler.getDesignVars"]], "getelementdata() (tacs.assembler method)": [[2, "TACS.Assembler.getElementData"]], "getelementdescript() (tacs.meshloader method)": [[2, "TACS.MeshLoader.getElementDescript"]], "getelementnodes() (tacs.assembler method)": [[2, "TACS.Assembler.getElementNodes"]], "getelementpartition() (tacs.creator method)": [[2, "TACS.Creator.getElementPartition"]], "getelements() (tacs.assembler method)": [[2, "TACS.Assembler.getElements"]], "getgradient() (tacs.integrator method)": [[2, "TACS.Integrator.getGradient"]], "getinitconditions() (tacs.assembler method)": [[2, "TACS.Assembler.getInitConditions"]], "getmpicomm() (tacs.assembler method)": [[2, "TACS.Assembler.getMPIComm"]], "getnodes() (tacs.assembler method)": [[2, "TACS.Assembler.getNodes"]], "getnumcomponents() (tacs.meshloader method)": [[2, "TACS.MeshLoader.getNumComponents"]], "getnumdependentnodes() (tacs.assembler method)": [[2, "TACS.Assembler.getNumDependentNodes"]], "getnumelements() (tacs.assembler method)": [[2, "TACS.Assembler.getNumElements"]], "getnumnodes() (tacs.assembler method)": [[2, "TACS.Assembler.getNumNodes"]], "getnumownednodes() (tacs.assembler method)": [[2, "TACS.Assembler.getNumOwnedNodes"]], "getnumtimesteps() (tacs.integrator method)": [[2, "TACS.Integrator.getNumTimeSteps"]], "getownerrange() (tacs.assembler method)": [[2, "TACS.Assembler.getOwnerRange"]], "getreordering() (tacs.assembler method)": [[2, "TACS.Assembler.getReordering"]], "getsimulationtime() (tacs.assembler method)": [[2, "TACS.Assembler.getSimulationTime"]], "getstates() (tacs.integrator method)": [[2, "TACS.Integrator.getStates"]], "getvariables() (tacs.assembler method)": [[2, "TACS.Assembler.getVariables"]], "getvarspernode() (tacs.assembler method)": [[2, "TACS.Assembler.getVarsPerNode"]], "getxptgradient() (tacs.integrator method)": [[2, "TACS.Integrator.getXptGradient"]], "initadjoint() (tacs.integrator method)": [[2, "TACS.Integrator.initAdjoint"]], "initialize() (tacs.assembler method)": [[2, "TACS.Assembler.initialize"]], "integrate() (tacs.integrator method)": [[2, "TACS.Integrator.integrate"]], "integrateadjoint() (tacs.integrator method)": [[2, "TACS.Integrator.integrateAdjoint"]], "iterate() (tacs.integrator method)": [[2, "TACS.Integrator.iterate"]], "iterateadjoint() (tacs.integrator method)": [[2, "TACS.Integrator.iterateAdjoint"]], "loadstates() (tacs.integrator method)": [[2, "TACS.Integrator.loadStates"]], "persiststates() (tacs.integrator method)": [[2, "TACS.Integrator.persistStates"]], "postadjoint() (tacs.integrator method)": [[2, "TACS.Integrator.postAdjoint"]], "reordervec() (tacs.assembler method)": [[2, "TACS.Assembler.reorderVec"]], "scanbdffile() (tacs.meshloader method)": [[2, "TACS.MeshLoader.scanBDFFile"]], "setabstol() (tacs.integrator method)": [[2, "TACS.Integrator.setAbsTol"]], "setauxelements() (tacs.assembler method)": [[2, "TACS.Assembler.setAuxElements"]], "setbcvaluesfromvec() (tacs.assembler method)": [[2, "TACS.Assembler.setBCValuesFromVec"]], "setbcs() (tacs.assembler method)": [[2, "TACS.Assembler.setBCs"]], "setboundaryconditions() (tacs.creator method)": [[2, "TACS.Creator.setBoundaryConditions"]], "setdependentnodes() (tacs.assembler method)": [[2, "TACS.Assembler.setDependentNodes"]], "setdesignvars() (tacs.assembler method)": [[2, "TACS.Assembler.setDesignVars"]], "setelement() (tacs.meshloader method)": [[2, "TACS.MeshLoader.setElement"]], "setelementconnectivity() (tacs.assembler method)": [[2, "TACS.Assembler.setElementConnectivity"]], "setelements() (tacs.assembler method)": [[2, "TACS.Assembler.setElements"]], "setelements() (tacs.creator method)": [[2, "TACS.Creator.setElements"]], "setfh5() (tacs.integrator method)": [[2, "TACS.Integrator.setFH5"]], "setfunctions() (tacs.integrator method)": [[2, "TACS.Integrator.setFunctions"]], "setglobalconnectivity() (tacs.creator method)": [[2, "TACS.Creator.setGlobalConnectivity"]], "setinitconditions() (tacs.assembler method)": [[2, "TACS.Assembler.setInitConditions"]], "setinitnewtondeltafraction() (tacs.integrator method)": [[2, "TACS.Integrator.setInitNewtonDeltaFraction"]], "setjacassemblyfreq() (tacs.integrator method)": [[2, "TACS.Integrator.setJacAssemblyFreq"]], "setkrylovsubspacemethod() (tacs.integrator method)": [[2, "TACS.Integrator.setKrylovSubspaceMethod"]], "setmaxnewtoniters() (tacs.integrator method)": [[2, "TACS.Integrator.setMaxNewtonIters"]], "setnodes() (tacs.assembler method)": [[2, "TACS.Assembler.setNodes"]], "setnumthreads() (tacs.assembler method)": [[2, "TACS.Assembler.setNumThreads"]], "setoutputfrequency() (tacs.integrator method)": [[2, "TACS.Integrator.setOutputFrequency"]], "setoutputprefix() (tacs.integrator method)": [[2, "TACS.Integrator.setOutputPrefix"]], "setprintlevel() (tacs.integrator method)": [[2, "TACS.Integrator.setPrintLevel"]], "setreltol() (tacs.integrator method)": [[2, "TACS.Integrator.setRelTol"]], "setsimulationtime() (tacs.assembler method)": [[2, "TACS.Assembler.setSimulationTime"]], "settimeinterval() (tacs.integrator method)": [[2, "TACS.Integrator.setTimeInterval"]], "setuselapack() (tacs.integrator method)": [[2, "TACS.Integrator.setUseLapack"]], "setuseschurmat() (tacs.integrator method)": [[2, "TACS.Integrator.setUseSchurMat"]], "setvariables() (tacs.assembler method)": [[2, "TACS.Assembler.setVariables"]], "testelement() (tacs.assembler method)": [[2, "TACS.Assembler.testElement"]], "testfunction() (tacs.assembler method)": [[2, "TACS.Assembler.testFunction"]], "zeroddotvariables() (tacs.assembler method)": [[2, "TACS.Assembler.zeroDDotVariables"]], "zerodotvariables() (tacs.assembler method)": [[2, "TACS.Assembler.zeroDotVariables"]], "zerovariables() (tacs.assembler method)": [[2, "TACS.Assembler.zeroVariables"]], "basicbeamconstitutive (class in tacs.constitutive)": [[3, "tacs.constitutive.BasicBeamConstitutive"]], "bladestiffenedshellconstitutive (class in tacs.constitutive)": [[3, "tacs.constitutive.BladeStiffenedShellConstitutive"]], "compositeshellconstitutive (class in tacs.constitutive)": [[3, "tacs.constitutive.CompositeShellConstitutive"]], "dofspringconstitutive (class in tacs.constitutive)": [[3, "tacs.constitutive.DOFSpringConstitutive"]], "generalmassconstitutive (class in tacs.constitutive)": [[3, "tacs.constitutive.GeneralMassConstitutive"]], "generalspringconstitutive (class in tacs.constitutive)": [[3, "tacs.constitutive.GeneralSpringConstitutive"]], "isorectanglebeamconstitutive (class in tacs.constitutive)": [[3, "tacs.constitutive.IsoRectangleBeamConstitutive"]], "isoshellconstitutive (class in tacs.constitutive)": [[3, "tacs.constitutive.IsoShellConstitutive"]], "isotubebeamconstitutive (class in tacs.constitutive)": [[3, "tacs.constitutive.IsoTubeBeamConstitutive"]], "lamparamshellconstitutive (class in tacs.constitutive)": [[3, "tacs.constitutive.LamParamShellConstitutive"]], "materialproperties (class in tacs.constitutive)": [[3, "tacs.constitutive.MaterialProperties"]], "orthotropicply (class in tacs.constitutive)": [[3, "tacs.constitutive.OrthotropicPly"]], "phasechangematerialconstitutive (class in tacs.constitutive)": [[3, "tacs.constitutive.PhaseChangeMaterialConstitutive"]], "planestressconstitutive (class in tacs.constitutive)": [[3, "tacs.constitutive.PlaneStressConstitutive"]], "pointmassconstitutive (class in tacs.constitutive)": [[3, "tacs.constitutive.PointMassConstitutive"]], "shellconstitutive (class in tacs.constitutive)": [[3, "tacs.constitutive.ShellConstitutive"]], "smearedcompositeshellconstitutive (class in tacs.constitutive)": [[3, "tacs.constitutive.SmearedCompositeShellConstitutive"]], "solidconstitutive (class in tacs.constitutive)": [[3, "tacs.constitutive.SolidConstitutive"]], "evalmassmatrix() (tacs.constitutive.generalmassconstitutive method)": [[3, "tacs.constitutive.GeneralMassConstitutive.evalMassMatrix"]], "generatebdfcard() (tacs.constitutive.basicbeamconstitutive method)": [[3, "tacs.constitutive.BasicBeamConstitutive.generateBDFCard"]], "generatebdfcard() (tacs.constitutive.compositeshellconstitutive method)": [[3, "tacs.constitutive.CompositeShellConstitutive.generateBDFCard"]], "generatebdfcard() (tacs.constitutive.dofspringconstitutive method)": [[3, "tacs.constitutive.DOFSpringConstitutive.generateBDFCard"]], "generatebdfcard() (tacs.constitutive.isorectanglebeamconstitutive method)": [[3, "tacs.constitutive.IsoRectangleBeamConstitutive.generateBDFCard"]], "generatebdfcard() (tacs.constitutive.isoshellconstitutive method)": [[3, "tacs.constitutive.IsoShellConstitutive.generateBDFCard"]], "generatebdfcard() (tacs.constitutive.isotubebeamconstitutive method)": [[3, "tacs.constitutive.IsoTubeBeamConstitutive.generateBDFCard"]], "generatebdfcard() (tacs.constitutive.materialproperties method)": [[3, "tacs.constitutive.MaterialProperties.generateBDFCard"]], "generatebdfcard() (tacs.constitutive.smearedcompositeshellconstitutive method)": [[3, "tacs.constitutive.SmearedCompositeShellConstitutive.generateBDFCard"]], "generatebdfcard() (tacs.constitutive.solidconstitutive method)": [[3, "tacs.constitutive.SolidConstitutive.generateBDFCard"]], "getmaterialproperties() (tacs.constitutive.materialproperties method)": [[3, "tacs.constitutive.MaterialProperties.getMaterialProperties"]], "getmaterialproperties() (tacs.constitutive.orthotropicply method)": [[3, "tacs.constitutive.OrthotropicPly.getMaterialProperties"]], "getnastranid() (tacs.constitutive.materialproperties method)": [[3, "tacs.constitutive.MaterialProperties.getNastranID"]], "module": [[3, "module-0"], [3, "module-tacs.constitutive"], [5, "module-0"], [5, "module-1"], [5, "module-2"], [5, "module-tacs.elements"], [6, "module-tacs.functions"], [17, "module-tacs.constraints.adjacency"], [18, "module-tacs.solvers.base"], [19, "module-tacs.problems.buckling"], [21, "module-tacs.solvers.continuation"], [22, "module-tacs.constraints.dv"], [23, "module-tacs.problems.modal"], [24, "module-tacs.solvers.newton"], [25, "module-tacs.constraints.panel_length"], [28, "module-tacs.pytacs"], [30, "module-tacs.problems.static"], [31, "module-tacs.problems.transient"], [32, "module-tacs.constraints.volume"]], "setdensity() (tacs.constitutive.materialproperties method)": [[3, "tacs.constitutive.MaterialProperties.setDensity"]], "setdrillingregularization() (tacs.constitutive.shellconstitutive method)": [[3, "tacs.constitutive.ShellConstitutive.setDrillingRegularization"]], "setksweight() (tacs.constitutive.bladestiffenedshellconstitutive method)": [[3, "tacs.constitutive.BladeStiffenedShellConstitutive.setKSWeight"]], "setnastranid() (tacs.constitutive.materialproperties method)": [[3, "tacs.constitutive.MaterialProperties.setNastranID"]], "setpanelplyfractionbounds() (tacs.constitutive.bladestiffenedshellconstitutive method)": [[3, "tacs.constitutive.BladeStiffenedShellConstitutive.setPanelPlyFractionBounds"]], "setpanelthicknessbounds() (tacs.constitutive.bladestiffenedshellconstitutive method)": [[3, "tacs.constitutive.BladeStiffenedShellConstitutive.setPanelThicknessBounds"]], "setspecificheat() (tacs.constitutive.materialproperties method)": [[3, "tacs.constitutive.MaterialProperties.setSpecificHeat"]], "setstiffenerheightbounds() (tacs.constitutive.bladestiffenedshellconstitutive method)": [[3, "tacs.constitutive.BladeStiffenedShellConstitutive.setStiffenerHeightBounds"]], "setstiffenerpitchbounds() (tacs.constitutive.bladestiffenedshellconstitutive method)": [[3, "tacs.constitutive.BladeStiffenedShellConstitutive.setStiffenerPitchBounds"]], "setstiffenerplyfractionbounds() (tacs.constitutive.bladestiffenedshellconstitutive method)": [[3, "tacs.constitutive.BladeStiffenedShellConstitutive.setStiffenerPlyFractionBounds"]], "setstiffenerthicknessbounds() (tacs.constitutive.bladestiffenedshellconstitutive method)": [[3, "tacs.constitutive.BladeStiffenedShellConstitutive.setStiffenerThicknessBounds"]], "tacs.constitutive": [[3, "module-0"], [3, "module-tacs.constitutive"]], "beam2 (class in tacs.elements)": [[5, "tacs.elements.Beam2"]], "beam2modrot (class in tacs.elements)": [[5, "tacs.elements.Beam2ModRot"]], "beam3 (class in tacs.elements)": [[5, "tacs.elements.Beam3"]], "beam3modrot (class in tacs.elements)": [[5, "tacs.elements.Beam3ModRot"]], "beamrefaxistransform (class in tacs.elements)": [[5, "tacs.elements.BeamRefAxisTransform"]], "cubichexabasis (class in tacs.elements)": [[5, "tacs.elements.CubicHexaBasis"]], "cubicquadbasis (class in tacs.elements)": [[5, "tacs.elements.CubicQuadBasis"]], "cubictrianglebasis (class in tacs.elements)": [[5, "tacs.elements.CubicTriangleBasis"]], "element2d (class in tacs.elements)": [[5, "tacs.elements.Element2D"]], "element3d (class in tacs.elements)": [[5, "tacs.elements.Element3D"]], "heatconduction2d (class in tacs.elements)": [[5, "tacs.elements.HeatConduction2D"]], "heatconduction3d (class in tacs.elements)": [[5, "tacs.elements.HeatConduction3D"]], "linearelasticity2d (class in tacs.elements)": [[5, "tacs.elements.LinearElasticity2D"]], "linearelasticity3d (class in tacs.elements)": [[5, "tacs.elements.LinearElasticity3D"]], "linearhexabasis (class in tacs.elements)": [[5, "tacs.elements.LinearHexaBasis"]], "linearquadbasis (class in tacs.elements)": [[5, "tacs.elements.LinearQuadBasis"]], "lineartetrahedralbasis (class in tacs.elements)": [[5, "tacs.elements.LinearTetrahedralBasis"]], "linearthermoelasticity2d (class in tacs.elements)": [[5, "tacs.elements.LinearThermoelasticity2D"]], "linearthermoelasticity3d (class in tacs.elements)": [[5, "tacs.elements.LinearThermoelasticity3D"]], "lineartrianglebasis (class in tacs.elements)": [[5, "tacs.elements.LinearTriangleBasis"]], "masselement (class in tacs.elements)": [[5, "tacs.elements.MassElement"]], "pcmheatconduction2d (class in tacs.elements)": [[5, "tacs.elements.PCMHeatConduction2D"]], "quad16nonlinearshell (class in tacs.elements)": [[5, "tacs.elements.Quad16NonlinearShell"]], "quad16nonlinearthermalshell (class in tacs.elements)": [[5, "tacs.elements.Quad16NonlinearThermalShell"]], "quad16shell (class in tacs.elements)": [[5, "tacs.elements.Quad16Shell"]], "quad16thermalshell (class in tacs.elements)": [[5, "tacs.elements.Quad16ThermalShell"]], "quad4nonlinearshell (class in tacs.elements)": [[5, "tacs.elements.Quad4NonlinearShell"]], "quad4nonlinearthermalshell (class in tacs.elements)": [[5, "tacs.elements.Quad4NonlinearThermalShell"]], "quad4shell (class in tacs.elements)": [[5, "tacs.elements.Quad4Shell"]], "quad4thermalshell (class in tacs.elements)": [[5, "tacs.elements.Quad4ThermalShell"]], "quad9nonlinearshell (class in tacs.elements)": [[5, "tacs.elements.Quad9NonlinearShell"]], "quad9nonlinearthermalshell (class in tacs.elements)": [[5, "tacs.elements.Quad9NonlinearThermalShell"]], "quad9shell (class in tacs.elements)": [[5, "tacs.elements.Quad9Shell"]], "quad9thermalshell (class in tacs.elements)": [[5, "tacs.elements.Quad9ThermalShell"]], "quadratichexabasis (class in tacs.elements)": [[5, "tacs.elements.QuadraticHexaBasis"]], "quadraticquadbasis (class in tacs.elements)": [[5, "tacs.elements.QuadraticQuadBasis"]], "quadratictetrahedralbasis (class in tacs.elements)": [[5, "tacs.elements.QuadraticTetrahedralBasis"]], "quadratictrianglebasis (class in tacs.elements)": [[5, "tacs.elements.QuadraticTriangleBasis"]], "quarticquadbasis (class in tacs.elements)": [[5, "tacs.elements.QuarticQuadBasis"]], "quinticquadbasis (class in tacs.elements)": [[5, "tacs.elements.QuinticQuadBasis"]], "rbe2 (class in tacs.elements)": [[5, "tacs.elements.RBE2"]], "rbe3 (class in tacs.elements)": [[5, "tacs.elements.RBE3"]], "shellnaturaltransform (class in tacs.elements)": [[5, "tacs.elements.ShellNaturalTransform"]], "shellrefaxistransform (class in tacs.elements)": [[5, "tacs.elements.ShellRefAxisTransform"]], "springelement (class in tacs.elements)": [[5, "tacs.elements.SpringElement"]], "springidentitytransform (class in tacs.elements)": [[5, "tacs.elements.SpringIdentityTransform"]], "springrefaxistransform (class in tacs.elements)": [[5, "tacs.elements.SpringRefAxisTransform"]], "springrefframetransform (class in tacs.elements)": [[5, "tacs.elements.SpringRefFrameTransform"]], "tri3nonlinearshell (class in tacs.elements)": [[5, "tacs.elements.Tri3NonlinearShell"]], "tri3nonlinearthermalshell (class in tacs.elements)": [[5, "tacs.elements.Tri3NonlinearThermalShell"]], "tri3shell (class in tacs.elements)": [[5, "tacs.elements.Tri3Shell"]], "tri3thermalshell (class in tacs.elements)": [[5, "tacs.elements.Tri3ThermalShell"]], "getrefaxes() (tacs.elements.springrefframetransform method)": [[5, "tacs.elements.SpringRefFrameTransform.getRefAxes"]], "getrefaxis() (tacs.elements.beamrefaxistransform method)": [[5, "tacs.elements.BeamRefAxisTransform.getRefAxis"]], "getrefaxis() (tacs.elements.shellrefaxistransform method)": [[5, "tacs.elements.ShellRefAxisTransform.getRefAxis"]], "getrefaxis() (tacs.elements.springrefaxistransform method)": [[5, "tacs.elements.SpringRefAxisTransform.getRefAxis"]], "setscalingparameters() (tacs.elements.rbe2 class method)": [[5, "tacs.elements.RBE2.setScalingParameters"]], "setscalingparameters() (tacs.elements.rbe3 class method)": [[5, "tacs.elements.RBE3.setScalingParameters"]], "tacs.elements": [[5, "module-0"], [5, "module-1"], [5, "module-2"], [5, "module-tacs.elements"]], "averagetemperature (class in tacs.functions)": [[6, "tacs.functions.AverageTemperature"]], "centerofmass (class in tacs.functions)": [[6, "tacs.functions.CenterOfMass"]], "compliance (class in tacs.functions)": [[6, "tacs.functions.Compliance"]], "enclosedvolume (class in tacs.functions)": [[6, "tacs.functions.EnclosedVolume"]], "ksdisplacement (class in tacs.functions)": [[6, "tacs.functions.KSDisplacement"]], "ksfailure (class in tacs.functions)": [[6, "tacs.functions.KSFailure"]], "kstemperature (class in tacs.functions)": [[6, "tacs.functions.KSTemperature"]], "momentofinertia (class in tacs.functions)": [[6, "tacs.functions.MomentOfInertia"]], "structuralmass (class in tacs.functions)": [[6, "tacs.functions.StructuralMass"]], "setcompliancetype() (tacs.functions.compliance method)": [[6, "tacs.functions.Compliance.setComplianceType"]], "tacs.functions": [[6, "module-tacs.functions"]], "tacsbuilder (class in tacs.mphys.builder)": [[15, "tacs.mphys.builder.TacsBuilder"]], "get_coupling_group_subsystem() (tacs.mphys.builder.tacsbuilder method)": [[15, "tacs.mphys.builder.TacsBuilder.get_coupling_group_subsystem"]], "get_dv_bounds() (tacs.mphys.builder.tacsbuilder method)": [[15, "tacs.mphys.builder.TacsBuilder.get_dv_bounds"]], "get_dv_scalers() (tacs.mphys.builder.tacsbuilder method)": [[15, "tacs.mphys.builder.TacsBuilder.get_dv_scalers"]], "get_fea_assembler() (tacs.mphys.builder.tacsbuilder method)": [[15, "tacs.mphys.builder.TacsBuilder.get_fea_assembler"]], "get_initial_dvs() (tacs.mphys.builder.tacsbuilder method)": [[15, "tacs.mphys.builder.TacsBuilder.get_initial_dvs"]], "get_mesh_coordinate_subsystem() (tacs.mphys.builder.tacsbuilder method)": [[15, "tacs.mphys.builder.TacsBuilder.get_mesh_coordinate_subsystem"]], "get_ndof() (tacs.mphys.builder.tacsbuilder method)": [[15, "tacs.mphys.builder.TacsBuilder.get_ndof"]], "get_ndv() (tacs.mphys.builder.tacsbuilder method)": [[15, "tacs.mphys.builder.TacsBuilder.get_ndv"]], "get_number_of_nodes() (tacs.mphys.builder.tacsbuilder method)": [[15, "tacs.mphys.builder.TacsBuilder.get_number_of_nodes"]], "get_post_coupling_subsystem() (tacs.mphys.builder.tacsbuilder method)": [[15, "tacs.mphys.builder.TacsBuilder.get_post_coupling_subsystem"]], "get_pre_coupling_subsystem() (tacs.mphys.builder.tacsbuilder method)": [[15, "tacs.mphys.builder.TacsBuilder.get_pre_coupling_subsystem"]], "get_solver() (tacs.mphys.builder.tacsbuilder method)": [[15, "tacs.mphys.builder.TacsBuilder.get_solver"]], "get_tagged_indices() (tacs.mphys.builder.tacsbuilder method)": [[15, "tacs.mphys.builder.TacsBuilder.get_tagged_indices"]], "initialize() (tacs.mphys.builder.tacsbuilder method)": [[15, "tacs.mphys.builder.TacsBuilder.initialize"]], "adjacencyconstraint (class in tacs.constraints)": [[17, "tacs.constraints.AdjacencyConstraint"]], "addconstraint() (tacs.constraints.adjacencyconstraint method)": [[17, "tacs.constraints.AdjacencyConstraint.addConstraint"]], "dtype (tacs.constraints.adjacencyconstraint attribute)": [[17, "tacs.constraints.AdjacencyConstraint.dtype"]], "evalconstraints() (tacs.constraints.adjacencyconstraint method)": [[17, "tacs.constraints.AdjacencyConstraint.evalConstraints"]], "evalconstraintssens() (tacs.constraints.adjacencyconstraint method)": [[17, "tacs.constraints.AdjacencyConstraint.evalConstraintsSens"]], "getconstraintbounds() (tacs.constraints.adjacencyconstraint method)": [[17, "tacs.constraints.AdjacencyConstraint.getConstraintBounds"]], "getconstraintkeys() (tacs.constraints.adjacencyconstraint method)": [[17, "tacs.constraints.AdjacencyConstraint.getConstraintKeys"]], "getconstraintsizes() (tacs.constraints.adjacencyconstraint method)": [[17, "tacs.constraints.AdjacencyConstraint.getConstraintSizes"]], "getdesignvarrange() (tacs.constraints.adjacencyconstraint method)": [[17, "tacs.constraints.AdjacencyConstraint.getDesignVarRange"]], "getdesignvars() (tacs.constraints.adjacencyconstraint method)": [[17, "tacs.constraints.AdjacencyConstraint.getDesignVars"]], "getnodes() (tacs.constraints.adjacencyconstraint method)": [[17, "tacs.constraints.AdjacencyConstraint.getNodes"]], "getnumcoordinates() (tacs.constraints.adjacencyconstraint method)": [[17, "tacs.constraints.AdjacencyConstraint.getNumCoordinates"]], "getnumdesignvars() (tacs.constraints.adjacencyconstraint method)": [[17, "tacs.constraints.AdjacencyConstraint.getNumDesignVars"]], "getnumownednodes() (tacs.constraints.adjacencyconstraint method)": [[17, "tacs.constraints.AdjacencyConstraint.getNumOwnedNodes"]], "getnumvariables() (tacs.constraints.adjacencyconstraint method)": [[17, "tacs.constraints.AdjacencyConstraint.getNumVariables"]], "getoption() (tacs.constraints.adjacencyconstraint method)": [[17, "tacs.constraints.AdjacencyConstraint.getOption"]], "getvarspernode() (tacs.constraints.adjacencyconstraint method)": [[17, "tacs.constraints.AdjacencyConstraint.getVarsPerNode"]], "printdefaultoptions() (tacs.constraints.adjacencyconstraint class method)": [[17, "tacs.constraints.AdjacencyConstraint.printDefaultOptions"]], "printmodifiedoptions() (tacs.constraints.adjacencyconstraint method)": [[17, "tacs.constraints.AdjacencyConstraint.printModifiedOptions"]], "printoptions() (tacs.constraints.adjacencyconstraint method)": [[17, "tacs.constraints.AdjacencyConstraint.printOptions"]], "setdesignvars() (tacs.constraints.adjacencyconstraint method)": [[17, "tacs.constraints.AdjacencyConstraint.setDesignVars"]], "setnodes() (tacs.constraints.adjacencyconstraint method)": [[17, "tacs.constraints.AdjacencyConstraint.setNodes"]], "setoption() (tacs.constraints.adjacencyconstraint method)": [[17, "tacs.constraints.AdjacencyConstraint.setOption"]], "setoptions() (tacs.constraints.adjacencyconstraint method)": [[17, "tacs.constraints.AdjacencyConstraint.setOptions"]], "setvarname() (tacs.constraints.adjacencyconstraint method)": [[17, "tacs.constraints.AdjacencyConstraint.setVarName"]], "tacs.constraints.adjacency": [[17, "module-tacs.constraints.adjacency"]], "writevisualization() (tacs.constraints.adjacencyconstraint method)": [[17, "tacs.constraints.AdjacencyConstraint.writeVisualization"]], "basesolver (class in tacs.solvers)": [[18, "tacs.solvers.BaseSolver"]], "dtype (tacs.solvers.basesolver attribute)": [[18, "tacs.solvers.BaseSolver.dtype"]], "fatalfailure (tacs.solvers.basesolver property)": [[18, "tacs.solvers.BaseSolver.fatalFailure"]], "gethistoryvariables() (tacs.solvers.basesolver method)": [[18, "tacs.solvers.BaseSolver.getHistoryVariables"]], "getoption() (tacs.solvers.basesolver method)": [[18, "tacs.solvers.BaseSolver.getOption"]], "hasconverged (tacs.solvers.basesolver property)": [[18, "tacs.solvers.BaseSolver.hasConverged"]], "initializesolve() (tacs.solvers.basesolver method)": [[18, "tacs.solvers.BaseSolver.initializeSolve"]], "iterationcount (tacs.solvers.basesolver property)": [[18, "tacs.solvers.BaseSolver.iterationCount"]], "printdefaultoptions() (tacs.solvers.basesolver class method)": [[18, "tacs.solvers.BaseSolver.printDefaultOptions"]], "printmodifiedoptions() (tacs.solvers.basesolver method)": [[18, "tacs.solvers.BaseSolver.printModifiedOptions"]], "printoptions() (tacs.solvers.basesolver method)": [[18, "tacs.solvers.BaseSolver.printOptions"]], "reset() (tacs.solvers.basesolver method)": [[18, "tacs.solvers.BaseSolver.reset"]], "setcallback() (tacs.solvers.basesolver method)": [[18, "tacs.solvers.BaseSolver.setCallback"]], "setconvergencetolerance() (tacs.solvers.basesolver method)": [[18, "tacs.solvers.BaseSolver.setConvergenceTolerance"]], "setoption() (tacs.solvers.basesolver method)": [[18, "tacs.solvers.BaseSolver.setOption"]], "setoptions() (tacs.solvers.basesolver method)": [[18, "tacs.solvers.BaseSolver.setOptions"]], "setrefnorm() (tacs.solvers.basesolver method)": [[18, "tacs.solvers.BaseSolver.setRefNorm"]], "solve() (tacs.solvers.basesolver method)": [[18, "tacs.solvers.BaseSolver.solve"]], "tacs.solvers.base": [[18, "module-tacs.solvers.base"]], "bucklingproblem (class in tacs.problems)": [[19, "tacs.problems.BucklingProblem"]], "addcentrifugalload() (tacs.problems.bucklingproblem method)": [[19, "tacs.problems.BucklingProblem.addCentrifugalLoad"]], "adddvsens() (tacs.problems.bucklingproblem method)": [[19, "tacs.problems.BucklingProblem.addDVSens"]], "addfunction() (tacs.problems.bucklingproblem method)": [[19, "tacs.problems.BucklingProblem.addFunction"]], "addinertialload() (tacs.problems.bucklingproblem method)": [[19, "tacs.problems.BucklingProblem.addInertialLoad"]], "addloadfrombdf() (tacs.problems.bucklingproblem method)": [[19, "tacs.problems.BucklingProblem.addLoadFromBDF"]], "addloadtocomponents() (tacs.problems.bucklingproblem method)": [[19, "tacs.problems.BucklingProblem.addLoadToComponents"]], "addloadtonodes() (tacs.problems.bucklingproblem method)": [[19, "tacs.problems.BucklingProblem.addLoadToNodes"]], "addloadtorhs() (tacs.problems.bucklingproblem method)": [[19, "tacs.problems.BucklingProblem.addLoadToRHS"]], "addpressuretocomponents() (tacs.problems.bucklingproblem method)": [[19, "tacs.problems.BucklingProblem.addPressureToComponents"]], "addpressuretoelements() (tacs.problems.bucklingproblem method)": [[19, "tacs.problems.BucklingProblem.addPressureToElements"]], "addtractiontocomponents() (tacs.problems.bucklingproblem method)": [[19, "tacs.problems.BucklingProblem.addTractionToComponents"]], "addtractiontoelements() (tacs.problems.bucklingproblem method)": [[19, "tacs.problems.BucklingProblem.addTractionToElements"]], "addxptsens() (tacs.problems.bucklingproblem method)": [[19, "tacs.problems.BucklingProblem.addXptSens"]], "dtype (tacs.problems.bucklingproblem attribute)": [[19, "tacs.problems.BucklingProblem.dtype"]], "evalfunctions() (tacs.problems.bucklingproblem method)": [[19, "tacs.problems.BucklingProblem.evalFunctions"]], "evalfunctionssens() (tacs.problems.bucklingproblem method)": [[19, "tacs.problems.BucklingProblem.evalFunctionsSens"]], "evalsvsens() (tacs.problems.bucklingproblem method)": [[19, "tacs.problems.BucklingProblem.evalSVSens"]], "getdesignvarrange() (tacs.problems.bucklingproblem method)": [[19, "tacs.problems.BucklingProblem.getDesignVarRange"]], "getdesignvars() (tacs.problems.bucklingproblem method)": [[19, "tacs.problems.BucklingProblem.getDesignVars"]], "getfunctionkeys() (tacs.problems.bucklingproblem method)": [[19, "tacs.problems.BucklingProblem.getFunctionKeys"]], "getnodes() (tacs.problems.bucklingproblem method)": [[19, "tacs.problems.BucklingProblem.getNodes"]], "getnumcoordinates() (tacs.problems.bucklingproblem method)": [[19, "tacs.problems.BucklingProblem.getNumCoordinates"]], "getnumdesignvars() (tacs.problems.bucklingproblem method)": [[19, "tacs.problems.BucklingProblem.getNumDesignVars"]], "getnumeigs() (tacs.problems.bucklingproblem method)": [[19, "tacs.problems.BucklingProblem.getNumEigs"]], "getnumownednodes() (tacs.problems.bucklingproblem method)": [[19, "tacs.problems.BucklingProblem.getNumOwnedNodes"]], "getnumvariables() (tacs.problems.bucklingproblem method)": [[19, "tacs.problems.BucklingProblem.getNumVariables"]], "getoption() (tacs.problems.bucklingproblem method)": [[19, "tacs.problems.BucklingProblem.getOption"]], "getvariables() (tacs.problems.bucklingproblem method)": [[19, "tacs.problems.BucklingProblem.getVariables"]], "getvarspernode() (tacs.problems.bucklingproblem method)": [[19, "tacs.problems.BucklingProblem.getVarsPerNode"]], "isnonlinear (tacs.problems.bucklingproblem property)": [[19, "tacs.problems.BucklingProblem.isNonlinear"]], "printdefaultoptions() (tacs.problems.bucklingproblem class method)": [[19, "tacs.problems.BucklingProblem.printDefaultOptions"]], "printmodifiedoptions() (tacs.problems.bucklingproblem method)": [[19, "tacs.problems.BucklingProblem.printModifiedOptions"]], "printoptions() (tacs.problems.bucklingproblem method)": [[19, "tacs.problems.BucklingProblem.printOptions"]], "setdesignvars() (tacs.problems.bucklingproblem method)": [[19, "tacs.problems.BucklingProblem.setDesignVars"]], "setnodes() (tacs.problems.bucklingproblem method)": [[19, "tacs.problems.BucklingProblem.setNodes"]], "setoption() (tacs.problems.bucklingproblem method)": [[19, "tacs.problems.BucklingProblem.setOption"]], "setoptions() (tacs.problems.bucklingproblem method)": [[19, "tacs.problems.BucklingProblem.setOptions"]], "setvalname() (tacs.problems.bucklingproblem method)": [[19, "tacs.problems.BucklingProblem.setValName"]], "setvarname() (tacs.problems.bucklingproblem method)": [[19, "tacs.problems.BucklingProblem.setVarName"]], "solve() (tacs.problems.bucklingproblem method)": [[19, "tacs.problems.BucklingProblem.solve"]], "tacs.problems.buckling": [[19, "module-tacs.problems.buckling"]], "writesensfile() (tacs.problems.bucklingproblem method)": [[19, "tacs.problems.BucklingProblem.writeSensFile"]], "writesolution() (tacs.problems.bucklingproblem method)": [[19, "tacs.problems.BucklingProblem.writeSolution"]], "zeroloads() (tacs.problems.bucklingproblem method)": [[19, "tacs.problems.BucklingProblem.zeroLoads"]], "continuationsolver (class in tacs.solvers)": [[21, "tacs.solvers.ContinuationSolver"]], "computeforcevectors() (tacs.solvers.continuationsolver method)": [[21, "tacs.solvers.ContinuationSolver.computeForceVectors"]], "dtype (tacs.solvers.continuationsolver attribute)": [[21, "tacs.solvers.ContinuationSolver.dtype"]], "fatalfailure (tacs.solvers.continuationsolver property)": [[21, "tacs.solvers.ContinuationSolver.fatalFailure"]], "gethistoryvariables() (tacs.solvers.continuationsolver method)": [[21, "tacs.solvers.ContinuationSolver.getHistoryVariables"]], "getoption() (tacs.solvers.continuationsolver method)": [[21, "tacs.solvers.ContinuationSolver.getOption"]], "hasconverged (tacs.solvers.continuationsolver property)": [[21, "tacs.solvers.ContinuationSolver.hasConverged"]], "initializesolve() (tacs.solvers.continuationsolver method)": [[21, "tacs.solvers.ContinuationSolver.initializeSolve"]], "iterationcount (tacs.solvers.continuationsolver property)": [[21, "tacs.solvers.ContinuationSolver.iterationCount"]], "printdefaultoptions() (tacs.solvers.continuationsolver class method)": [[21, "tacs.solvers.ContinuationSolver.printDefaultOptions"]], "printmodifiedoptions() (tacs.solvers.continuationsolver method)": [[21, "tacs.solvers.ContinuationSolver.printModifiedOptions"]], "printoptions() (tacs.solvers.continuationsolver method)": [[21, "tacs.solvers.ContinuationSolver.printOptions"]], "reset() (tacs.solvers.continuationsolver method)": [[21, "tacs.solvers.ContinuationSolver.reset"]], "setcallback() (tacs.solvers.continuationsolver method)": [[21, "tacs.solvers.ContinuationSolver.setCallback"]], "setconvergencetolerance() (tacs.solvers.continuationsolver method)": [[21, "tacs.solvers.ContinuationSolver.setConvergenceTolerance"]], "setoption() (tacs.solvers.continuationsolver method)": [[21, "tacs.solvers.ContinuationSolver.setOption"]], "setoptions() (tacs.solvers.continuationsolver method)": [[21, "tacs.solvers.ContinuationSolver.setOptions"]], "setrefnorm() (tacs.solvers.continuationsolver method)": [[21, "tacs.solvers.ContinuationSolver.setRefNorm"]], "solve() (tacs.solvers.continuationsolver method)": [[21, "tacs.solvers.ContinuationSolver.solve"]], "tacs.solvers.continuation": [[21, "module-tacs.solvers.continuation"]], "dvconstraint (class in tacs.constraints)": [[22, "tacs.constraints.DVConstraint"]], "addconstraint() (tacs.constraints.dvconstraint method)": [[22, "tacs.constraints.DVConstraint.addConstraint"]], "dtype (tacs.constraints.dvconstraint attribute)": [[22, "tacs.constraints.DVConstraint.dtype"]], "evalconstraints() (tacs.constraints.dvconstraint method)": [[22, "tacs.constraints.DVConstraint.evalConstraints"]], "evalconstraintssens() (tacs.constraints.dvconstraint method)": [[22, "tacs.constraints.DVConstraint.evalConstraintsSens"]], "getconstraintbounds() (tacs.constraints.dvconstraint method)": [[22, "tacs.constraints.DVConstraint.getConstraintBounds"]], "getconstraintkeys() (tacs.constraints.dvconstraint method)": [[22, "tacs.constraints.DVConstraint.getConstraintKeys"]], "getconstraintsizes() (tacs.constraints.dvconstraint method)": [[22, "tacs.constraints.DVConstraint.getConstraintSizes"]], "getdesignvarrange() (tacs.constraints.dvconstraint method)": [[22, "tacs.constraints.DVConstraint.getDesignVarRange"]], "getdesignvars() (tacs.constraints.dvconstraint method)": [[22, "tacs.constraints.DVConstraint.getDesignVars"]], "getnodes() (tacs.constraints.dvconstraint method)": [[22, "tacs.constraints.DVConstraint.getNodes"]], "getnumcoordinates() (tacs.constraints.dvconstraint method)": [[22, "tacs.constraints.DVConstraint.getNumCoordinates"]], "getnumdesignvars() (tacs.constraints.dvconstraint method)": [[22, "tacs.constraints.DVConstraint.getNumDesignVars"]], "getnumownednodes() (tacs.constraints.dvconstraint method)": [[22, "tacs.constraints.DVConstraint.getNumOwnedNodes"]], "getnumvariables() (tacs.constraints.dvconstraint method)": [[22, "tacs.constraints.DVConstraint.getNumVariables"]], "getoption() (tacs.constraints.dvconstraint method)": [[22, "tacs.constraints.DVConstraint.getOption"]], "getvarspernode() (tacs.constraints.dvconstraint method)": [[22, "tacs.constraints.DVConstraint.getVarsPerNode"]], "printdefaultoptions() (tacs.constraints.dvconstraint class method)": [[22, "tacs.constraints.DVConstraint.printDefaultOptions"]], "printmodifiedoptions() (tacs.constraints.dvconstraint method)": [[22, "tacs.constraints.DVConstraint.printModifiedOptions"]], "printoptions() (tacs.constraints.dvconstraint method)": [[22, "tacs.constraints.DVConstraint.printOptions"]], "setdesignvars() (tacs.constraints.dvconstraint method)": [[22, "tacs.constraints.DVConstraint.setDesignVars"]], "setnodes() (tacs.constraints.dvconstraint method)": [[22, "tacs.constraints.DVConstraint.setNodes"]], "setoption() (tacs.constraints.dvconstraint method)": [[22, "tacs.constraints.DVConstraint.setOption"]], "setoptions() (tacs.constraints.dvconstraint method)": [[22, "tacs.constraints.DVConstraint.setOptions"]], "setvarname() (tacs.constraints.dvconstraint method)": [[22, "tacs.constraints.DVConstraint.setVarName"]], "tacs.constraints.dv": [[22, "module-tacs.constraints.dv"]], "modalproblem (class in tacs.problems)": [[23, "tacs.problems.ModalProblem"]], "addfunction() (tacs.problems.modalproblem method)": [[23, "tacs.problems.ModalProblem.addFunction"]], "dtype (tacs.problems.modalproblem attribute)": [[23, "tacs.problems.ModalProblem.dtype"]], "evalfunctions() (tacs.problems.modalproblem method)": [[23, "tacs.problems.ModalProblem.evalFunctions"]], "evalfunctionssens() (tacs.problems.modalproblem method)": [[23, "tacs.problems.ModalProblem.evalFunctionsSens"]], "getdesignvarrange() (tacs.problems.modalproblem method)": [[23, "tacs.problems.ModalProblem.getDesignVarRange"]], "getdesignvars() (tacs.problems.modalproblem method)": [[23, "tacs.problems.ModalProblem.getDesignVars"]], "getfunctionkeys() (tacs.problems.modalproblem method)": [[23, "tacs.problems.ModalProblem.getFunctionKeys"]], "getnodes() (tacs.problems.modalproblem method)": [[23, "tacs.problems.ModalProblem.getNodes"]], "getnumcoordinates() (tacs.problems.modalproblem method)": [[23, "tacs.problems.ModalProblem.getNumCoordinates"]], "getnumdesignvars() (tacs.problems.modalproblem method)": [[23, "tacs.problems.ModalProblem.getNumDesignVars"]], "getnumeigs() (tacs.problems.modalproblem method)": [[23, "tacs.problems.ModalProblem.getNumEigs"]], "getnumownednodes() (tacs.problems.modalproblem method)": [[23, "tacs.problems.ModalProblem.getNumOwnedNodes"]], "getnumvariables() (tacs.problems.modalproblem method)": [[23, "tacs.problems.ModalProblem.getNumVariables"]], "getoption() (tacs.problems.modalproblem method)": [[23, "tacs.problems.ModalProblem.getOption"]], "getvariables() (tacs.problems.modalproblem method)": [[23, "tacs.problems.ModalProblem.getVariables"]], "getvarspernode() (tacs.problems.modalproblem method)": [[23, "tacs.problems.ModalProblem.getVarsPerNode"]], "isnonlinear (tacs.problems.modalproblem property)": [[23, "tacs.problems.ModalProblem.isNonlinear"]], "printdefaultoptions() (tacs.problems.modalproblem class method)": [[23, "tacs.problems.ModalProblem.printDefaultOptions"]], "printmodifiedoptions() (tacs.problems.modalproblem method)": [[23, "tacs.problems.ModalProblem.printModifiedOptions"]], "printoptions() (tacs.problems.modalproblem method)": [[23, "tacs.problems.ModalProblem.printOptions"]], "setdesignvars() (tacs.problems.modalproblem method)": [[23, "tacs.problems.ModalProblem.setDesignVars"]], "setnodes() (tacs.problems.modalproblem method)": [[23, "tacs.problems.ModalProblem.setNodes"]], "setoption() (tacs.problems.modalproblem method)": [[23, "tacs.problems.ModalProblem.setOption"]], "setoptions() (tacs.problems.modalproblem method)": [[23, "tacs.problems.ModalProblem.setOptions"]], "setvalname() (tacs.problems.modalproblem method)": [[23, "tacs.problems.ModalProblem.setValName"]], "setvarname() (tacs.problems.modalproblem method)": [[23, "tacs.problems.ModalProblem.setVarName"]], "solve() (tacs.problems.modalproblem method)": [[23, "tacs.problems.ModalProblem.solve"]], "tacs.problems.modal": [[23, "module-tacs.problems.modal"]], "writesensfile() (tacs.problems.modalproblem method)": [[23, "tacs.problems.ModalProblem.writeSensFile"]], "writesolution() (tacs.problems.modalproblem method)": [[23, "tacs.problems.ModalProblem.writeSolution"]], "newtonsolver (class in tacs.solvers)": [[24, "tacs.solvers.NewtonSolver"]], "dtype (tacs.solvers.newtonsolver attribute)": [[24, "tacs.solvers.NewtonSolver.dtype"]], "fatalfailure (tacs.solvers.newtonsolver property)": [[24, "tacs.solvers.NewtonSolver.fatalFailure"]], "gethistoryvariables() (tacs.solvers.newtonsolver method)": [[24, "tacs.solvers.NewtonSolver.getHistoryVariables"]], "getoption() (tacs.solvers.newtonsolver method)": [[24, "tacs.solvers.NewtonSolver.getOption"]], "hasconverged (tacs.solvers.newtonsolver property)": [[24, "tacs.solvers.NewtonSolver.hasConverged"]], "initializesolve() (tacs.solvers.newtonsolver method)": [[24, "tacs.solvers.NewtonSolver.initializeSolve"]], "iterationcount (tacs.solvers.newtonsolver property)": [[24, "tacs.solvers.NewtonSolver.iterationCount"]], "printdefaultoptions() (tacs.solvers.newtonsolver class method)": [[24, "tacs.solvers.NewtonSolver.printDefaultOptions"]], "printmodifiedoptions() (tacs.solvers.newtonsolver method)": [[24, "tacs.solvers.NewtonSolver.printModifiedOptions"]], "printoptions() (tacs.solvers.newtonsolver method)": [[24, "tacs.solvers.NewtonSolver.printOptions"]], "reset() (tacs.solvers.newtonsolver method)": [[24, "tacs.solvers.NewtonSolver.reset"]], "setcallback() (tacs.solvers.newtonsolver method)": [[24, "tacs.solvers.NewtonSolver.setCallback"]], "setconvergencetolerance() (tacs.solvers.newtonsolver method)": [[24, "tacs.solvers.NewtonSolver.setConvergenceTolerance"]], "setoption() (tacs.solvers.newtonsolver method)": [[24, "tacs.solvers.NewtonSolver.setOption"]], "setoptions() (tacs.solvers.newtonsolver method)": [[24, "tacs.solvers.NewtonSolver.setOptions"]], "setrefnorm() (tacs.solvers.newtonsolver method)": [[24, "tacs.solvers.NewtonSolver.setRefNorm"]], "solve() (tacs.solvers.newtonsolver method)": [[24, "tacs.solvers.NewtonSolver.solve"]], "tacs.solvers.newton": [[24, "module-tacs.solvers.newton"]], "panellengthconstraint (class in tacs.constraints)": [[25, "tacs.constraints.PanelLengthConstraint"]], "addconstraint() (tacs.constraints.panellengthconstraint method)": [[25, "tacs.constraints.PanelLengthConstraint.addConstraint"]], "dtype (tacs.constraints.panellengthconstraint attribute)": [[25, "tacs.constraints.PanelLengthConstraint.dtype"]], "evalconstraints() (tacs.constraints.panellengthconstraint method)": [[25, "tacs.constraints.PanelLengthConstraint.evalConstraints"]], "evalconstraintssens() (tacs.constraints.panellengthconstraint method)": [[25, "tacs.constraints.PanelLengthConstraint.evalConstraintsSens"]], "getconstraintbounds() (tacs.constraints.panellengthconstraint method)": [[25, "tacs.constraints.PanelLengthConstraint.getConstraintBounds"]], "getconstraintkeys() (tacs.constraints.panellengthconstraint method)": [[25, "tacs.constraints.PanelLengthConstraint.getConstraintKeys"]], "getconstraintsizes() (tacs.constraints.panellengthconstraint method)": [[25, "tacs.constraints.PanelLengthConstraint.getConstraintSizes"]], "getdesignvarrange() (tacs.constraints.panellengthconstraint method)": [[25, "tacs.constraints.PanelLengthConstraint.getDesignVarRange"]], "getdesignvars() (tacs.constraints.panellengthconstraint method)": [[25, "tacs.constraints.PanelLengthConstraint.getDesignVars"]], "getnodes() (tacs.constraints.panellengthconstraint method)": [[25, "tacs.constraints.PanelLengthConstraint.getNodes"]], "getnumcoordinates() (tacs.constraints.panellengthconstraint method)": [[25, "tacs.constraints.PanelLengthConstraint.getNumCoordinates"]], "getnumdesignvars() (tacs.constraints.panellengthconstraint method)": [[25, "tacs.constraints.PanelLengthConstraint.getNumDesignVars"]], "getnumownednodes() (tacs.constraints.panellengthconstraint method)": [[25, "tacs.constraints.PanelLengthConstraint.getNumOwnedNodes"]], "getnumvariables() (tacs.constraints.panellengthconstraint method)": [[25, "tacs.constraints.PanelLengthConstraint.getNumVariables"]], "getoption() (tacs.constraints.panellengthconstraint method)": [[25, "tacs.constraints.PanelLengthConstraint.getOption"]], "getvarspernode() (tacs.constraints.panellengthconstraint method)": [[25, "tacs.constraints.PanelLengthConstraint.getVarsPerNode"]], "printdefaultoptions() (tacs.constraints.panellengthconstraint class method)": [[25, "tacs.constraints.PanelLengthConstraint.printDefaultOptions"]], "printmodifiedoptions() (tacs.constraints.panellengthconstraint method)": [[25, "tacs.constraints.PanelLengthConstraint.printModifiedOptions"]], "printoptions() (tacs.constraints.panellengthconstraint method)": [[25, "tacs.constraints.PanelLengthConstraint.printOptions"]], "setdesignvars() (tacs.constraints.panellengthconstraint method)": [[25, "tacs.constraints.PanelLengthConstraint.setDesignVars"]], "setnodes() (tacs.constraints.panellengthconstraint method)": [[25, "tacs.constraints.PanelLengthConstraint.setNodes"]], "setoption() (tacs.constraints.panellengthconstraint method)": [[25, "tacs.constraints.PanelLengthConstraint.setOption"]], "setoptions() (tacs.constraints.panellengthconstraint method)": [[25, "tacs.constraints.PanelLengthConstraint.setOptions"]], "setvarname() (tacs.constraints.panellengthconstraint method)": [[25, "tacs.constraints.PanelLengthConstraint.setVarName"]], "tacs.constraints.panel_length": [[25, "module-tacs.constraints.panel_length"]], "addglobaldv() (tacs.pytacs.pytacs method)": [[28, "tacs.pytacs.pyTACS.addGlobalDV"]], "applybcstovec() (tacs.pytacs.pytacs method)": [[28, "tacs.pytacs.pyTACS.applyBCsToVec"]], "assignmassdv() (tacs.pytacs.pytacs method)": [[28, "tacs.pytacs.pyTACS.assignMassDV"]], "createadjacencyconstraint() (tacs.pytacs.pytacs method)": [[28, "tacs.pytacs.pyTACS.createAdjacencyConstraint"]], "createbucklingproblem() (tacs.pytacs.pytacs method)": [[28, "tacs.pytacs.pyTACS.createBucklingProblem"]], "createdvconstraint() (tacs.pytacs.pytacs method)": [[28, "tacs.pytacs.pyTACS.createDVConstraint"]], "createdesignvec() (tacs.pytacs.pytacs method)": [[28, "tacs.pytacs.pyTACS.createDesignVec"]], "createmodalproblem() (tacs.pytacs.pytacs method)": [[28, "tacs.pytacs.pyTACS.createModalProblem"]], "createnodevec() (tacs.pytacs.pytacs method)": [[28, "tacs.pytacs.pyTACS.createNodeVec"]], "createpanellengthconstraint() (tacs.pytacs.pytacs method)": [[28, "tacs.pytacs.pyTACS.createPanelLengthConstraint"]], "createstaticproblem() (tacs.pytacs.pytacs method)": [[28, "tacs.pytacs.pyTACS.createStaticProblem"]], "createtacsprobsfrombdf() (tacs.pytacs.pytacs method)": [[28, "tacs.pytacs.pyTACS.createTACSProbsFromBDF"]], "createtransientproblem() (tacs.pytacs.pytacs method)": [[28, "tacs.pytacs.pyTACS.createTransientProblem"]], "createvec() (tacs.pytacs.pytacs method)": [[28, "tacs.pytacs.pyTACS.createVec"]], "createvolumeconstraint() (tacs.pytacs.pytacs method)": [[28, "tacs.pytacs.pyTACS.createVolumeConstraint"]], "dtype (tacs.pytacs.pytacs attribute)": [[28, "tacs.pytacs.pyTACS.dtype"]], "elemcallback() (in module tacs.pytacs)": [[28, "tacs.pytacs.elemCallBack"]], "getbdfinfo() (tacs.pytacs.pytacs method)": [[28, "tacs.pytacs.pyTACS.getBDFInfo"]], "getcompnames() (tacs.pytacs.pytacs method)": [[28, "tacs.pytacs.pyTACS.getCompNames"]], "getdesignvarrange() (tacs.pytacs.pytacs method)": [[28, "tacs.pytacs.pyTACS.getDesignVarRange"]], "getglobaldvkeys() (tacs.pytacs.pytacs method)": [[28, "tacs.pytacs.pyTACS.getGlobalDVKeys"]], "getglobaldvnums() (tacs.pytacs.pytacs method)": [[28, "tacs.pytacs.pyTACS.getGlobalDVNums"]], "getglobaldvs() (tacs.pytacs.pytacs method)": [[28, "tacs.pytacs.pyTACS.getGlobalDVs"]], "getglobalnodeidsforcomps() (tacs.pytacs.pytacs method)": [[28, "tacs.pytacs.pyTACS.getGlobalNodeIDsForComps"]], "getlocalmultipliernodeids() (tacs.pytacs.pytacs method)": [[28, "tacs.pytacs.pyTACS.getLocalMultiplierNodeIDs"]], "getlocalnodeidsforcomps() (tacs.pytacs.pytacs method)": [[28, "tacs.pytacs.pyTACS.getLocalNodeIDsForComps"]], "getnumcomponents() (tacs.pytacs.pytacs method)": [[28, "tacs.pytacs.pyTACS.getNumComponents"]], "getnumdesignvars() (tacs.pytacs.pytacs method)": [[28, "tacs.pytacs.pyTACS.getNumDesignVars"]], "getnumownedmultipliernodes() (tacs.pytacs.pytacs method)": [[28, "tacs.pytacs.pyTACS.getNumOwnedMultiplierNodes"]], "getnumownednodes() (tacs.pytacs.pytacs method)": [[28, "tacs.pytacs.pyTACS.getNumOwnedNodes"]], "getoption() (tacs.pytacs.pytacs method)": [[28, "tacs.pytacs.pyTACS.getOption"]], "getorigdesignvars() (tacs.pytacs.pytacs method)": [[28, "tacs.pytacs.pyTACS.getOrigDesignVars"]], "getorignodes() (tacs.pytacs.pytacs method)": [[28, "tacs.pytacs.pyTACS.getOrigNodes"]], "gettotalnumdesignvars() (tacs.pytacs.pytacs method)": [[28, "tacs.pytacs.pyTACS.getTotalNumDesignVars"]], "gettotalnumglobaldvs() (tacs.pytacs.pytacs method)": [[28, "tacs.pytacs.pyTACS.getTotalNumGlobalDVs"]], "getvarspernode() (tacs.pytacs.pytacs method)": [[28, "tacs.pytacs.pyTACS.getVarsPerNode"]], "initialize() (tacs.pytacs.pytacs method)": [[28, "tacs.pytacs.pyTACS.initialize"]], "isnonlinear (tacs.pytacs.pytacs property)": [[28, "tacs.pytacs.pyTACS.isNonlinear"]], "printdefaultoptions() (tacs.pytacs.pytacs class method)": [[28, "tacs.pytacs.pyTACS.printDefaultOptions"]], "printmodifiedoptions() (tacs.pytacs.pytacs method)": [[28, "tacs.pytacs.pyTACS.printModifiedOptions"]], "printoptions() (tacs.pytacs.pytacs method)": [[28, "tacs.pytacs.pyTACS.printOptions"]], "pytacs (class in tacs.pytacs)": [[28, "tacs.pytacs.pyTACS"]], "selectcompids() (tacs.pytacs.pytacs method)": [[28, "tacs.pytacs.pyTACS.selectCompIDs"]], "setbcsinvec() (tacs.pytacs.pytacs method)": [[28, "tacs.pytacs.pyTACS.setBCsInVec"]], "setoption() (tacs.pytacs.pytacs method)": [[28, "tacs.pytacs.pyTACS.setOption"]], "setoptions() (tacs.pytacs.pytacs method)": [[28, "tacs.pytacs.pyTACS.setOptions"]], "tacs.pytacs": [[28, "module-tacs.pytacs"]], "writebdf() (tacs.pytacs.pytacs method)": [[28, "tacs.pytacs.pyTACS.writeBDF"]], "staticproblem (class in tacs.problems)": [[30, "tacs.problems.StaticProblem"]], "addadjointresproducts() (tacs.problems.staticproblem method)": [[30, "tacs.problems.StaticProblem.addAdjointResProducts"]], "addadjointresxptsensproducts() (tacs.problems.staticproblem method)": [[30, "tacs.problems.StaticProblem.addAdjointResXptSensProducts"]], "addcentrifugalload() (tacs.problems.staticproblem method)": [[30, "tacs.problems.StaticProblem.addCentrifugalLoad"]], "adddvsens() (tacs.problems.staticproblem method)": [[30, "tacs.problems.StaticProblem.addDVSens"]], "addfunction() (tacs.problems.staticproblem method)": [[30, "tacs.problems.StaticProblem.addFunction"]], "addinertialload() (tacs.problems.staticproblem method)": [[30, "tacs.problems.StaticProblem.addInertialLoad"]], "addloadfrombdf() (tacs.problems.staticproblem method)": [[30, "tacs.problems.StaticProblem.addLoadFromBDF"]], "addloadtocomponents() (tacs.problems.staticproblem method)": [[30, "tacs.problems.StaticProblem.addLoadToComponents"]], "addloadtonodes() (tacs.problems.staticproblem method)": [[30, "tacs.problems.StaticProblem.addLoadToNodes"]], "addloadtorhs() (tacs.problems.staticproblem method)": [[30, "tacs.problems.StaticProblem.addLoadToRHS"]], "addpressuretocomponents() (tacs.problems.staticproblem method)": [[30, "tacs.problems.StaticProblem.addPressureToComponents"]], "addpressuretoelements() (tacs.problems.staticproblem method)": [[30, "tacs.problems.StaticProblem.addPressureToElements"]], "addsvsens() (tacs.problems.staticproblem method)": [[30, "tacs.problems.StaticProblem.addSVSens"]], "addtractiontocomponents() (tacs.problems.staticproblem method)": [[30, "tacs.problems.StaticProblem.addTractionToComponents"]], "addtractiontoelements() (tacs.problems.staticproblem method)": [[30, "tacs.problems.StaticProblem.addTractionToElements"]], "addtransposejacvecproduct() (tacs.problems.staticproblem method)": [[30, "tacs.problems.StaticProblem.addTransposeJacVecProduct"]], "addxptsens() (tacs.problems.staticproblem method)": [[30, "tacs.problems.StaticProblem.addXptSens"]], "dtype (tacs.problems.staticproblem attribute)": [[30, "tacs.problems.StaticProblem.dtype"]], "evalfunctions() (tacs.problems.staticproblem method)": [[30, "tacs.problems.StaticProblem.evalFunctions"]], "evalfunctionssens() (tacs.problems.staticproblem method)": [[30, "tacs.problems.StaticProblem.evalFunctionsSens"]], "getdesignvarrange() (tacs.problems.staticproblem method)": [[30, "tacs.problems.StaticProblem.getDesignVarRange"]], "getdesignvars() (tacs.problems.staticproblem method)": [[30, "tacs.problems.StaticProblem.getDesignVars"]], "getforces() (tacs.problems.staticproblem method)": [[30, "tacs.problems.StaticProblem.getForces"]], "getfunctionkeys() (tacs.problems.staticproblem method)": [[30, "tacs.problems.StaticProblem.getFunctionKeys"]], "getjacobian() (tacs.problems.staticproblem method)": [[30, "tacs.problems.StaticProblem.getJacobian"]], "getloadscale() (tacs.problems.staticproblem method)": [[30, "tacs.problems.StaticProblem.getLoadScale"]], "getnodes() (tacs.problems.staticproblem method)": [[30, "tacs.problems.StaticProblem.getNodes"]], "getnumcoordinates() (tacs.problems.staticproblem method)": [[30, "tacs.problems.StaticProblem.getNumCoordinates"]], "getnumdesignvars() (tacs.problems.staticproblem method)": [[30, "tacs.problems.StaticProblem.getNumDesignVars"]], "getnumownednodes() (tacs.problems.staticproblem method)": [[30, "tacs.problems.StaticProblem.getNumOwnedNodes"]], "getnumvariables() (tacs.problems.staticproblem method)": [[30, "tacs.problems.StaticProblem.getNumVariables"]], "getoption() (tacs.problems.staticproblem method)": [[30, "tacs.problems.StaticProblem.getOption"]], "getoutputfilename() (tacs.problems.staticproblem method)": [[30, "tacs.problems.StaticProblem.getOutputFileName"]], "getresidual() (tacs.problems.staticproblem method)": [[30, "tacs.problems.StaticProblem.getResidual"]], "getvariables() (tacs.problems.staticproblem method)": [[30, "tacs.problems.StaticProblem.getVariables"]], "getvarspernode() (tacs.problems.staticproblem method)": [[30, "tacs.problems.StaticProblem.getVarsPerNode"]], "isnonlinear (tacs.problems.staticproblem property)": [[30, "tacs.problems.StaticProblem.isNonlinear"]], "loadscale (tacs.problems.staticproblem property)": [[30, "tacs.problems.StaticProblem.loadScale"]], "printdefaultoptions() (tacs.problems.staticproblem class method)": [[30, "tacs.problems.StaticProblem.printDefaultOptions"]], "printmodifiedoptions() (tacs.problems.staticproblem method)": [[30, "tacs.problems.StaticProblem.printModifiedOptions"]], "printoptions() (tacs.problems.staticproblem method)": [[30, "tacs.problems.StaticProblem.printOptions"]], "setdesignvars() (tacs.problems.staticproblem method)": [[30, "tacs.problems.StaticProblem.setDesignVars"]], "setloadscale() (tacs.problems.staticproblem method)": [[30, "tacs.problems.StaticProblem.setLoadScale"]], "setnodes() (tacs.problems.staticproblem method)": [[30, "tacs.problems.StaticProblem.setNodes"]], "setoption() (tacs.problems.staticproblem method)": [[30, "tacs.problems.StaticProblem.setOption"]], "setoptions() (tacs.problems.staticproblem method)": [[30, "tacs.problems.StaticProblem.setOptions"]], "setvarname() (tacs.problems.staticproblem method)": [[30, "tacs.problems.StaticProblem.setVarName"]], "setvariables() (tacs.problems.staticproblem method)": [[30, "tacs.problems.StaticProblem.setVariables"]], "solve() (tacs.problems.staticproblem method)": [[30, "tacs.problems.StaticProblem.solve"]], "solveadjoint() (tacs.problems.staticproblem method)": [[30, "tacs.problems.StaticProblem.solveAdjoint"]], "tacs.problems.static": [[30, "module-tacs.problems.static"]], "updatejacobian() (tacs.problems.staticproblem method)": [[30, "tacs.problems.StaticProblem.updateJacobian"]], "updatepreconditioner() (tacs.problems.staticproblem method)": [[30, "tacs.problems.StaticProblem.updatePreconditioner"]], "writeloadtobdf() (tacs.problems.staticproblem method)": [[30, "tacs.problems.StaticProblem.writeLoadToBDF"]], "writesensfile() (tacs.problems.staticproblem method)": [[30, "tacs.problems.StaticProblem.writeSensFile"]], "writesolution() (tacs.problems.staticproblem method)": [[30, "tacs.problems.StaticProblem.writeSolution"]], "writesolutionhistory() (tacs.problems.staticproblem method)": [[30, "tacs.problems.StaticProblem.writeSolutionHistory"]], "zeroloads() (tacs.problems.staticproblem method)": [[30, "tacs.problems.StaticProblem.zeroLoads"]], "zerovariables() (tacs.problems.staticproblem method)": [[30, "tacs.problems.StaticProblem.zeroVariables"]], "transientproblem (class in tacs.problems)": [[31, "tacs.problems.TransientProblem"]], "addcentrifugalload() (tacs.problems.transientproblem method)": [[31, "tacs.problems.TransientProblem.addCentrifugalLoad"]], "addfunction() (tacs.problems.transientproblem method)": [[31, "tacs.problems.TransientProblem.addFunction"]], "addinertialload() (tacs.problems.transientproblem method)": [[31, "tacs.problems.TransientProblem.addInertialLoad"]], "addloadfrombdf() (tacs.problems.transientproblem method)": [[31, "tacs.problems.TransientProblem.addLoadFromBDF"]], "addloadtocomponents() (tacs.problems.transientproblem method)": [[31, "tacs.problems.TransientProblem.addLoadToComponents"]], "addloadtonodes() (tacs.problems.transientproblem method)": [[31, "tacs.problems.TransientProblem.addLoadToNodes"]], "addloadtorhs() (tacs.problems.transientproblem method)": [[31, "tacs.problems.TransientProblem.addLoadToRHS"]], "addpressuretocomponents() (tacs.problems.transientproblem method)": [[31, "tacs.problems.TransientProblem.addPressureToComponents"]], "addpressuretoelements() (tacs.problems.transientproblem method)": [[31, "tacs.problems.TransientProblem.addPressureToElements"]], "addtractiontocomponents() (tacs.problems.transientproblem method)": [[31, "tacs.problems.TransientProblem.addTractionToComponents"]], "addtractiontoelements() (tacs.problems.transientproblem method)": [[31, "tacs.problems.TransientProblem.addTractionToElements"]], "dtype (tacs.problems.transientproblem attribute)": [[31, "tacs.problems.TransientProblem.dtype"]], "evalfunctions() (tacs.problems.transientproblem method)": [[31, "tacs.problems.TransientProblem.evalFunctions"]], "evalfunctionssens() (tacs.problems.transientproblem method)": [[31, "tacs.problems.TransientProblem.evalFunctionsSens"]], "getdesignvarrange() (tacs.problems.transientproblem method)": [[31, "tacs.problems.TransientProblem.getDesignVarRange"]], "getdesignvars() (tacs.problems.transientproblem method)": [[31, "tacs.problems.TransientProblem.getDesignVars"]], "getfunctionkeys() (tacs.problems.transientproblem method)": [[31, "tacs.problems.TransientProblem.getFunctionKeys"]], "getnodes() (tacs.problems.transientproblem method)": [[31, "tacs.problems.TransientProblem.getNodes"]], "getnumcoordinates() (tacs.problems.transientproblem method)": [[31, "tacs.problems.TransientProblem.getNumCoordinates"]], "getnumdesignvars() (tacs.problems.transientproblem method)": [[31, "tacs.problems.TransientProblem.getNumDesignVars"]], "getnumownednodes() (tacs.problems.transientproblem method)": [[31, "tacs.problems.TransientProblem.getNumOwnedNodes"]], "getnumtimestages() (tacs.problems.transientproblem method)": [[31, "tacs.problems.TransientProblem.getNumTimeStages"]], "getnumtimesteps() (tacs.problems.transientproblem method)": [[31, "tacs.problems.TransientProblem.getNumTimeSteps"]], "getnumvariables() (tacs.problems.transientproblem method)": [[31, "tacs.problems.TransientProblem.getNumVariables"]], "getoption() (tacs.problems.transientproblem method)": [[31, "tacs.problems.TransientProblem.getOption"]], "gettimestages() (tacs.problems.transientproblem method)": [[31, "tacs.problems.TransientProblem.getTimeStages"]], "gettimesteps() (tacs.problems.transientproblem method)": [[31, "tacs.problems.TransientProblem.getTimeSteps"]], "getvariables() (tacs.problems.transientproblem method)": [[31, "tacs.problems.TransientProblem.getVariables"]], "getvarspernode() (tacs.problems.transientproblem method)": [[31, "tacs.problems.TransientProblem.getVarsPerNode"]], "isnonlinear (tacs.problems.transientproblem property)": [[31, "tacs.problems.TransientProblem.isNonlinear"]], "iterate() (tacs.problems.transientproblem method)": [[31, "tacs.problems.TransientProblem.iterate"]], "prepiterativesolve() (tacs.problems.transientproblem method)": [[31, "tacs.problems.TransientProblem.prepIterativeSolve"]], "printdefaultoptions() (tacs.problems.transientproblem class method)": [[31, "tacs.problems.TransientProblem.printDefaultOptions"]], "printmodifiedoptions() (tacs.problems.transientproblem method)": [[31, "tacs.problems.TransientProblem.printModifiedOptions"]], "printoptions() (tacs.problems.transientproblem method)": [[31, "tacs.problems.TransientProblem.printOptions"]], "setdesignvars() (tacs.problems.transientproblem method)": [[31, "tacs.problems.TransientProblem.setDesignVars"]], "setinitconditions() (tacs.problems.transientproblem method)": [[31, "tacs.problems.TransientProblem.setInitConditions"]], "setnodes() (tacs.problems.transientproblem method)": [[31, "tacs.problems.TransientProblem.setNodes"]], "setoption() (tacs.problems.transientproblem method)": [[31, "tacs.problems.TransientProblem.setOption"]], "setoptions() (tacs.problems.transientproblem method)": [[31, "tacs.problems.TransientProblem.setOptions"]], "setvarname() (tacs.problems.transientproblem method)": [[31, "tacs.problems.TransientProblem.setVarName"]], "solve() (tacs.problems.transientproblem method)": [[31, "tacs.problems.TransientProblem.solve"]], "tacs.problems.transient": [[31, "module-tacs.problems.transient"]], "writesensfile() (tacs.problems.transientproblem method)": [[31, "tacs.problems.TransientProblem.writeSensFile"]], "writesolution() (tacs.problems.transientproblem method)": [[31, "tacs.problems.TransientProblem.writeSolution"]], "zeroloads() (tacs.problems.transientproblem method)": [[31, "tacs.problems.TransientProblem.zeroLoads"]], "volumeconstraint (class in tacs.constraints)": [[32, "tacs.constraints.VolumeConstraint"]], "addconstraint() (tacs.constraints.volumeconstraint method)": [[32, "tacs.constraints.VolumeConstraint.addConstraint"]], "dtype (tacs.constraints.volumeconstraint attribute)": [[32, "tacs.constraints.VolumeConstraint.dtype"]], "evalconstraints() (tacs.constraints.volumeconstraint method)": [[32, "tacs.constraints.VolumeConstraint.evalConstraints"]], "evalconstraintssens() (tacs.constraints.volumeconstraint method)": [[32, "tacs.constraints.VolumeConstraint.evalConstraintsSens"]], "getconstraintbounds() (tacs.constraints.volumeconstraint method)": [[32, "tacs.constraints.VolumeConstraint.getConstraintBounds"]], "getconstraintkeys() (tacs.constraints.volumeconstraint method)": [[32, "tacs.constraints.VolumeConstraint.getConstraintKeys"]], "getconstraintsizes() (tacs.constraints.volumeconstraint method)": [[32, "tacs.constraints.VolumeConstraint.getConstraintSizes"]], "getdesignvarrange() (tacs.constraints.volumeconstraint method)": [[32, "tacs.constraints.VolumeConstraint.getDesignVarRange"]], "getdesignvars() (tacs.constraints.volumeconstraint method)": [[32, "tacs.constraints.VolumeConstraint.getDesignVars"]], "getnodes() (tacs.constraints.volumeconstraint method)": [[32, "tacs.constraints.VolumeConstraint.getNodes"]], "getnumcoordinates() (tacs.constraints.volumeconstraint method)": [[32, "tacs.constraints.VolumeConstraint.getNumCoordinates"]], "getnumdesignvars() (tacs.constraints.volumeconstraint method)": [[32, "tacs.constraints.VolumeConstraint.getNumDesignVars"]], "getnumownednodes() (tacs.constraints.volumeconstraint method)": [[32, "tacs.constraints.VolumeConstraint.getNumOwnedNodes"]], "getnumvariables() (tacs.constraints.volumeconstraint method)": [[32, "tacs.constraints.VolumeConstraint.getNumVariables"]], "getoption() (tacs.constraints.volumeconstraint method)": [[32, "tacs.constraints.VolumeConstraint.getOption"]], "getvarspernode() (tacs.constraints.volumeconstraint method)": [[32, "tacs.constraints.VolumeConstraint.getVarsPerNode"]], "printdefaultoptions() (tacs.constraints.volumeconstraint class method)": [[32, "tacs.constraints.VolumeConstraint.printDefaultOptions"]], "printmodifiedoptions() (tacs.constraints.volumeconstraint method)": [[32, "tacs.constraints.VolumeConstraint.printModifiedOptions"]], "printoptions() (tacs.constraints.volumeconstraint method)": [[32, "tacs.constraints.VolumeConstraint.printOptions"]], "setdesignvars() (tacs.constraints.volumeconstraint method)": [[32, "tacs.constraints.VolumeConstraint.setDesignVars"]], "setnodes() (tacs.constraints.volumeconstraint method)": [[32, "tacs.constraints.VolumeConstraint.setNodes"]], "setoption() (tacs.constraints.volumeconstraint method)": [[32, "tacs.constraints.VolumeConstraint.setOption"]], "setoptions() (tacs.constraints.volumeconstraint method)": [[32, "tacs.constraints.VolumeConstraint.setOptions"]], "setvarname() (tacs.constraints.volumeconstraint method)": [[32, "tacs.constraints.VolumeConstraint.setVarName"]], "tacs.constraints.volume": [[32, "module-tacs.constraints.volume"]], "writevisualization() (tacs.constraints.volumeconstraint method)": [[32, "tacs.constraints.VolumeConstraint.writeVisualization"]]}})