name: Build, unit tests, and docs

on:
  # Triggers the workflow on push or pull request events but only for the main branch
  # Remove push when finally merging.
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab.
  workflow_dispatch:

jobs:
  # This job is called test_docs.
  unit_test_and_docs:
    # Recommended if you intend to make multiple deployments in quick succession.
    concurrency: ci-${{ github.ref }}
    # Run on Ubuntu
    runs-on: ubuntu-latest
    # Necessary to prevent mpi tests failing due to lack of slots
    env:
      OMPI_MCA_btl: self,tcp
      OMPI_MCA_rmaps_base_oversubscribe: 1

    strategy:
      fail-fast: false
      matrix:
        include:
          # real versions
          - NAME: Real
            OPTIONAL: 'default'
            INTERFACE: 'interface'
            EXAMPLES: 'default'
            PUBLISH_DOCS: true

          # complex versions
          - NAME: Complex
            OPTIONAL: 'complex'
            INTERFACE: 'complex_interface'
            EXAMPLES: 'complex'
            PUBLISH_DOCS: false

    name: TACS ${{ matrix.NAME }} Build/Test/Docs

    steps:
      - name: Display run details
        run: |
          echo "=============================================================";
          echo "Run #${GITHUB_RUN_NUMBER}";
          echo "Run ID: ${GITHUB_RUN_ID}";
          lscpu;
          echo "Testing: ${GITHUB_REPOSITORY}";
          echo "Triggered by: ${GITHUB_EVENT_NAME}";
          echo "Initiated by: ${GITHUB_ACTOR}";
          echo "=============================================================";

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it.
      - uses: actions/checkout@v2
      - name: Setup miniconda
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          python-version: 3.8

      - name: Install TACS
        shell: bash -l {0}
        run: |
          export TACS_DIR=${GITHUB_WORKSPACE};
          echo "TACS_DIR=${GITHUB_WORKSPACE}" >> $GITHUB_ENV
          conda install -c anaconda openmpi -q -y;
          conda install gxx_linux-64 -q -y;
          conda install -c anaconda openblas -q -y;
          conda install -c conda-forge lapack -q -y;
          conda install -c conda-forge metis -q -y;
          cd $TACS_DIR;
          cp Makefile.in.info Makefile.in;
          make ${{ matrix.OPTIONAL }} TACS_DIR=$TACS_DIR METIS_INCLUDE=-I${CONDA_PREFIX}/include/ METIS_LIB="-L${CONDA_PREFIX}/lib/ -lmetis";
          cd $TACS_DIR;
          make ${{ matrix.INTERFACE }};
          cd $TACS_DIR/examples;
          make ${{ matrix.EXAMPLES }} TACS_DIR=$TACS_DIR METIS_INCLUDE=-I${CONDA_PREFIX}/include/ METIS_LIB="-L${CONDA_PREFIX}/lib/ -lmetis";
      - name: Run unit tests
        shell: bash -l {0}
        run: |
          pip install testflo;
          testflo .;
      - name: Building docs
        shell: bash -l {0}
        run: |
          cd $TACS_DIR/docs;
          conda install -c conda-forge sphinx breathe sphinxcontrib-programoutput -q -y;
          make html BUILDDIR=.;
          cd html;
          zip -r ../tacs-docs.zip .;
      - name: 'Upload docs'
        if: ${{ matrix.PUBLISH_DOCS }}
        uses: actions/upload-artifact@v2
        with:
          name: tacs-docs
          path: docs/tacs-docs.zip
          retention-days: 7
      - name: 'Deploy docs'
        if: ${{ github.event_name == 'push' && matrix.PUBLISH_DOCS }}
        uses: JamesIves/github-pages-deploy-action@v4.2.5
        with:
          branch: gh-pages # The branch the action should deploy to.
          folder: docs/html/ # The folder the action should deploy.
      - name: Setup tmate session
        if: ${{ failure() }}
        uses: mxschmitt/action-tmate@v3
        with:
          shell: bash -l {0}