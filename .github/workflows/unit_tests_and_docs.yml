name: Build, unit tests, and docs

on:
  # Triggers the workflow on push or pull request events but only for the main branch
  # Remove push when finally merging.
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab.
  workflow_dispatch:

jobs:
  # This job is called test_docs.
  unit_test_and_docs:
    # Run on Ubuntu
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        include:
          # real versions
          - NAME: Real
            OPTIONAL: 'default'
            INTERFACE: 'interface'
            EXAMPLES: 'default'

          # complex versions
          - NAME: Complex
            OPTIONAL: 'complex'
            INTERFACE: 'complex_interface'
            EXAMPLES: 'complex'

    name: TACS ${{ matrix.NAME }} Build/Test/Docs

    steps:

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it.
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install, run unit tests, build docs
        run: |
          echo "=============================================================";
          echo "Run #${GITHUB_RUN_NUMBER}";
          echo "Run ID: ${GITHUB_RUN_ID}";
          lscpu;
          echo "Testing: ${GITHUB_REPOSITORY}";
          echo "Triggered by: ${GITHUB_EVENT_NAME}";
          echo "Initiated by: ${GITHUB_ACTOR}";
          echo "=============================================================";
          echo "=============================================================";
          echo "Create conda environment";
          echo "=============================================================";
          source $CONDA/etc/profile.d/conda.sh;
          echo $CONDA/bin >> $GITHUB_PATH;
          conda create -n TACS python=3.8 numpy=1.18 scipy=1.4 -q -y;
          conda activate TACS;
          echo "=============================================================";
          echo "Install TACS";
          echo "=============================================================";
          export TACS_DIR=${GITHUB_WORKSPACE};
          pip install testflo;
          conda install -c anaconda openmpi -q -y;
          # Necessary to prevent mpi tests failing due to lack of slots
          export OMPI_MCA_btl=self,tcp;
          export OMPI_MCA_rmaps_base_oversubscribe=1;
          conda install gxx_linux-64 -q -y;
          conda install -c anaconda openblas -q -y;
          conda install -c conda-forge lapack -q -y;
          conda install -c conda-forge metis -q -y;
          conda install -c conda-forge mpi4py  -q -y;
          pip install cython;
          pip install pynastran;
          cd $TACS_DIR;
          cp Makefile.in.info Makefile.in;
          make ${{ matrix.OPTIONAL }} TACS_DIR=$TACS_DIR METIS_INCLUDE=-I${CONDA_PREFIX}/include/ METIS_LIB="-L${CONDA_PREFIX}/lib/ -lmetis";
          cd $TACS_DIR;
          make ${{ matrix.INTERFACE }};
          export PYTHONPATH=$PYTHONPATH:$TACS_DIR;
          cd $TACS_DIR/examples;
          make ${{ matrix.EXAMPLES }} TACS_DIR=$TACS_DIR METIS_INCLUDE=-I${CONDA_PREFIX}/include/ METIS_LIB="-L${CONDA_PREFIX}/lib/ -lmetis";
          cd $TACS_DIR;
          echo "=============================================================";
          echo "running tests";
          echo "=============================================================";
          testflo .;
          echo "=============================================================";
          echo "building docs";
          echo "=============================================================";
          cd $TACS_DIR/docs;
          conda install -c conda-forge sphinx  -q -y;
          conda install -c conda-forge breathe -q -y;
          conda install -c conda-forge sphinxcontrib-programoutput -q -y;
          make html BUILDDIR=.;
          cd html;
          zip -r ./tacs-docs.zip .;
      - name: 'Upload docs'
        if: ${{ matrix.name == 'Real' }}
        uses: actions/upload-artifact@v2
        with:
          name: tacs-docs
          path: docs/html/tacs-docs.zip
          retention-days: 7