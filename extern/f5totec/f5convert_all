#!/bin/bash

helpstring="

This command runs f5totec in parallel on all .f5 files in the current directory

Usage:

To convert .f5 files in the current directory using all available procs:
> `basename $0`

By default, `basename $0` will ignore any .f5 files for which there is a corresponding .plt file newer than the .f5 file
To convert all .f5 files overwriting existing .plt files:
> `basename $0` -r

To run on N procs:
> `basename $0` -n N

To supress the echoing of which files will and won't be converted (does not supress f5totec's own output):
> `basename $0` -q

This script uses GNU parallel which can be installed on debian using:
> sudo apt-get install parallel


"

if [ "$1" == "-h" ]; then
	echo "$helpstring"
	exit 0
fi

if ! command -v parallel &> /dev/null
then
    echo "parallel could not be found, please install it to use f5convert_all"
    exit
fi

# Parse input options
reconvert=false
quiet=false
extra_args=""
nprocs=+0
while [[ "$#" -gt 0 ]]; do case $1 in
	-n|--nprocs) nprocs=$2; shift;;
	-q|--quiet) quiet=true; shift;;
	-r|--reconvert) reconvert=true;;
	*) echo "Unknown parameter passed: $1"; exit 1;;
esac; shift; done

# Tell the user which files will and won't be converted'
filesToConvert=()
for f in *.f5;
do
	if   ([ ! -f "${f%.*}.plt" ] && [ ! -f "${f%.*}.szplt" ]) || [ $reconvert = true ] ; then
		# If there is not .plt or .szplt file corresponding to the current .f5 or is user specified -r then convert the file
		filesToConvert[${#filesToConvert[@]}]=$f
		echo "$f" 'will be converted'
	elif [ -f "${f%.*}.plt" ] ; then
		if [ "${f%.*}.plt" -ot "$f" ] ; then
			# If there is a .plt file but it's older than the corresponding .f5 file then convert the .f5 file
			echo "$f" 'will be converted as it is newer than' "${f%.*}.plt"
			filesToConvert[${#filesToConvert[@]}]=$f
		else
			echo "$f" 'will not be converted as' "${f%.*}.plt" 'already exists, to force overwriting use the -r flag'
		fi
	elif [ -f "${f%.*}.szplt" ] ; then
		if [ "${f%.*}.szplt" -ot "$f" ] ; then
			# If there is a .szplt file but it's older than the corresponding .f5 file then convert the .f5 file
			echo "$f" 'will be converted as it is newer than' "${f%.*}.szplt"
			filesToConvert[${#filesToConvert[@]}]=$f
		else
			echo "$f" 'will not be converted as' "${f%.*}.szplt" 'already exists, to force overwriting use the -r flag'
		fi
	fi
done

# Do the conversion
for f in "${filesToConvert[@]}";
do
	echo "$f"
done | parallel --will-cite -j$nprocs f5totec {}
